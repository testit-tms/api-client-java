/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.WorkItemGroupGetModelSelectModel;
import ru.testit.client.model.WorkItemGroupType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import ru.testit.client.invoker.JSON;

/**
 * ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest {
  public static final String SERIALIZED_NAME_SELECT_MODEL = "selectModel";
  @SerializedName(SERIALIZED_NAME_SELECT_MODEL)
  private WorkItemGroupGetModelSelectModel selectModel;

  public static final String SERIALIZED_NAME_GROUP_TYPE = "groupType";
  @SerializedName(SERIALIZED_NAME_GROUP_TYPE)
  private WorkItemGroupType groupType;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTE_ID = "customAttributeId";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTE_ID)
  private UUID customAttributeId;

  public ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest() {
  }

  public ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest selectModel(WorkItemGroupGetModelSelectModel selectModel) {
    
    this.selectModel = selectModel;
    return this;
  }

   /**
   * Get selectModel
   * @return selectModel
  **/
  @javax.annotation.Nullable
  public WorkItemGroupGetModelSelectModel getSelectModel() {
    return selectModel;
  }


  public void setSelectModel(WorkItemGroupGetModelSelectModel selectModel) {
    this.selectModel = selectModel;
  }


  public ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest groupType(WorkItemGroupType groupType) {
    
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @javax.annotation.Nonnull
  public WorkItemGroupType getGroupType() {
    return groupType;
  }


  public void setGroupType(WorkItemGroupType groupType) {
    this.groupType = groupType;
  }


  public ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest customAttributeId(UUID customAttributeId) {
    
    this.customAttributeId = customAttributeId;
    return this;
  }

   /**
   * Get customAttributeId
   * @return customAttributeId
  **/
  @javax.annotation.Nullable
  public UUID getCustomAttributeId() {
    return customAttributeId;
  }


  public void setCustomAttributeId(UUID customAttributeId) {
    this.customAttributeId = customAttributeId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest apiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest = (ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest) o;
    return Objects.equals(this.selectModel, apiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.selectModel) &&
        Objects.equals(this.groupType, apiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.groupType) &&
        Objects.equals(this.customAttributeId, apiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.customAttributeId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(selectModel, groupType, customAttributeId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest {\n");
    sb.append("    selectModel: ").append(toIndentedString(selectModel)).append("\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    customAttributeId: ").append(toIndentedString(customAttributeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("selectModel");
    openapiFields.add("groupType");
    openapiFields.add("customAttributeId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("groupType");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest is not found in the empty JSON string", ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `selectModel`
      if (jsonObj.get("selectModel") != null && !jsonObj.get("selectModel").isJsonNull()) {
        WorkItemGroupGetModelSelectModel.validateJsonObject(jsonObj.getAsJsonObject("selectModel"));
      }
      if ((jsonObj.get("customAttributeId") != null && !jsonObj.get("customAttributeId").isJsonNull()) && !jsonObj.get("customAttributeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customAttributeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customAttributeId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest>() {
           @Override
           public void write(JsonWriter out, ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest
  * @throws IOException if the JSON string is invalid with respect to ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest
  */
  public static ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest.class);
  }

 /**
  * Convert an instance of ApiV2ProjectsProjectIdWorkItemsSearchGroupedPostRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

