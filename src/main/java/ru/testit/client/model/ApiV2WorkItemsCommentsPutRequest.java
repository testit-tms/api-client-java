/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ApiV2WorkItemsCommentsPutRequest
 */
@JsonPropertyOrder({
  ApiV2WorkItemsCommentsPutRequest.JSON_PROPERTY_TEXT,
  ApiV2WorkItemsCommentsPutRequest.JSON_PROPERTY_ID
})
@JsonTypeName("_api_v2_workItems_comments_put_request")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ApiV2WorkItemsCommentsPutRequest {
  public static final String JSON_PROPERTY_TEXT = "text";
  private String text;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public ApiV2WorkItemsCommentsPutRequest() { 
  }

  public ApiV2WorkItemsCommentsPutRequest text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Text of the comment
   * @return text
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getText() {
    return text;
  }


  @JsonProperty(JSON_PROPERTY_TEXT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setText(String text) {
    this.text = text;
  }


  public ApiV2WorkItemsCommentsPutRequest id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID of the comment
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  /**
   * Return true if this _api_v2_workItems_comments_put_request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiV2WorkItemsCommentsPutRequest apiV2WorkItemsCommentsPutRequest = (ApiV2WorkItemsCommentsPutRequest) o;
    return Objects.equals(this.text, apiV2WorkItemsCommentsPutRequest.text) &&
        Objects.equals(this.id, apiV2WorkItemsCommentsPutRequest.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(text, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiV2WorkItemsCommentsPutRequest {\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

