/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AutoTestStepApiResult;
import ru.testit.client.model.ConfigurationShortApiResult;
import ru.testit.client.model.LabelApiResult;
import ru.testit.client.model.LinkApiResult;
import ru.testit.client.model.TestStatusApiResult;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutoTestApiResult
 */
@JsonPropertyOrder({
  AutoTestApiResult.JSON_PROPERTY_ID,
  AutoTestApiResult.JSON_PROPERTY_PROJECT_ID,
  AutoTestApiResult.JSON_PROPERTY_NAME,
  AutoTestApiResult.JSON_PROPERTY_IS_FLAKY,
  AutoTestApiResult.JSON_PROPERTY_GLOBAL_ID,
  AutoTestApiResult.JSON_PROPERTY_IS_DELETED,
  AutoTestApiResult.JSON_PROPERTY_MUST_BE_APPROVED,
  AutoTestApiResult.JSON_PROPERTY_CREATED_DATE,
  AutoTestApiResult.JSON_PROPERTY_CREATED_BY_ID,
  AutoTestApiResult.JSON_PROPERTY_EXTERNAL_ID,
  AutoTestApiResult.JSON_PROPERTY_NAMESPACE,
  AutoTestApiResult.JSON_PROPERTY_CLASSNAME,
  AutoTestApiResult.JSON_PROPERTY_STEPS,
  AutoTestApiResult.JSON_PROPERTY_SETUP,
  AutoTestApiResult.JSON_PROPERTY_TEARDOWN,
  AutoTestApiResult.JSON_PROPERTY_TITLE,
  AutoTestApiResult.JSON_PROPERTY_DESCRIPTION,
  AutoTestApiResult.JSON_PROPERTY_EXTERNAL_KEY,
  AutoTestApiResult.JSON_PROPERTY_MODIFIED_DATE,
  AutoTestApiResult.JSON_PROPERTY_MODIFIED_BY_ID,
  AutoTestApiResult.JSON_PROPERTY_LAST_TEST_RUN_ID,
  AutoTestApiResult.JSON_PROPERTY_LAST_TEST_RUN_NAME,
  AutoTestApiResult.JSON_PROPERTY_LAST_TEST_RESULT_ID,
  AutoTestApiResult.JSON_PROPERTY_LAST_TEST_RESULT_CONFIGURATION,
  AutoTestApiResult.JSON_PROPERTY_LAST_TEST_RESULT_OUTCOME,
  AutoTestApiResult.JSON_PROPERTY_LAST_TEST_RESULT_STATUS,
  AutoTestApiResult.JSON_PROPERTY_STABILITY_PERCENTAGE,
  AutoTestApiResult.JSON_PROPERTY_LINKS,
  AutoTestApiResult.JSON_PROPERTY_LABELS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class AutoTestApiResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IS_FLAKY = "isFlaky";
  private Boolean isFlaky;

  public static final String JSON_PROPERTY_GLOBAL_ID = "globalId";
  private Long globalId;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_MUST_BE_APPROVED = "mustBeApproved";
  private Boolean mustBeApproved;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private JsonNullable<String> externalId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAMESPACE = "namespace";
  private JsonNullable<String> namespace = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLASSNAME = "classname";
  private JsonNullable<String> classname = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STEPS = "steps";
  private JsonNullable<List<AutoTestStepApiResult>> steps = JsonNullable.<List<AutoTestStepApiResult>>undefined();

  public static final String JSON_PROPERTY_SETUP = "setup";
  private JsonNullable<List<AutoTestStepApiResult>> setup = JsonNullable.<List<AutoTestStepApiResult>>undefined();

  public static final String JSON_PROPERTY_TEARDOWN = "teardown";
  private JsonNullable<List<AutoTestStepApiResult>> teardown = JsonNullable.<List<AutoTestStepApiResult>>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_EXTERNAL_KEY = "externalKey";
  private JsonNullable<String> externalKey = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RUN_ID = "lastTestRunId";
  private JsonNullable<UUID> lastTestRunId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RUN_NAME = "lastTestRunName";
  private JsonNullable<String> lastTestRunName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RESULT_ID = "lastTestResultId";
  private JsonNullable<UUID> lastTestResultId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RESULT_CONFIGURATION = "lastTestResultConfiguration";
  private JsonNullable<ConfigurationShortApiResult> lastTestResultConfiguration = JsonNullable.<ConfigurationShortApiResult>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RESULT_OUTCOME = "lastTestResultOutcome";
  private JsonNullable<String> lastTestResultOutcome = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RESULT_STATUS = "lastTestResultStatus";
  private JsonNullable<TestStatusApiResult> lastTestResultStatus = JsonNullable.<TestStatusApiResult>undefined();

  public static final String JSON_PROPERTY_STABILITY_PERCENTAGE = "stabilityPercentage";
  private JsonNullable<Long> stabilityPercentage = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<LinkApiResult>> links = JsonNullable.<List<LinkApiResult>>undefined();

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<LabelApiResult>> labels = JsonNullable.<List<LabelApiResult>>undefined();

  public AutoTestApiResult() { 
  }

  public AutoTestApiResult id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AutoTestApiResult projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Get projectId
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public AutoTestApiResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public AutoTestApiResult isFlaky(Boolean isFlaky) {
    this.isFlaky = isFlaky;
    return this;
  }

  /**
   * Get isFlaky
   * @return isFlaky
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_FLAKY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsFlaky() {
    return isFlaky;
  }


  @JsonProperty(JSON_PROPERTY_IS_FLAKY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsFlaky(Boolean isFlaky) {
    this.isFlaky = isFlaky;
  }


  public AutoTestApiResult globalId(Long globalId) {
    this.globalId = globalId;
    return this;
  }

  /**
   * Get globalId
   * @return globalId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getGlobalId() {
    return globalId;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }


  public AutoTestApiResult isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public AutoTestApiResult mustBeApproved(Boolean mustBeApproved) {
    this.mustBeApproved = mustBeApproved;
    return this;
  }

  /**
   * Get mustBeApproved
   * @return mustBeApproved
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MUST_BE_APPROVED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getMustBeApproved() {
    return mustBeApproved;
  }


  @JsonProperty(JSON_PROPERTY_MUST_BE_APPROVED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMustBeApproved(Boolean mustBeApproved) {
    this.mustBeApproved = mustBeApproved;
  }


  public AutoTestApiResult createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public AutoTestApiResult createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Get createdById
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public AutoTestApiResult externalId(String externalId) {
    this.externalId = JsonNullable.<String>of(externalId);
    return this;
  }

  /**
   * Get externalId
   * @return externalId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getExternalId() {
        return externalId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExternalId_JsonNullable() {
    return externalId;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  public void setExternalId_JsonNullable(JsonNullable<String> externalId) {
    this.externalId = externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = JsonNullable.<String>of(externalId);
  }


  public AutoTestApiResult namespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
    return this;
  }

  /**
   * Get namespace
   * @return namespace
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getNamespace() {
        return namespace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNamespace_JsonNullable() {
    return namespace;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  public void setNamespace_JsonNullable(JsonNullable<String> namespace) {
    this.namespace = namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
  }


  public AutoTestApiResult classname(String classname) {
    this.classname = JsonNullable.<String>of(classname);
    return this;
  }

  /**
   * Get classname
   * @return classname
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getClassname() {
        return classname.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLASSNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClassname_JsonNullable() {
    return classname;
  }
  
  @JsonProperty(JSON_PROPERTY_CLASSNAME)
  public void setClassname_JsonNullable(JsonNullable<String> classname) {
    this.classname = classname;
  }

  public void setClassname(String classname) {
    this.classname = JsonNullable.<String>of(classname);
  }


  public AutoTestApiResult steps(List<AutoTestStepApiResult> steps) {
    this.steps = JsonNullable.<List<AutoTestStepApiResult>>of(steps);
    return this;
  }

  public AutoTestApiResult addStepsItem(AutoTestStepApiResult stepsItem) {
    if (this.steps == null || !this.steps.isPresent()) {
      this.steps = JsonNullable.<List<AutoTestStepApiResult>>of(new ArrayList<>());
    }
    try {
      this.steps.get().add(stepsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get steps
   * @return steps
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AutoTestStepApiResult> getSteps() {
        return steps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepApiResult>> getSteps_JsonNullable() {
    return steps;
  }
  
  @JsonProperty(JSON_PROPERTY_STEPS)
  public void setSteps_JsonNullable(JsonNullable<List<AutoTestStepApiResult>> steps) {
    this.steps = steps;
  }

  public void setSteps(List<AutoTestStepApiResult> steps) {
    this.steps = JsonNullable.<List<AutoTestStepApiResult>>of(steps);
  }


  public AutoTestApiResult setup(List<AutoTestStepApiResult> setup) {
    this.setup = JsonNullable.<List<AutoTestStepApiResult>>of(setup);
    return this;
  }

  public AutoTestApiResult addSetupItem(AutoTestStepApiResult setupItem) {
    if (this.setup == null || !this.setup.isPresent()) {
      this.setup = JsonNullable.<List<AutoTestStepApiResult>>of(new ArrayList<>());
    }
    try {
      this.setup.get().add(setupItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get setup
   * @return setup
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AutoTestStepApiResult> getSetup() {
        return setup.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepApiResult>> getSetup_JsonNullable() {
    return setup;
  }
  
  @JsonProperty(JSON_PROPERTY_SETUP)
  public void setSetup_JsonNullable(JsonNullable<List<AutoTestStepApiResult>> setup) {
    this.setup = setup;
  }

  public void setSetup(List<AutoTestStepApiResult> setup) {
    this.setup = JsonNullable.<List<AutoTestStepApiResult>>of(setup);
  }


  public AutoTestApiResult teardown(List<AutoTestStepApiResult> teardown) {
    this.teardown = JsonNullable.<List<AutoTestStepApiResult>>of(teardown);
    return this;
  }

  public AutoTestApiResult addTeardownItem(AutoTestStepApiResult teardownItem) {
    if (this.teardown == null || !this.teardown.isPresent()) {
      this.teardown = JsonNullable.<List<AutoTestStepApiResult>>of(new ArrayList<>());
    }
    try {
      this.teardown.get().add(teardownItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get teardown
   * @return teardown
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AutoTestStepApiResult> getTeardown() {
        return teardown.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEARDOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepApiResult>> getTeardown_JsonNullable() {
    return teardown;
  }
  
  @JsonProperty(JSON_PROPERTY_TEARDOWN)
  public void setTeardown_JsonNullable(JsonNullable<List<AutoTestStepApiResult>> teardown) {
    this.teardown = teardown;
  }

  public void setTeardown(List<AutoTestStepApiResult> teardown) {
    this.teardown = JsonNullable.<List<AutoTestStepApiResult>>of(teardown);
  }


  public AutoTestApiResult title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public AutoTestApiResult description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public AutoTestApiResult externalKey(String externalKey) {
    this.externalKey = JsonNullable.<String>of(externalKey);
    return this;
  }

  /**
   * Get externalKey
   * @return externalKey
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getExternalKey() {
        return externalKey.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_KEY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExternalKey_JsonNullable() {
    return externalKey;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_KEY)
  public void setExternalKey_JsonNullable(JsonNullable<String> externalKey) {
    this.externalKey = externalKey;
  }

  public void setExternalKey(String externalKey) {
    this.externalKey = JsonNullable.<String>of(externalKey);
  }


  public AutoTestApiResult modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Get modifiedDate
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public AutoTestApiResult modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Get modifiedById
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public AutoTestApiResult lastTestRunId(UUID lastTestRunId) {
    this.lastTestRunId = JsonNullable.<UUID>of(lastTestRunId);
    return this;
  }

  /**
   * Get lastTestRunId
   * @return lastTestRunId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getLastTestRunId() {
        return lastTestRunId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getLastTestRunId_JsonNullable() {
    return lastTestRunId;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RUN_ID)
  public void setLastTestRunId_JsonNullable(JsonNullable<UUID> lastTestRunId) {
    this.lastTestRunId = lastTestRunId;
  }

  public void setLastTestRunId(UUID lastTestRunId) {
    this.lastTestRunId = JsonNullable.<UUID>of(lastTestRunId);
  }


  public AutoTestApiResult lastTestRunName(String lastTestRunName) {
    this.lastTestRunName = JsonNullable.<String>of(lastTestRunName);
    return this;
  }

  /**
   * Get lastTestRunName
   * @return lastTestRunName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getLastTestRunName() {
        return lastTestRunName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RUN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastTestRunName_JsonNullable() {
    return lastTestRunName;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RUN_NAME)
  public void setLastTestRunName_JsonNullable(JsonNullable<String> lastTestRunName) {
    this.lastTestRunName = lastTestRunName;
  }

  public void setLastTestRunName(String lastTestRunName) {
    this.lastTestRunName = JsonNullable.<String>of(lastTestRunName);
  }


  public AutoTestApiResult lastTestResultId(UUID lastTestResultId) {
    this.lastTestResultId = JsonNullable.<UUID>of(lastTestResultId);
    return this;
  }

  /**
   * Get lastTestResultId
   * @return lastTestResultId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getLastTestResultId() {
        return lastTestResultId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getLastTestResultId_JsonNullable() {
    return lastTestResultId;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_ID)
  public void setLastTestResultId_JsonNullable(JsonNullable<UUID> lastTestResultId) {
    this.lastTestResultId = lastTestResultId;
  }

  public void setLastTestResultId(UUID lastTestResultId) {
    this.lastTestResultId = JsonNullable.<UUID>of(lastTestResultId);
  }


  public AutoTestApiResult lastTestResultConfiguration(ConfigurationShortApiResult lastTestResultConfiguration) {
    this.lastTestResultConfiguration = JsonNullable.<ConfigurationShortApiResult>of(lastTestResultConfiguration);
    return this;
  }

  /**
   * Get lastTestResultConfiguration
   * @return lastTestResultConfiguration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public ConfigurationShortApiResult getLastTestResultConfiguration() {
        return lastTestResultConfiguration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_CONFIGURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<ConfigurationShortApiResult> getLastTestResultConfiguration_JsonNullable() {
    return lastTestResultConfiguration;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_CONFIGURATION)
  public void setLastTestResultConfiguration_JsonNullable(JsonNullable<ConfigurationShortApiResult> lastTestResultConfiguration) {
    this.lastTestResultConfiguration = lastTestResultConfiguration;
  }

  public void setLastTestResultConfiguration(ConfigurationShortApiResult lastTestResultConfiguration) {
    this.lastTestResultConfiguration = JsonNullable.<ConfigurationShortApiResult>of(lastTestResultConfiguration);
  }


  public AutoTestApiResult lastTestResultOutcome(String lastTestResultOutcome) {
    this.lastTestResultOutcome = JsonNullable.<String>of(lastTestResultOutcome);
    return this;
  }

  /**
   * Get lastTestResultOutcome
   * @return lastTestResultOutcome
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getLastTestResultOutcome() {
        return lastTestResultOutcome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLastTestResultOutcome_JsonNullable() {
    return lastTestResultOutcome;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_OUTCOME)
  public void setLastTestResultOutcome_JsonNullable(JsonNullable<String> lastTestResultOutcome) {
    this.lastTestResultOutcome = lastTestResultOutcome;
  }

  public void setLastTestResultOutcome(String lastTestResultOutcome) {
    this.lastTestResultOutcome = JsonNullable.<String>of(lastTestResultOutcome);
  }


  public AutoTestApiResult lastTestResultStatus(TestStatusApiResult lastTestResultStatus) {
    this.lastTestResultStatus = JsonNullable.<TestStatusApiResult>of(lastTestResultStatus);
    return this;
  }

  /**
   * Get lastTestResultStatus
   * @return lastTestResultStatus
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public TestStatusApiResult getLastTestResultStatus() {
        return lastTestResultStatus.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TestStatusApiResult> getLastTestResultStatus_JsonNullable() {
    return lastTestResultStatus;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_STATUS)
  public void setLastTestResultStatus_JsonNullable(JsonNullable<TestStatusApiResult> lastTestResultStatus) {
    this.lastTestResultStatus = lastTestResultStatus;
  }

  public void setLastTestResultStatus(TestStatusApiResult lastTestResultStatus) {
    this.lastTestResultStatus = JsonNullable.<TestStatusApiResult>of(lastTestResultStatus);
  }


  public AutoTestApiResult stabilityPercentage(Long stabilityPercentage) {
    this.stabilityPercentage = JsonNullable.<Long>of(stabilityPercentage);
    return this;
  }

  /**
   * Get stabilityPercentage
   * @return stabilityPercentage
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getStabilityPercentage() {
        return stabilityPercentage.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STABILITY_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getStabilityPercentage_JsonNullable() {
    return stabilityPercentage;
  }
  
  @JsonProperty(JSON_PROPERTY_STABILITY_PERCENTAGE)
  public void setStabilityPercentage_JsonNullable(JsonNullable<Long> stabilityPercentage) {
    this.stabilityPercentage = stabilityPercentage;
  }

  public void setStabilityPercentage(Long stabilityPercentage) {
    this.stabilityPercentage = JsonNullable.<Long>of(stabilityPercentage);
  }


  public AutoTestApiResult links(List<LinkApiResult> links) {
    this.links = JsonNullable.<List<LinkApiResult>>of(links);
    return this;
  }

  public AutoTestApiResult addLinksItem(LinkApiResult linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<LinkApiResult>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<LinkApiResult> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkApiResult>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<LinkApiResult>> links) {
    this.links = links;
  }

  public void setLinks(List<LinkApiResult> links) {
    this.links = JsonNullable.<List<LinkApiResult>>of(links);
  }


  public AutoTestApiResult labels(List<LabelApiResult> labels) {
    this.labels = JsonNullable.<List<LabelApiResult>>of(labels);
    return this;
  }

  public AutoTestApiResult addLabelsItem(LabelApiResult labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<LabelApiResult>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get labels
   * @return labels
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<LabelApiResult> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LabelApiResult>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<LabelApiResult>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<LabelApiResult> labels) {
    this.labels = JsonNullable.<List<LabelApiResult>>of(labels);
  }


  /**
   * Return true if this AutoTestApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestApiResult autoTestApiResult = (AutoTestApiResult) o;
    return Objects.equals(this.id, autoTestApiResult.id) &&
        Objects.equals(this.projectId, autoTestApiResult.projectId) &&
        Objects.equals(this.name, autoTestApiResult.name) &&
        Objects.equals(this.isFlaky, autoTestApiResult.isFlaky) &&
        Objects.equals(this.globalId, autoTestApiResult.globalId) &&
        Objects.equals(this.isDeleted, autoTestApiResult.isDeleted) &&
        Objects.equals(this.mustBeApproved, autoTestApiResult.mustBeApproved) &&
        Objects.equals(this.createdDate, autoTestApiResult.createdDate) &&
        Objects.equals(this.createdById, autoTestApiResult.createdById) &&
        equalsNullable(this.externalId, autoTestApiResult.externalId) &&
        equalsNullable(this.namespace, autoTestApiResult.namespace) &&
        equalsNullable(this.classname, autoTestApiResult.classname) &&
        equalsNullable(this.steps, autoTestApiResult.steps) &&
        equalsNullable(this.setup, autoTestApiResult.setup) &&
        equalsNullable(this.teardown, autoTestApiResult.teardown) &&
        equalsNullable(this.title, autoTestApiResult.title) &&
        equalsNullable(this.description, autoTestApiResult.description) &&
        equalsNullable(this.externalKey, autoTestApiResult.externalKey) &&
        equalsNullable(this.modifiedDate, autoTestApiResult.modifiedDate) &&
        equalsNullable(this.modifiedById, autoTestApiResult.modifiedById) &&
        equalsNullable(this.lastTestRunId, autoTestApiResult.lastTestRunId) &&
        equalsNullable(this.lastTestRunName, autoTestApiResult.lastTestRunName) &&
        equalsNullable(this.lastTestResultId, autoTestApiResult.lastTestResultId) &&
        equalsNullable(this.lastTestResultConfiguration, autoTestApiResult.lastTestResultConfiguration) &&
        equalsNullable(this.lastTestResultOutcome, autoTestApiResult.lastTestResultOutcome) &&
        equalsNullable(this.lastTestResultStatus, autoTestApiResult.lastTestResultStatus) &&
        equalsNullable(this.stabilityPercentage, autoTestApiResult.stabilityPercentage) &&
        equalsNullable(this.links, autoTestApiResult.links) &&
        equalsNullable(this.labels, autoTestApiResult.labels);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, projectId, name, isFlaky, globalId, isDeleted, mustBeApproved, createdDate, createdById, hashCodeNullable(externalId), hashCodeNullable(namespace), hashCodeNullable(classname), hashCodeNullable(steps), hashCodeNullable(setup), hashCodeNullable(teardown), hashCodeNullable(title), hashCodeNullable(description), hashCodeNullable(externalKey), hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById), hashCodeNullable(lastTestRunId), hashCodeNullable(lastTestRunName), hashCodeNullable(lastTestResultId), hashCodeNullable(lastTestResultConfiguration), hashCodeNullable(lastTestResultOutcome), hashCodeNullable(lastTestResultStatus), hashCodeNullable(stabilityPercentage), hashCodeNullable(links), hashCodeNullable(labels));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestApiResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isFlaky: ").append(toIndentedString(isFlaky)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    mustBeApproved: ").append(toIndentedString(mustBeApproved)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    classname: ").append(toIndentedString(classname)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    setup: ").append(toIndentedString(setup)).append("\n");
    sb.append("    teardown: ").append(toIndentedString(teardown)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    externalKey: ").append(toIndentedString(externalKey)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    lastTestRunId: ").append(toIndentedString(lastTestRunId)).append("\n");
    sb.append("    lastTestRunName: ").append(toIndentedString(lastTestRunName)).append("\n");
    sb.append("    lastTestResultId: ").append(toIndentedString(lastTestResultId)).append("\n");
    sb.append("    lastTestResultConfiguration: ").append(toIndentedString(lastTestResultConfiguration)).append("\n");
    sb.append("    lastTestResultOutcome: ").append(toIndentedString(lastTestResultOutcome)).append("\n");
    sb.append("    lastTestResultStatus: ").append(toIndentedString(lastTestResultStatus)).append("\n");
    sb.append("    stabilityPercentage: ").append(toIndentedString(stabilityPercentage)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

