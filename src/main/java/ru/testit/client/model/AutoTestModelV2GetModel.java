/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AutoTestStepModel;
import ru.testit.client.model.LabelShortModel;
import ru.testit.client.model.LinkModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutoTestModelV2GetModel
 */
@JsonPropertyOrder({
  AutoTestModelV2GetModel.JSON_PROPERTY_EXTERNAL_ID,
  AutoTestModelV2GetModel.JSON_PROPERTY_LINKS,
  AutoTestModelV2GetModel.JSON_PROPERTY_PROJECT_ID,
  AutoTestModelV2GetModel.JSON_PROPERTY_NAME,
  AutoTestModelV2GetModel.JSON_PROPERTY_NAMESPACE,
  AutoTestModelV2GetModel.JSON_PROPERTY_CLASSNAME,
  AutoTestModelV2GetModel.JSON_PROPERTY_STEPS,
  AutoTestModelV2GetModel.JSON_PROPERTY_SETUP,
  AutoTestModelV2GetModel.JSON_PROPERTY_TEARDOWN,
  AutoTestModelV2GetModel.JSON_PROPERTY_GLOBAL_ID,
  AutoTestModelV2GetModel.JSON_PROPERTY_CREATED_DATE,
  AutoTestModelV2GetModel.JSON_PROPERTY_MODIFIED_DATE,
  AutoTestModelV2GetModel.JSON_PROPERTY_CREATED_BY_ID,
  AutoTestModelV2GetModel.JSON_PROPERTY_MODIFIED_BY_ID,
  AutoTestModelV2GetModel.JSON_PROPERTY_LABELS,
  AutoTestModelV2GetModel.JSON_PROPERTY_ID,
  AutoTestModelV2GetModel.JSON_PROPERTY_IS_DELETED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AutoTestModelV2GetModel {
  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private JsonNullable<String> externalId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<LinkModel>> links = JsonNullable.<List<LinkModel>>undefined();

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_NAMESPACE = "namespace";
  private JsonNullable<String> namespace = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLASSNAME = "classname";
  private JsonNullable<String> classname = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STEPS = "steps";
  private JsonNullable<List<AutoTestStepModel>> steps = JsonNullable.<List<AutoTestStepModel>>undefined();

  public static final String JSON_PROPERTY_SETUP = "setup";
  private JsonNullable<List<AutoTestStepModel>> setup = JsonNullable.<List<AutoTestStepModel>>undefined();

  public static final String JSON_PROPERTY_TEARDOWN = "teardown";
  private JsonNullable<List<AutoTestStepModel>> teardown = JsonNullable.<List<AutoTestStepModel>>undefined();

  public static final String JSON_PROPERTY_GLOBAL_ID = "globalId";
  private Long globalId;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private JsonNullable<OffsetDateTime> createdDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<LabelShortModel>> labels = JsonNullable.<List<LabelShortModel>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public AutoTestModelV2GetModel() { 
  }

  public AutoTestModelV2GetModel externalId(String externalId) {
    this.externalId = JsonNullable.<String>of(externalId);
    return this;
  }

   /**
   * This property is used to set autotest identifier from client system
   * @return externalId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "10001", value = "This property is used to set autotest identifier from client system")
  @JsonIgnore

  public String getExternalId() {
        return externalId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getExternalId_JsonNullable() {
    return externalId;
  }
  
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  public void setExternalId_JsonNullable(JsonNullable<String> externalId) {
    this.externalId = externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = JsonNullable.<String>of(externalId);
  }


  public AutoTestModelV2GetModel links(List<LinkModel> links) {
    this.links = JsonNullable.<List<LinkModel>>of(links);
    return this;
  }

  public AutoTestModelV2GetModel addLinksItem(LinkModel linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<LinkModel>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LinkModel> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkModel>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<LinkModel>> links) {
    this.links = links;
  }

  public void setLinks(List<LinkModel> links) {
    this.links = JsonNullable.<List<LinkModel>>of(links);
  }


  public AutoTestModelV2GetModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * This property is used to link autotest with project
   * @return projectId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3ffdc45d-64c4-4b68-9a42-1744f46625b6", value = "This property is used to link autotest with project")
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public AutoTestModelV2GetModel name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "WorkItem valid creation test", value = "")
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public AutoTestModelV2GetModel namespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "UnitTest.Core", value = "")
  @JsonIgnore

  public String getNamespace() {
        return namespace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNamespace_JsonNullable() {
    return namespace;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  public void setNamespace_JsonNullable(JsonNullable<String> namespace) {
    this.namespace = namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
  }


  public AutoTestModelV2GetModel classname(String classname) {
    this.classname = JsonNullable.<String>of(classname);
    return this;
  }

   /**
   * Get classname
   * @return classname
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "WorkItemServiceTest.cs", value = "")
  @JsonIgnore

  public String getClassname() {
        return classname.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLASSNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClassname_JsonNullable() {
    return classname;
  }
  
  @JsonProperty(JSON_PROPERTY_CLASSNAME)
  public void setClassname_JsonNullable(JsonNullable<String> classname) {
    this.classname = classname;
  }

  public void setClassname(String classname) {
    this.classname = JsonNullable.<String>of(classname);
  }


  public AutoTestModelV2GetModel steps(List<AutoTestStepModel> steps) {
    this.steps = JsonNullable.<List<AutoTestStepModel>>of(steps);
    return this;
  }

  public AutoTestModelV2GetModel addStepsItem(AutoTestStepModel stepsItem) {
    if (this.steps == null || !this.steps.isPresent()) {
      this.steps = JsonNullable.<List<AutoTestStepModel>>of(new ArrayList<>());
    }
    try {
      this.steps.get().add(stepsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AutoTestStepModel> getSteps() {
        return steps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepModel>> getSteps_JsonNullable() {
    return steps;
  }
  
  @JsonProperty(JSON_PROPERTY_STEPS)
  public void setSteps_JsonNullable(JsonNullable<List<AutoTestStepModel>> steps) {
    this.steps = steps;
  }

  public void setSteps(List<AutoTestStepModel> steps) {
    this.steps = JsonNullable.<List<AutoTestStepModel>>of(steps);
  }


  public AutoTestModelV2GetModel setup(List<AutoTestStepModel> setup) {
    this.setup = JsonNullable.<List<AutoTestStepModel>>of(setup);
    return this;
  }

  public AutoTestModelV2GetModel addSetupItem(AutoTestStepModel setupItem) {
    if (this.setup == null || !this.setup.isPresent()) {
      this.setup = JsonNullable.<List<AutoTestStepModel>>of(new ArrayList<>());
    }
    try {
      this.setup.get().add(setupItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get setup
   * @return setup
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AutoTestStepModel> getSetup() {
        return setup.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepModel>> getSetup_JsonNullable() {
    return setup;
  }
  
  @JsonProperty(JSON_PROPERTY_SETUP)
  public void setSetup_JsonNullable(JsonNullable<List<AutoTestStepModel>> setup) {
    this.setup = setup;
  }

  public void setSetup(List<AutoTestStepModel> setup) {
    this.setup = JsonNullable.<List<AutoTestStepModel>>of(setup);
  }


  public AutoTestModelV2GetModel teardown(List<AutoTestStepModel> teardown) {
    this.teardown = JsonNullable.<List<AutoTestStepModel>>of(teardown);
    return this;
  }

  public AutoTestModelV2GetModel addTeardownItem(AutoTestStepModel teardownItem) {
    if (this.teardown == null || !this.teardown.isPresent()) {
      this.teardown = JsonNullable.<List<AutoTestStepModel>>of(new ArrayList<>());
    }
    try {
      this.teardown.get().add(teardownItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get teardown
   * @return teardown
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AutoTestStepModel> getTeardown() {
        return teardown.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEARDOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepModel>> getTeardown_JsonNullable() {
    return teardown;
  }
  
  @JsonProperty(JSON_PROPERTY_TEARDOWN)
  public void setTeardown_JsonNullable(JsonNullable<List<AutoTestStepModel>> teardown) {
    this.teardown = teardown;
  }

  public void setTeardown(List<AutoTestStepModel> teardown) {
    this.teardown = JsonNullable.<List<AutoTestStepModel>>of(teardown);
  }


  public AutoTestModelV2GetModel globalId(Long globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * Get globalId
   * @return globalId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "")
  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getGlobalId() {
    return globalId;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }


  public AutoTestModelV2GetModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = JsonNullable.<OffsetDateTime>of(createdDate);
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2022-10-03T10:29:25.447304600Z", value = "")
  @JsonIgnore

  public OffsetDateTime getCreatedDate() {
        return createdDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreatedDate_JsonNullable() {
    return createdDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  public void setCreatedDate_JsonNullable(JsonNullable<OffsetDateTime> createdDate) {
    this.createdDate = createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = JsonNullable.<OffsetDateTime>of(createdDate);
  }


  public AutoTestModelV2GetModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "2022-10-03T10:29:25.447304600Z", value = "")
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public AutoTestModelV2GetModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3ffdc45d-64c4-4b68-9a42-1744f46625b6", value = "")
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public AutoTestModelV2GetModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3ffdc45d-64c4-4b68-9a42-1744f46625b6", value = "")
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public AutoTestModelV2GetModel labels(List<LabelShortModel> labels) {
    this.labels = JsonNullable.<List<LabelShortModel>>of(labels);
    return this;
  }

  public AutoTestModelV2GetModel addLabelsItem(LabelShortModel labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<LabelShortModel>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LabelShortModel> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LabelShortModel>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<LabelShortModel>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<LabelShortModel> labels) {
    this.labels = JsonNullable.<List<LabelShortModel>>of(labels);
  }


  public AutoTestModelV2GetModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "3ffdc45d-64c4-4b68-9a42-1744f46625b6", value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AutoTestModelV2GetModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  /**
   * Return true if this AutoTestModelV2GetModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestModelV2GetModel autoTestModelV2GetModel = (AutoTestModelV2GetModel) o;
    return equalsNullable(this.externalId, autoTestModelV2GetModel.externalId) &&
        equalsNullable(this.links, autoTestModelV2GetModel.links) &&
        Objects.equals(this.projectId, autoTestModelV2GetModel.projectId) &&
        equalsNullable(this.name, autoTestModelV2GetModel.name) &&
        equalsNullable(this.namespace, autoTestModelV2GetModel.namespace) &&
        equalsNullable(this.classname, autoTestModelV2GetModel.classname) &&
        equalsNullable(this.steps, autoTestModelV2GetModel.steps) &&
        equalsNullable(this.setup, autoTestModelV2GetModel.setup) &&
        equalsNullable(this.teardown, autoTestModelV2GetModel.teardown) &&
        Objects.equals(this.globalId, autoTestModelV2GetModel.globalId) &&
        equalsNullable(this.createdDate, autoTestModelV2GetModel.createdDate) &&
        equalsNullable(this.modifiedDate, autoTestModelV2GetModel.modifiedDate) &&
        Objects.equals(this.createdById, autoTestModelV2GetModel.createdById) &&
        equalsNullable(this.modifiedById, autoTestModelV2GetModel.modifiedById) &&
        equalsNullable(this.labels, autoTestModelV2GetModel.labels) &&
        Objects.equals(this.id, autoTestModelV2GetModel.id) &&
        Objects.equals(this.isDeleted, autoTestModelV2GetModel.isDeleted);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(externalId), hashCodeNullable(links), projectId, hashCodeNullable(name), hashCodeNullable(namespace), hashCodeNullable(classname), hashCodeNullable(steps), hashCodeNullable(setup), hashCodeNullable(teardown), globalId, hashCodeNullable(createdDate), hashCodeNullable(modifiedDate), createdById, hashCodeNullable(modifiedById), hashCodeNullable(labels), id, isDeleted);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestModelV2GetModel {\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    classname: ").append(toIndentedString(classname)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    setup: ").append(toIndentedString(setup)).append("\n");
    sb.append("    teardown: ").append(toIndentedString(teardown)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

