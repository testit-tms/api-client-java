/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AutoTestStepModel;
import ru.testit.client.model.LabelPostModel;
import ru.testit.client.model.LinkPostModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutoTestPostModel
 */
@JsonPropertyOrder({
  AutoTestPostModel.JSON_PROPERTY_WORK_ITEM_IDS_FOR_LINK_WITH_AUTO_TEST,
  AutoTestPostModel.JSON_PROPERTY_SHOULD_CREATE_WORK_ITEM,
  AutoTestPostModel.JSON_PROPERTY_EXTERNAL_ID,
  AutoTestPostModel.JSON_PROPERTY_LINKS,
  AutoTestPostModel.JSON_PROPERTY_PROJECT_ID,
  AutoTestPostModel.JSON_PROPERTY_NAME,
  AutoTestPostModel.JSON_PROPERTY_NAMESPACE,
  AutoTestPostModel.JSON_PROPERTY_CLASSNAME,
  AutoTestPostModel.JSON_PROPERTY_STEPS,
  AutoTestPostModel.JSON_PROPERTY_SETUP,
  AutoTestPostModel.JSON_PROPERTY_TEARDOWN,
  AutoTestPostModel.JSON_PROPERTY_TITLE,
  AutoTestPostModel.JSON_PROPERTY_DESCRIPTION,
  AutoTestPostModel.JSON_PROPERTY_LABELS,
  AutoTestPostModel.JSON_PROPERTY_IS_FLAKY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AutoTestPostModel {
  public static final String JSON_PROPERTY_WORK_ITEM_IDS_FOR_LINK_WITH_AUTO_TEST = "workItemIdsForLinkWithAutoTest";
  private JsonNullable<Set<UUID>> workItemIdsForLinkWithAutoTest = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_SHOULD_CREATE_WORK_ITEM = "shouldCreateWorkItem";
  private JsonNullable<Boolean> shouldCreateWorkItem = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_EXTERNAL_ID = "externalId";
  private String externalId;

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<LinkPostModel>> links = JsonNullable.<List<LinkPostModel>>undefined();

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_NAMESPACE = "namespace";
  private JsonNullable<String> namespace = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLASSNAME = "classname";
  private JsonNullable<String> classname = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STEPS = "steps";
  private JsonNullable<List<AutoTestStepModel>> steps = JsonNullable.<List<AutoTestStepModel>>undefined();

  public static final String JSON_PROPERTY_SETUP = "setup";
  private JsonNullable<List<AutoTestStepModel>> setup = JsonNullable.<List<AutoTestStepModel>>undefined();

  public static final String JSON_PROPERTY_TEARDOWN = "teardown";
  private JsonNullable<List<AutoTestStepModel>> teardown = JsonNullable.<List<AutoTestStepModel>>undefined();

  public static final String JSON_PROPERTY_TITLE = "title";
  private JsonNullable<String> title = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LABELS = "labels";
  private JsonNullable<List<LabelPostModel>> labels = JsonNullable.<List<LabelPostModel>>undefined();

  public static final String JSON_PROPERTY_IS_FLAKY = "isFlaky";
  private JsonNullable<Boolean> isFlaky = JsonNullable.<Boolean>undefined();

  public AutoTestPostModel() { 
  }

  public AutoTestPostModel workItemIdsForLinkWithAutoTest(Set<UUID> workItemIdsForLinkWithAutoTest) {
    this.workItemIdsForLinkWithAutoTest = JsonNullable.<Set<UUID>>of(workItemIdsForLinkWithAutoTest);
    return this;
  }

  public AutoTestPostModel addWorkItemIdsForLinkWithAutoTestItem(UUID workItemIdsForLinkWithAutoTestItem) {
    if (this.workItemIdsForLinkWithAutoTest == null || !this.workItemIdsForLinkWithAutoTest.isPresent()) {
      this.workItemIdsForLinkWithAutoTest = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.workItemIdsForLinkWithAutoTest.get().add(workItemIdsForLinkWithAutoTestItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Specifies the IDs of work items to link your autotest to. You can specify several IDs.
   * @return workItemIdsForLinkWithAutoTest
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the IDs of work items to link your autotest to. You can specify several IDs.")
  @JsonIgnore

  public Set<UUID> getWorkItemIdsForLinkWithAutoTest() {
        return workItemIdsForLinkWithAutoTest.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_IDS_FOR_LINK_WITH_AUTO_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getWorkItemIdsForLinkWithAutoTest_JsonNullable() {
    return workItemIdsForLinkWithAutoTest;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_IDS_FOR_LINK_WITH_AUTO_TEST)
  public void setWorkItemIdsForLinkWithAutoTest_JsonNullable(JsonNullable<Set<UUID>> workItemIdsForLinkWithAutoTest) {
    this.workItemIdsForLinkWithAutoTest = workItemIdsForLinkWithAutoTest;
  }

  public void setWorkItemIdsForLinkWithAutoTest(Set<UUID> workItemIdsForLinkWithAutoTest) {
    this.workItemIdsForLinkWithAutoTest = JsonNullable.<Set<UUID>>of(workItemIdsForLinkWithAutoTest);
  }


  public AutoTestPostModel shouldCreateWorkItem(Boolean shouldCreateWorkItem) {
    this.shouldCreateWorkItem = JsonNullable.<Boolean>of(shouldCreateWorkItem);
    return this;
  }

   /**
   * Creates a test case linked to the autotest.
   * @return shouldCreateWorkItem
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Creates a test case linked to the autotest.")
  @JsonIgnore

  public Boolean getShouldCreateWorkItem() {
        return shouldCreateWorkItem.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHOULD_CREATE_WORK_ITEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getShouldCreateWorkItem_JsonNullable() {
    return shouldCreateWorkItem;
  }
  
  @JsonProperty(JSON_PROPERTY_SHOULD_CREATE_WORK_ITEM)
  public void setShouldCreateWorkItem_JsonNullable(JsonNullable<Boolean> shouldCreateWorkItem) {
    this.shouldCreateWorkItem = shouldCreateWorkItem;
  }

  public void setShouldCreateWorkItem(Boolean shouldCreateWorkItem) {
    this.shouldCreateWorkItem = JsonNullable.<Boolean>of(shouldCreateWorkItem);
  }


  public AutoTestPostModel externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * Specifies the ID of your autotest in the external system.&lt;br /&gt;  To test the method, you can use any ID.
   * @return externalId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the ID of your autotest in the external system.<br />  To test the method, you can use any ID.")
  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExternalId() {
    return externalId;
  }


  @JsonProperty(JSON_PROPERTY_EXTERNAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }


  public AutoTestPostModel links(List<LinkPostModel> links) {
    this.links = JsonNullable.<List<LinkPostModel>>of(links);
    return this;
  }

  public AutoTestPostModel addLinksItem(LinkPostModel linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<LinkPostModel>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Specifies the links in the autotest.
   * @return links
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the links in the autotest.")
  @JsonIgnore

  public List<LinkPostModel> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkPostModel>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<LinkPostModel>> links) {
    this.links = links;
  }

  public void setLinks(List<LinkPostModel> links) {
    this.links = JsonNullable.<List<LinkPostModel>>of(links);
  }


  public AutoTestPostModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Specifies the project GUID.&lt;br /&gt;  You can get it using the &#x60;GET /api/v2/projects&#x60; method.
   * @return projectId
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies the project GUID.<br />  You can get it using the `GET /api/v2/projects` method.")
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public AutoTestPostModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Specifies autotest name in the test management system.
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Specifies autotest name in the test management system.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public AutoTestPostModel namespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
    return this;
  }

   /**
   * Specifies the name of the namespace in the test management system.
   * @return namespace
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of the namespace in the test management system.")
  @JsonIgnore

  public String getNamespace() {
        return namespace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNamespace_JsonNullable() {
    return namespace;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  public void setNamespace_JsonNullable(JsonNullable<String> namespace) {
    this.namespace = namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
  }


  public AutoTestPostModel classname(String classname) {
    this.classname = JsonNullable.<String>of(classname);
    return this;
  }

   /**
   * Specifies the class name in the test management system.
   * @return classname
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the class name in the test management system.")
  @JsonIgnore

  public String getClassname() {
        return classname.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLASSNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClassname_JsonNullable() {
    return classname;
  }
  
  @JsonProperty(JSON_PROPERTY_CLASSNAME)
  public void setClassname_JsonNullable(JsonNullable<String> classname) {
    this.classname = classname;
  }

  public void setClassname(String classname) {
    this.classname = JsonNullable.<String>of(classname);
  }


  public AutoTestPostModel steps(List<AutoTestStepModel> steps) {
    this.steps = JsonNullable.<List<AutoTestStepModel>>of(steps);
    return this;
  }

  public AutoTestPostModel addStepsItem(AutoTestStepModel stepsItem) {
    if (this.steps == null || !this.steps.isPresent()) {
      this.steps = JsonNullable.<List<AutoTestStepModel>>of(new ArrayList<>());
    }
    try {
      this.steps.get().add(stepsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Specifies the steps in the autotest.
   * @return steps
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the steps in the autotest.")
  @JsonIgnore

  public List<AutoTestStepModel> getSteps() {
        return steps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepModel>> getSteps_JsonNullable() {
    return steps;
  }
  
  @JsonProperty(JSON_PROPERTY_STEPS)
  public void setSteps_JsonNullable(JsonNullable<List<AutoTestStepModel>> steps) {
    this.steps = steps;
  }

  public void setSteps(List<AutoTestStepModel> steps) {
    this.steps = JsonNullable.<List<AutoTestStepModel>>of(steps);
  }


  public AutoTestPostModel setup(List<AutoTestStepModel> setup) {
    this.setup = JsonNullable.<List<AutoTestStepModel>>of(setup);
    return this;
  }

  public AutoTestPostModel addSetupItem(AutoTestStepModel setupItem) {
    if (this.setup == null || !this.setup.isPresent()) {
      this.setup = JsonNullable.<List<AutoTestStepModel>>of(new ArrayList<>());
    }
    try {
      this.setup.get().add(setupItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Specifies the setup steps and relates them to the autotest. Supported values are the same as in the &#x60;steps&#x60; parameter.
   * @return setup
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the setup steps and relates them to the autotest. Supported values are the same as in the `steps` parameter.")
  @JsonIgnore

  public List<AutoTestStepModel> getSetup() {
        return setup.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepModel>> getSetup_JsonNullable() {
    return setup;
  }
  
  @JsonProperty(JSON_PROPERTY_SETUP)
  public void setSetup_JsonNullable(JsonNullable<List<AutoTestStepModel>> setup) {
    this.setup = setup;
  }

  public void setSetup(List<AutoTestStepModel> setup) {
    this.setup = JsonNullable.<List<AutoTestStepModel>>of(setup);
  }


  public AutoTestPostModel teardown(List<AutoTestStepModel> teardown) {
    this.teardown = JsonNullable.<List<AutoTestStepModel>>of(teardown);
    return this;
  }

  public AutoTestPostModel addTeardownItem(AutoTestStepModel teardownItem) {
    if (this.teardown == null || !this.teardown.isPresent()) {
      this.teardown = JsonNullable.<List<AutoTestStepModel>>of(new ArrayList<>());
    }
    try {
      this.teardown.get().add(teardownItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Specifies the teardown steps and relates them to the autotest. Supported values are the same as in the &#x60;steps&#x60; parameter.
   * @return teardown
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the teardown steps and relates them to the autotest. Supported values are the same as in the `steps` parameter.")
  @JsonIgnore

  public List<AutoTestStepModel> getTeardown() {
        return teardown.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEARDOWN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepModel>> getTeardown_JsonNullable() {
    return teardown;
  }
  
  @JsonProperty(JSON_PROPERTY_TEARDOWN)
  public void setTeardown_JsonNullable(JsonNullable<List<AutoTestStepModel>> teardown) {
    this.teardown = teardown;
  }

  public void setTeardown(List<AutoTestStepModel> teardown) {
    this.teardown = JsonNullable.<List<AutoTestStepModel>>of(teardown);
  }


  public AutoTestPostModel title(String title) {
    this.title = JsonNullable.<String>of(title);
    return this;
  }

   /**
   * Specifies the name of the autotest in the autotest card.   The &#x60;Name&#x60; parameter is responsible for the name in the table.
   * @return title
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the name of the autotest in the autotest card.   The `Name` parameter is responsible for the name in the table.")
  @JsonIgnore

  public String getTitle() {
        return title.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTitle_JsonNullable() {
    return title;
  }
  
  @JsonProperty(JSON_PROPERTY_TITLE)
  public void setTitle_JsonNullable(JsonNullable<String> title) {
    this.title = title;
  }

  public void setTitle(String title) {
    this.title = JsonNullable.<String>of(title);
  }


  public AutoTestPostModel description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

   /**
   * Specifies the autotest description in the test management system.
   * @return description
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies the autotest description in the test management system.")
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public AutoTestPostModel labels(List<LabelPostModel> labels) {
    this.labels = JsonNullable.<List<LabelPostModel>>of(labels);
    return this;
  }

  public AutoTestPostModel addLabelsItem(LabelPostModel labelsItem) {
    if (this.labels == null || !this.labels.isPresent()) {
      this.labels = JsonNullable.<List<LabelPostModel>>of(new ArrayList<>());
    }
    try {
      this.labels.get().add(labelsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Specifies autotest labels.
   * @return labels
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Specifies autotest labels.")
  @JsonIgnore

  public List<LabelPostModel> getLabels() {
        return labels.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LABELS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LabelPostModel>> getLabels_JsonNullable() {
    return labels;
  }
  
  @JsonProperty(JSON_PROPERTY_LABELS)
  public void setLabels_JsonNullable(JsonNullable<List<LabelPostModel>> labels) {
    this.labels = labels;
  }

  public void setLabels(List<LabelPostModel> labels) {
    this.labels = JsonNullable.<List<LabelPostModel>>of(labels);
  }


  public AutoTestPostModel isFlaky(Boolean isFlaky) {
    this.isFlaky = JsonNullable.<Boolean>of(isFlaky);
    return this;
  }

   /**
   * Marks the autotest as flaky.
   * @return isFlaky
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Marks the autotest as flaky.")
  @JsonIgnore

  public Boolean getIsFlaky() {
        return isFlaky.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_FLAKY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsFlaky_JsonNullable() {
    return isFlaky;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_FLAKY)
  public void setIsFlaky_JsonNullable(JsonNullable<Boolean> isFlaky) {
    this.isFlaky = isFlaky;
  }

  public void setIsFlaky(Boolean isFlaky) {
    this.isFlaky = JsonNullable.<Boolean>of(isFlaky);
  }


  /**
   * Return true if this AutoTestPostModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestPostModel autoTestPostModel = (AutoTestPostModel) o;
    return equalsNullable(this.workItemIdsForLinkWithAutoTest, autoTestPostModel.workItemIdsForLinkWithAutoTest) &&
        equalsNullable(this.shouldCreateWorkItem, autoTestPostModel.shouldCreateWorkItem) &&
        Objects.equals(this.externalId, autoTestPostModel.externalId) &&
        equalsNullable(this.links, autoTestPostModel.links) &&
        Objects.equals(this.projectId, autoTestPostModel.projectId) &&
        Objects.equals(this.name, autoTestPostModel.name) &&
        equalsNullable(this.namespace, autoTestPostModel.namespace) &&
        equalsNullable(this.classname, autoTestPostModel.classname) &&
        equalsNullable(this.steps, autoTestPostModel.steps) &&
        equalsNullable(this.setup, autoTestPostModel.setup) &&
        equalsNullable(this.teardown, autoTestPostModel.teardown) &&
        equalsNullable(this.title, autoTestPostModel.title) &&
        equalsNullable(this.description, autoTestPostModel.description) &&
        equalsNullable(this.labels, autoTestPostModel.labels) &&
        equalsNullable(this.isFlaky, autoTestPostModel.isFlaky);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(workItemIdsForLinkWithAutoTest), hashCodeNullable(shouldCreateWorkItem), externalId, hashCodeNullable(links), projectId, name, hashCodeNullable(namespace), hashCodeNullable(classname), hashCodeNullable(steps), hashCodeNullable(setup), hashCodeNullable(teardown), hashCodeNullable(title), hashCodeNullable(description), hashCodeNullable(labels), hashCodeNullable(isFlaky));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestPostModel {\n");
    sb.append("    workItemIdsForLinkWithAutoTest: ").append(toIndentedString(workItemIdsForLinkWithAutoTest)).append("\n");
    sb.append("    shouldCreateWorkItem: ").append(toIndentedString(shouldCreateWorkItem)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    classname: ").append(toIndentedString(classname)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    setup: ").append(toIndentedString(setup)).append("\n");
    sb.append("    teardown: ").append(toIndentedString(teardown)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    isFlaky: ").append(toIndentedString(isFlaky)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

