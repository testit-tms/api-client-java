/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutoTestProjectSettingsGetModel
 */
@JsonPropertyOrder({
  AutoTestProjectSettingsGetModel.JSON_PROPERTY_PROJECT_ID,
  AutoTestProjectSettingsGetModel.JSON_PROPERTY_RERUN_ENABLED,
  AutoTestProjectSettingsGetModel.JSON_PROPERTY_RERUN_ATTEMPTS_COUNT,
  AutoTestProjectSettingsGetModel.JSON_PROPERTY_IS_FLAKY_AUTO,
  AutoTestProjectSettingsGetModel.JSON_PROPERTY_FLAKY_STABILITY_PERCENTAGE,
  AutoTestProjectSettingsGetModel.JSON_PROPERTY_FLAKY_TEST_RUN_COUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class AutoTestProjectSettingsGetModel {
  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_RERUN_ENABLED = "rerunEnabled";
  private Boolean rerunEnabled;

  public static final String JSON_PROPERTY_RERUN_ATTEMPTS_COUNT = "rerunAttemptsCount";
  private Integer rerunAttemptsCount;

  public static final String JSON_PROPERTY_IS_FLAKY_AUTO = "isFlakyAuto";
  private Boolean isFlakyAuto = false;

  public static final String JSON_PROPERTY_FLAKY_STABILITY_PERCENTAGE = "flakyStabilityPercentage";
  private Integer flakyStabilityPercentage = 100;

  public static final String JSON_PROPERTY_FLAKY_TEST_RUN_COUNT = "flakyTestRunCount";
  private Integer flakyTestRunCount = 100;

  public AutoTestProjectSettingsGetModel() { 
  }

  public AutoTestProjectSettingsGetModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Unique ID of the project.
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public AutoTestProjectSettingsGetModel rerunEnabled(Boolean rerunEnabled) {
    this.rerunEnabled = rerunEnabled;
    return this;
  }

  /**
   * Auto rerun enabled
   * @return rerunEnabled
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RERUN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getRerunEnabled() {
    return rerunEnabled;
  }


  @JsonProperty(JSON_PROPERTY_RERUN_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRerunEnabled(Boolean rerunEnabled) {
    this.rerunEnabled = rerunEnabled;
  }


  public AutoTestProjectSettingsGetModel rerunAttemptsCount(Integer rerunAttemptsCount) {
    this.rerunAttemptsCount = rerunAttemptsCount;
    return this;
  }

  /**
   * Auto rerun attempt count
   * minimum: 1
   * maximum: 10
   * @return rerunAttemptsCount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RERUN_ATTEMPTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRerunAttemptsCount() {
    return rerunAttemptsCount;
  }


  @JsonProperty(JSON_PROPERTY_RERUN_ATTEMPTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRerunAttemptsCount(Integer rerunAttemptsCount) {
    this.rerunAttemptsCount = rerunAttemptsCount;
  }


  public AutoTestProjectSettingsGetModel isFlakyAuto(Boolean isFlakyAuto) {
    this.isFlakyAuto = isFlakyAuto;
    return this;
  }

  /**
   * Indicates if the status \&quot;Flaky/Stable\&quot; sets automatically
   * @return isFlakyAuto
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_FLAKY_AUTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsFlakyAuto() {
    return isFlakyAuto;
  }


  @JsonProperty(JSON_PROPERTY_IS_FLAKY_AUTO)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsFlakyAuto(Boolean isFlakyAuto) {
    this.isFlakyAuto = isFlakyAuto;
  }


  public AutoTestProjectSettingsGetModel flakyStabilityPercentage(Integer flakyStabilityPercentage) {
    this.flakyStabilityPercentage = flakyStabilityPercentage;
    return this;
  }

  /**
   * Stability percentage for autotest flaky computing
   * minimum: 0
   * maximum: 100
   * @return flakyStabilityPercentage
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLAKY_STABILITY_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFlakyStabilityPercentage() {
    return flakyStabilityPercentage;
  }


  @JsonProperty(JSON_PROPERTY_FLAKY_STABILITY_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlakyStabilityPercentage(Integer flakyStabilityPercentage) {
    this.flakyStabilityPercentage = flakyStabilityPercentage;
  }


  public AutoTestProjectSettingsGetModel flakyTestRunCount(Integer flakyTestRunCount) {
    this.flakyTestRunCount = flakyTestRunCount;
    return this;
  }

  /**
   * Last test run count for autotest flaky computing
   * minimum: 1
   * maximum: 1000
   * @return flakyTestRunCount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLAKY_TEST_RUN_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getFlakyTestRunCount() {
    return flakyTestRunCount;
  }


  @JsonProperty(JSON_PROPERTY_FLAKY_TEST_RUN_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFlakyTestRunCount(Integer flakyTestRunCount) {
    this.flakyTestRunCount = flakyTestRunCount;
  }


  /**
   * Return true if this AutoTestProjectSettingsGetModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestProjectSettingsGetModel autoTestProjectSettingsGetModel = (AutoTestProjectSettingsGetModel) o;
    return Objects.equals(this.projectId, autoTestProjectSettingsGetModel.projectId) &&
        Objects.equals(this.rerunEnabled, autoTestProjectSettingsGetModel.rerunEnabled) &&
        Objects.equals(this.rerunAttemptsCount, autoTestProjectSettingsGetModel.rerunAttemptsCount) &&
        Objects.equals(this.isFlakyAuto, autoTestProjectSettingsGetModel.isFlakyAuto) &&
        Objects.equals(this.flakyStabilityPercentage, autoTestProjectSettingsGetModel.flakyStabilityPercentage) &&
        Objects.equals(this.flakyTestRunCount, autoTestProjectSettingsGetModel.flakyTestRunCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectId, rerunEnabled, rerunAttemptsCount, isFlakyAuto, flakyStabilityPercentage, flakyTestRunCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestProjectSettingsGetModel {\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    rerunEnabled: ").append(toIndentedString(rerunEnabled)).append("\n");
    sb.append("    rerunAttemptsCount: ").append(toIndentedString(rerunAttemptsCount)).append("\n");
    sb.append("    isFlakyAuto: ").append(toIndentedString(isFlakyAuto)).append("\n");
    sb.append("    flakyStabilityPercentage: ").append(toIndentedString(flakyStabilityPercentage)).append("\n");
    sb.append("    flakyTestRunCount: ").append(toIndentedString(flakyTestRunCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

