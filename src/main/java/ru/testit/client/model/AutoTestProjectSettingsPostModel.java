/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import ru.testit.client.invoker.JSON;

/**
 * AutoTestProjectSettingsPostModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.11.0")
public class AutoTestProjectSettingsPostModel {
  public static final String SERIALIZED_NAME_IS_FLAKY_AUTO = "isFlakyAuto";
  @SerializedName(SERIALIZED_NAME_IS_FLAKY_AUTO)
  @javax.annotation.Nullable
  private Boolean isFlakyAuto = false;

  public static final String SERIALIZED_NAME_FLAKY_STABILITY_PERCENTAGE = "flakyStabilityPercentage";
  @SerializedName(SERIALIZED_NAME_FLAKY_STABILITY_PERCENTAGE)
  @javax.annotation.Nullable
  private Integer flakyStabilityPercentage = 100;

  public static final String SERIALIZED_NAME_FLAKY_TEST_RUN_COUNT = "flakyTestRunCount";
  @SerializedName(SERIALIZED_NAME_FLAKY_TEST_RUN_COUNT)
  @javax.annotation.Nullable
  private Integer flakyTestRunCount = 100;

  public static final String SERIALIZED_NAME_RERUN_ENABLED = "rerunEnabled";
  @SerializedName(SERIALIZED_NAME_RERUN_ENABLED)
  @javax.annotation.Nonnull
  private Boolean rerunEnabled;

  public static final String SERIALIZED_NAME_RERUN_ATTEMPTS_COUNT = "rerunAttemptsCount";
  @SerializedName(SERIALIZED_NAME_RERUN_ATTEMPTS_COUNT)
  @javax.annotation.Nonnull
  private Integer rerunAttemptsCount;

  public AutoTestProjectSettingsPostModel() {
  }

  public AutoTestProjectSettingsPostModel isFlakyAuto(@javax.annotation.Nullable Boolean isFlakyAuto) {
    this.isFlakyAuto = isFlakyAuto;
    return this;
  }

  /**
   * Indicates if the status \&quot;Flaky/Stable\&quot; sets automatically
   * @return isFlakyAuto
   */
  @javax.annotation.Nullable
  public Boolean getIsFlakyAuto() {
    return isFlakyAuto;
  }

  public void setIsFlakyAuto(@javax.annotation.Nullable Boolean isFlakyAuto) {
    this.isFlakyAuto = isFlakyAuto;
  }


  public AutoTestProjectSettingsPostModel flakyStabilityPercentage(@javax.annotation.Nullable Integer flakyStabilityPercentage) {
    this.flakyStabilityPercentage = flakyStabilityPercentage;
    return this;
  }

  /**
   * Stability percentage for autotest flaky computing
   * minimum: 0
   * maximum: 100
   * @return flakyStabilityPercentage
   */
  @javax.annotation.Nullable
  public Integer getFlakyStabilityPercentage() {
    return flakyStabilityPercentage;
  }

  public void setFlakyStabilityPercentage(@javax.annotation.Nullable Integer flakyStabilityPercentage) {
    this.flakyStabilityPercentage = flakyStabilityPercentage;
  }


  public AutoTestProjectSettingsPostModel flakyTestRunCount(@javax.annotation.Nullable Integer flakyTestRunCount) {
    this.flakyTestRunCount = flakyTestRunCount;
    return this;
  }

  /**
   * Last test run count for autotest flaky computing
   * minimum: 1
   * maximum: 1000
   * @return flakyTestRunCount
   */
  @javax.annotation.Nullable
  public Integer getFlakyTestRunCount() {
    return flakyTestRunCount;
  }

  public void setFlakyTestRunCount(@javax.annotation.Nullable Integer flakyTestRunCount) {
    this.flakyTestRunCount = flakyTestRunCount;
  }


  public AutoTestProjectSettingsPostModel rerunEnabled(@javax.annotation.Nonnull Boolean rerunEnabled) {
    this.rerunEnabled = rerunEnabled;
    return this;
  }

  /**
   * Auto rerun enabled
   * @return rerunEnabled
   */
  @javax.annotation.Nonnull
  public Boolean getRerunEnabled() {
    return rerunEnabled;
  }

  public void setRerunEnabled(@javax.annotation.Nonnull Boolean rerunEnabled) {
    this.rerunEnabled = rerunEnabled;
  }


  public AutoTestProjectSettingsPostModel rerunAttemptsCount(@javax.annotation.Nonnull Integer rerunAttemptsCount) {
    this.rerunAttemptsCount = rerunAttemptsCount;
    return this;
  }

  /**
   * Auto rerun attempt count
   * minimum: 1
   * maximum: 10
   * @return rerunAttemptsCount
   */
  @javax.annotation.Nonnull
  public Integer getRerunAttemptsCount() {
    return rerunAttemptsCount;
  }

  public void setRerunAttemptsCount(@javax.annotation.Nonnull Integer rerunAttemptsCount) {
    this.rerunAttemptsCount = rerunAttemptsCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestProjectSettingsPostModel autoTestProjectSettingsPostModel = (AutoTestProjectSettingsPostModel) o;
    return Objects.equals(this.isFlakyAuto, autoTestProjectSettingsPostModel.isFlakyAuto) &&
        Objects.equals(this.flakyStabilityPercentage, autoTestProjectSettingsPostModel.flakyStabilityPercentage) &&
        Objects.equals(this.flakyTestRunCount, autoTestProjectSettingsPostModel.flakyTestRunCount) &&
        Objects.equals(this.rerunEnabled, autoTestProjectSettingsPostModel.rerunEnabled) &&
        Objects.equals(this.rerunAttemptsCount, autoTestProjectSettingsPostModel.rerunAttemptsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isFlakyAuto, flakyStabilityPercentage, flakyTestRunCount, rerunEnabled, rerunAttemptsCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestProjectSettingsPostModel {\n");
    sb.append("    isFlakyAuto: ").append(toIndentedString(isFlakyAuto)).append("\n");
    sb.append("    flakyStabilityPercentage: ").append(toIndentedString(flakyStabilityPercentage)).append("\n");
    sb.append("    flakyTestRunCount: ").append(toIndentedString(flakyTestRunCount)).append("\n");
    sb.append("    rerunEnabled: ").append(toIndentedString(rerunEnabled)).append("\n");
    sb.append("    rerunAttemptsCount: ").append(toIndentedString(rerunAttemptsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isFlakyAuto");
    openapiFields.add("flakyStabilityPercentage");
    openapiFields.add("flakyTestRunCount");
    openapiFields.add("rerunEnabled");
    openapiFields.add("rerunAttemptsCount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("rerunEnabled");
    openapiRequiredFields.add("rerunAttemptsCount");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AutoTestProjectSettingsPostModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AutoTestProjectSettingsPostModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AutoTestProjectSettingsPostModel is not found in the empty JSON string", AutoTestProjectSettingsPostModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AutoTestProjectSettingsPostModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AutoTestProjectSettingsPostModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AutoTestProjectSettingsPostModel.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AutoTestProjectSettingsPostModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AutoTestProjectSettingsPostModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AutoTestProjectSettingsPostModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AutoTestProjectSettingsPostModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AutoTestProjectSettingsPostModel>() {
           @Override
           public void write(JsonWriter out, AutoTestProjectSettingsPostModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AutoTestProjectSettingsPostModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AutoTestProjectSettingsPostModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AutoTestProjectSettingsPostModel
   * @throws IOException if the JSON string is invalid with respect to AutoTestProjectSettingsPostModel
   */
  public static AutoTestProjectSettingsPostModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AutoTestProjectSettingsPostModel.class);
  }

  /**
   * Convert an instance of AutoTestProjectSettingsPostModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

