/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.FailureCategory;
import ru.testit.client.model.FailureClassRegexApiResult;
import ru.testit.client.model.ProjectNameApiResult;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutoTestResultReasonProjectApiResult
 */
@JsonPropertyOrder({
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_ID,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_IS_DELETED,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_FAILURE_CATEGORY,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_CREATED_DATE,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_CREATED_BY_ID,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_PROJECTS,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_FAILURE_CLASS_REGEXES,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_NAME,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_MODIFIED_DATE,
  AutoTestResultReasonProjectApiResult.JSON_PROPERTY_MODIFIED_BY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class AutoTestResultReasonProjectApiResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_FAILURE_CATEGORY = "failureCategory";
  private FailureCategory failureCategory;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_PROJECTS = "projects";
  private List<ProjectNameApiResult> projects = new ArrayList<>();

  public static final String JSON_PROPERTY_FAILURE_CLASS_REGEXES = "failureClassRegexes";
  private List<FailureClassRegexApiResult> failureClassRegexes = new ArrayList<>();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public AutoTestResultReasonProjectApiResult() { 
  }

  public AutoTestResultReasonProjectApiResult id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Failure category identifier
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AutoTestResultReasonProjectApiResult isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Indicates if the entity is deleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public AutoTestResultReasonProjectApiResult failureCategory(FailureCategory failureCategory) {
    this.failureCategory = failureCategory;
    return this;
  }

  /**
   * Category type
   * @return failureCategory
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FailureCategory getFailureCategory() {
    return failureCategory;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailureCategory(FailureCategory failureCategory) {
    this.failureCategory = failureCategory;
  }


  public AutoTestResultReasonProjectApiResult createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Failure category creation date
   * @return createdDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public AutoTestResultReasonProjectApiResult createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Failure category creator identifier
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public AutoTestResultReasonProjectApiResult projects(List<ProjectNameApiResult> projects) {
    this.projects = projects;
    return this;
  }

  public AutoTestResultReasonProjectApiResult addProjectsItem(ProjectNameApiResult projectsItem) {
    if (this.projects == null) {
      this.projects = new ArrayList<>();
    }
    this.projects.add(projectsItem);
    return this;
  }

  /**
   * Projects names
   * @return projects
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ProjectNameApiResult> getProjects() {
    return projects;
  }


  @JsonProperty(JSON_PROPERTY_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjects(List<ProjectNameApiResult> projects) {
    this.projects = projects;
  }


  public AutoTestResultReasonProjectApiResult failureClassRegexes(List<FailureClassRegexApiResult> failureClassRegexes) {
    this.failureClassRegexes = failureClassRegexes;
    return this;
  }

  public AutoTestResultReasonProjectApiResult addFailureClassRegexesItem(FailureClassRegexApiResult failureClassRegexesItem) {
    if (this.failureClassRegexes == null) {
      this.failureClassRegexes = new ArrayList<>();
    }
    this.failureClassRegexes.add(failureClassRegexesItem);
    return this;
  }

  /**
   * Failure category regexes
   * @return failureClassRegexes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_REGEXES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<FailureClassRegexApiResult> getFailureClassRegexes() {
    return failureClassRegexes;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_REGEXES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailureClassRegexes(List<FailureClassRegexApiResult> failureClassRegexes) {
    this.failureClassRegexes = failureClassRegexes;
  }


  public AutoTestResultReasonProjectApiResult name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Failure category name
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public AutoTestResultReasonProjectApiResult modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Failure category last modification date
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public AutoTestResultReasonProjectApiResult modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Failure category last modifier identifier
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  /**
   * Return true if this AutoTestResultReasonProjectApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestResultReasonProjectApiResult autoTestResultReasonProjectApiResult = (AutoTestResultReasonProjectApiResult) o;
    return Objects.equals(this.id, autoTestResultReasonProjectApiResult.id) &&
        Objects.equals(this.isDeleted, autoTestResultReasonProjectApiResult.isDeleted) &&
        Objects.equals(this.failureCategory, autoTestResultReasonProjectApiResult.failureCategory) &&
        Objects.equals(this.createdDate, autoTestResultReasonProjectApiResult.createdDate) &&
        Objects.equals(this.createdById, autoTestResultReasonProjectApiResult.createdById) &&
        Objects.equals(this.projects, autoTestResultReasonProjectApiResult.projects) &&
        Objects.equals(this.failureClassRegexes, autoTestResultReasonProjectApiResult.failureClassRegexes) &&
        equalsNullable(this.name, autoTestResultReasonProjectApiResult.name) &&
        equalsNullable(this.modifiedDate, autoTestResultReasonProjectApiResult.modifiedDate) &&
        equalsNullable(this.modifiedById, autoTestResultReasonProjectApiResult.modifiedById);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isDeleted, failureCategory, createdDate, createdById, projects, failureClassRegexes, hashCodeNullable(name), hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestResultReasonProjectApiResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    failureCategory: ").append(toIndentedString(failureCategory)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    projects: ").append(toIndentedString(projects)).append("\n");
    sb.append("    failureClassRegexes: ").append(toIndentedString(failureClassRegexes)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

