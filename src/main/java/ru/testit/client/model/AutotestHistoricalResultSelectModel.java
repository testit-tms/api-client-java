/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AutotestResultOutcome;
import ru.testit.client.model.Int64RangeSelectorModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutotestHistoricalResultSelectModel
 */
@JsonPropertyOrder({
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_OUTCOMES,
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_TEST_PLAN_IDS,
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_TEST_RUN_IDS,
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_CONFIGURATION_IDS,
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_LAUNCH_SOURCE,
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_USER_IDS,
  AutotestHistoricalResultSelectModel.JSON_PROPERTY_DURATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AutotestHistoricalResultSelectModel {
  public static final String JSON_PROPERTY_OUTCOMES = "outcomes";
  private JsonNullable<Set<AutotestResultOutcome>> outcomes = JsonNullable.<Set<AutotestResultOutcome>>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_IDS = "testPlanIds";
  private JsonNullable<Set<UUID>> testPlanIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_TEST_RUN_IDS = "testRunIds";
  private JsonNullable<Set<UUID>> testRunIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_CONFIGURATION_IDS = "configurationIds";
  private JsonNullable<Set<UUID>> configurationIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_LAUNCH_SOURCE = "launchSource";
  private JsonNullable<String> launchSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_USER_IDS = "userIds";
  private JsonNullable<Set<UUID>> userIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Int64RangeSelectorModel duration;

  public AutotestHistoricalResultSelectModel() { 
  }

  public AutotestHistoricalResultSelectModel outcomes(Set<AutotestResultOutcome> outcomes) {
    this.outcomes = JsonNullable.<Set<AutotestResultOutcome>>of(outcomes);
    return this;
  }

  public AutotestHistoricalResultSelectModel addOutcomesItem(AutotestResultOutcome outcomesItem) {
    if (this.outcomes == null || !this.outcomes.isPresent()) {
      this.outcomes = JsonNullable.<Set<AutotestResultOutcome>>of(new LinkedHashSet<>());
    }
    try {
      this.outcomes.get().add(outcomesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get outcomes
   * @return outcomes
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<AutotestResultOutcome> getOutcomes() {
        return outcomes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTCOMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<AutotestResultOutcome>> getOutcomes_JsonNullable() {
    return outcomes;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTCOMES)
  public void setOutcomes_JsonNullable(JsonNullable<Set<AutotestResultOutcome>> outcomes) {
    this.outcomes = outcomes;
  }

  public void setOutcomes(Set<AutotestResultOutcome> outcomes) {
    this.outcomes = JsonNullable.<Set<AutotestResultOutcome>>of(outcomes);
  }


  public AutotestHistoricalResultSelectModel testPlanIds(Set<UUID> testPlanIds) {
    this.testPlanIds = JsonNullable.<Set<UUID>>of(testPlanIds);
    return this;
  }

  public AutotestHistoricalResultSelectModel addTestPlanIdsItem(UUID testPlanIdsItem) {
    if (this.testPlanIds == null || !this.testPlanIds.isPresent()) {
      this.testPlanIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.testPlanIds.get().add(testPlanIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get testPlanIds
   * @return testPlanIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getTestPlanIds() {
        return testPlanIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getTestPlanIds_JsonNullable() {
    return testPlanIds;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_IDS)
  public void setTestPlanIds_JsonNullable(JsonNullable<Set<UUID>> testPlanIds) {
    this.testPlanIds = testPlanIds;
  }

  public void setTestPlanIds(Set<UUID> testPlanIds) {
    this.testPlanIds = JsonNullable.<Set<UUID>>of(testPlanIds);
  }


  public AutotestHistoricalResultSelectModel testRunIds(Set<UUID> testRunIds) {
    this.testRunIds = JsonNullable.<Set<UUID>>of(testRunIds);
    return this;
  }

  public AutotestHistoricalResultSelectModel addTestRunIdsItem(UUID testRunIdsItem) {
    if (this.testRunIds == null || !this.testRunIds.isPresent()) {
      this.testRunIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.testRunIds.get().add(testRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get testRunIds
   * @return testRunIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getTestRunIds() {
        return testRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getTestRunIds_JsonNullable() {
    return testRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RUN_IDS)
  public void setTestRunIds_JsonNullable(JsonNullable<Set<UUID>> testRunIds) {
    this.testRunIds = testRunIds;
  }

  public void setTestRunIds(Set<UUID> testRunIds) {
    this.testRunIds = JsonNullable.<Set<UUID>>of(testRunIds);
  }


  public AutotestHistoricalResultSelectModel configurationIds(Set<UUID> configurationIds) {
    this.configurationIds = JsonNullable.<Set<UUID>>of(configurationIds);
    return this;
  }

  public AutotestHistoricalResultSelectModel addConfigurationIdsItem(UUID configurationIdsItem) {
    if (this.configurationIds == null || !this.configurationIds.isPresent()) {
      this.configurationIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.configurationIds.get().add(configurationIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get configurationIds
   * @return configurationIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getConfigurationIds() {
        return configurationIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIGURATION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getConfigurationIds_JsonNullable() {
    return configurationIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_IDS)
  public void setConfigurationIds_JsonNullable(JsonNullable<Set<UUID>> configurationIds) {
    this.configurationIds = configurationIds;
  }

  public void setConfigurationIds(Set<UUID> configurationIds) {
    this.configurationIds = JsonNullable.<Set<UUID>>of(configurationIds);
  }


  public AutotestHistoricalResultSelectModel launchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
    return this;
  }

   /**
   * Get launchSource
   * @return launchSource
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getLaunchSource() {
        return launchSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLaunchSource_JsonNullable() {
    return launchSource;
  }
  
  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  public void setLaunchSource_JsonNullable(JsonNullable<String> launchSource) {
    this.launchSource = launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
  }


  public AutotestHistoricalResultSelectModel userIds(Set<UUID> userIds) {
    this.userIds = JsonNullable.<Set<UUID>>of(userIds);
    return this;
  }

  public AutotestHistoricalResultSelectModel addUserIdsItem(UUID userIdsItem) {
    if (this.userIds == null || !this.userIds.isPresent()) {
      this.userIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.userIds.get().add(userIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get userIds
   * @return userIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getUserIds() {
        return userIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_USER_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getUserIds_JsonNullable() {
    return userIds;
  }
  
  @JsonProperty(JSON_PROPERTY_USER_IDS)
  public void setUserIds_JsonNullable(JsonNullable<Set<UUID>> userIds) {
    this.userIds = userIds;
  }

  public void setUserIds(Set<UUID> userIds) {
    this.userIds = JsonNullable.<Set<UUID>>of(userIds);
  }


  public AutotestHistoricalResultSelectModel duration(Int64RangeSelectorModel duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Int64RangeSelectorModel getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDuration(Int64RangeSelectorModel duration) {
    this.duration = duration;
  }


  /**
   * Return true if this AutotestHistoricalResultSelectModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutotestHistoricalResultSelectModel autotestHistoricalResultSelectModel = (AutotestHistoricalResultSelectModel) o;
    return equalsNullable(this.outcomes, autotestHistoricalResultSelectModel.outcomes) &&
        equalsNullable(this.testPlanIds, autotestHistoricalResultSelectModel.testPlanIds) &&
        equalsNullable(this.testRunIds, autotestHistoricalResultSelectModel.testRunIds) &&
        equalsNullable(this.configurationIds, autotestHistoricalResultSelectModel.configurationIds) &&
        equalsNullable(this.launchSource, autotestHistoricalResultSelectModel.launchSource) &&
        equalsNullable(this.userIds, autotestHistoricalResultSelectModel.userIds) &&
        Objects.equals(this.duration, autotestHistoricalResultSelectModel.duration);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(outcomes), hashCodeNullable(testPlanIds), hashCodeNullable(testRunIds), hashCodeNullable(configurationIds), hashCodeNullable(launchSource), hashCodeNullable(userIds), duration);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutotestHistoricalResultSelectModel {\n");
    sb.append("    outcomes: ").append(toIndentedString(outcomes)).append("\n");
    sb.append("    testPlanIds: ").append(toIndentedString(testPlanIds)).append("\n");
    sb.append("    testRunIds: ").append(toIndentedString(testRunIds)).append("\n");
    sb.append("    configurationIds: ").append(toIndentedString(configurationIds)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("    userIds: ").append(toIndentedString(userIds)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

