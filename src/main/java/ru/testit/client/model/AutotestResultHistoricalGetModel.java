/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AutotestResultOutcome;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * AutotestResultHistoricalGetModel
 */
@JsonPropertyOrder({
  AutotestResultHistoricalGetModel.JSON_PROPERTY_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_CREATED_DATE,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_CREATED_BY_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_CREATED_BY_NAME,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_TEST_RUN_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_TEST_RUN_NAME,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_CONFIGURATION_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_CONFIGURATION_NAME,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_OUTCOME,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_LAUNCH_SOURCE,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_MODIFIED_DATE,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_MODIFIED_BY_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_TEST_PLAN_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_TEST_PLAN_GLOBAL_ID,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_TEST_PLAN_NAME,
  AutotestResultHistoricalGetModel.JSON_PROPERTY_DURATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AutotestResultHistoricalGetModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_CREATED_BY_NAME = "createdByName";
  private JsonNullable<String> createdByName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TEST_RUN_ID = "testRunId";
  private UUID testRunId;

  public static final String JSON_PROPERTY_TEST_RUN_NAME = "testRunName";
  private JsonNullable<String> testRunName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONFIGURATION_ID = "configurationId";
  private UUID configurationId;

  public static final String JSON_PROPERTY_CONFIGURATION_NAME = "configurationName";
  private JsonNullable<String> configurationName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_OUTCOME = "outcome";
  private AutotestResultOutcome outcome;

  public static final String JSON_PROPERTY_LAUNCH_SOURCE = "launchSource";
  private JsonNullable<String> launchSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_ID = "testPlanId";
  private JsonNullable<UUID> testPlanId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_GLOBAL_ID = "testPlanGlobalId";
  private JsonNullable<Long> testPlanGlobalId = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_NAME = "testPlanName";
  private JsonNullable<String> testPlanName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DURATION = "duration";
  private JsonNullable<Long> duration = JsonNullable.<Long>undefined();

  public AutotestResultHistoricalGetModel() { 
  }

  public AutotestResultHistoricalGetModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public AutotestResultHistoricalGetModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public AutotestResultHistoricalGetModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public AutotestResultHistoricalGetModel createdByName(String createdByName) {
    this.createdByName = JsonNullable.<String>of(createdByName);
    return this;
  }

   /**
   * Get createdByName
   * @return createdByName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getCreatedByName() {
        return createdByName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_BY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedByName_JsonNullable() {
    return createdByName;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_BY_NAME)
  public void setCreatedByName_JsonNullable(JsonNullable<String> createdByName) {
    this.createdByName = createdByName;
  }

  public void setCreatedByName(String createdByName) {
    this.createdByName = JsonNullable.<String>of(createdByName);
  }


  public AutotestResultHistoricalGetModel testRunId(UUID testRunId) {
    this.testRunId = testRunId;
    return this;
  }

   /**
   * Get testRunId
   * @return testRunId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getTestRunId() {
    return testRunId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestRunId(UUID testRunId) {
    this.testRunId = testRunId;
  }


  public AutotestResultHistoricalGetModel testRunName(String testRunName) {
    this.testRunName = JsonNullable.<String>of(testRunName);
    return this;
  }

   /**
   * Get testRunName
   * @return testRunName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTestRunName() {
        return testRunName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RUN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTestRunName_JsonNullable() {
    return testRunName;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RUN_NAME)
  public void setTestRunName_JsonNullable(JsonNullable<String> testRunName) {
    this.testRunName = testRunName;
  }

  public void setTestRunName(String testRunName) {
    this.testRunName = JsonNullable.<String>of(testRunName);
  }


  public AutotestResultHistoricalGetModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Get configurationId
   * @return configurationId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getConfigurationId() {
    return configurationId;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }


  public AutotestResultHistoricalGetModel configurationName(String configurationName) {
    this.configurationName = JsonNullable.<String>of(configurationName);
    return this;
  }

   /**
   * Get configurationName
   * @return configurationName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getConfigurationName() {
        return configurationName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIGURATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getConfigurationName_JsonNullable() {
    return configurationName;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_NAME)
  public void setConfigurationName_JsonNullable(JsonNullable<String> configurationName) {
    this.configurationName = configurationName;
  }

  public void setConfigurationName(String configurationName) {
    this.configurationName = JsonNullable.<String>of(configurationName);
  }


  public AutotestResultHistoricalGetModel outcome(AutotestResultOutcome outcome) {
    this.outcome = outcome;
    return this;
  }

   /**
   * Get outcome
   * @return outcome
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public AutotestResultOutcome getOutcome() {
    return outcome;
  }


  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutcome(AutotestResultOutcome outcome) {
    this.outcome = outcome;
  }


  public AutotestResultHistoricalGetModel launchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
    return this;
  }

   /**
   * Get launchSource
   * @return launchSource
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getLaunchSource() {
        return launchSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLaunchSource_JsonNullable() {
    return launchSource;
  }
  
  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  public void setLaunchSource_JsonNullable(JsonNullable<String> launchSource) {
    this.launchSource = launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
  }


  public AutotestResultHistoricalGetModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public AutotestResultHistoricalGetModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public AutotestResultHistoricalGetModel testPlanId(UUID testPlanId) {
    this.testPlanId = JsonNullable.<UUID>of(testPlanId);
    return this;
  }

   /**
   * Get testPlanId
   * @return testPlanId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTestPlanId() {
        return testPlanId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTestPlanId_JsonNullable() {
    return testPlanId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_ID)
  public void setTestPlanId_JsonNullable(JsonNullable<UUID> testPlanId) {
    this.testPlanId = testPlanId;
  }

  public void setTestPlanId(UUID testPlanId) {
    this.testPlanId = JsonNullable.<UUID>of(testPlanId);
  }


  public AutotestResultHistoricalGetModel testPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = JsonNullable.<Long>of(testPlanGlobalId);
    return this;
  }

   /**
   * Get testPlanGlobalId
   * @return testPlanGlobalId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getTestPlanGlobalId() {
        return testPlanGlobalId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getTestPlanGlobalId_JsonNullable() {
    return testPlanGlobalId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_GLOBAL_ID)
  public void setTestPlanGlobalId_JsonNullable(JsonNullable<Long> testPlanGlobalId) {
    this.testPlanGlobalId = testPlanGlobalId;
  }

  public void setTestPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = JsonNullable.<Long>of(testPlanGlobalId);
  }


  public AutotestResultHistoricalGetModel testPlanName(String testPlanName) {
    this.testPlanName = JsonNullable.<String>of(testPlanName);
    return this;
  }

   /**
   * Get testPlanName
   * @return testPlanName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTestPlanName() {
        return testPlanName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTestPlanName_JsonNullable() {
    return testPlanName;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_NAME)
  public void setTestPlanName_JsonNullable(JsonNullable<String> testPlanName) {
    this.testPlanName = testPlanName;
  }

  public void setTestPlanName(String testPlanName) {
    this.testPlanName = JsonNullable.<String>of(testPlanName);
  }


  public AutotestResultHistoricalGetModel duration(Long duration) {
    this.duration = JsonNullable.<Long>of(duration);
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getDuration() {
        return duration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getDuration_JsonNullable() {
    return duration;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION)
  public void setDuration_JsonNullable(JsonNullable<Long> duration) {
    this.duration = duration;
  }

  public void setDuration(Long duration) {
    this.duration = JsonNullable.<Long>of(duration);
  }


  /**
   * Return true if this AutotestResultHistoricalGetModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutotestResultHistoricalGetModel autotestResultHistoricalGetModel = (AutotestResultHistoricalGetModel) o;
    return Objects.equals(this.id, autotestResultHistoricalGetModel.id) &&
        Objects.equals(this.createdDate, autotestResultHistoricalGetModel.createdDate) &&
        Objects.equals(this.createdById, autotestResultHistoricalGetModel.createdById) &&
        equalsNullable(this.createdByName, autotestResultHistoricalGetModel.createdByName) &&
        Objects.equals(this.testRunId, autotestResultHistoricalGetModel.testRunId) &&
        equalsNullable(this.testRunName, autotestResultHistoricalGetModel.testRunName) &&
        Objects.equals(this.configurationId, autotestResultHistoricalGetModel.configurationId) &&
        equalsNullable(this.configurationName, autotestResultHistoricalGetModel.configurationName) &&
        Objects.equals(this.outcome, autotestResultHistoricalGetModel.outcome) &&
        equalsNullable(this.launchSource, autotestResultHistoricalGetModel.launchSource) &&
        equalsNullable(this.modifiedDate, autotestResultHistoricalGetModel.modifiedDate) &&
        equalsNullable(this.modifiedById, autotestResultHistoricalGetModel.modifiedById) &&
        equalsNullable(this.testPlanId, autotestResultHistoricalGetModel.testPlanId) &&
        equalsNullable(this.testPlanGlobalId, autotestResultHistoricalGetModel.testPlanGlobalId) &&
        equalsNullable(this.testPlanName, autotestResultHistoricalGetModel.testPlanName) &&
        equalsNullable(this.duration, autotestResultHistoricalGetModel.duration);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, createdById, hashCodeNullable(createdByName), testRunId, hashCodeNullable(testRunName), configurationId, hashCodeNullable(configurationName), outcome, hashCodeNullable(launchSource), hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById), hashCodeNullable(testPlanId), hashCodeNullable(testPlanGlobalId), hashCodeNullable(testPlanName), hashCodeNullable(duration));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutotestResultHistoricalGetModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    createdByName: ").append(toIndentedString(createdByName)).append("\n");
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    testRunName: ").append(toIndentedString(testRunName)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    configurationName: ").append(toIndentedString(configurationName)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    testPlanId: ").append(toIndentedString(testPlanId)).append("\n");
    sb.append("    testPlanGlobalId: ").append(toIndentedString(testPlanGlobalId)).append("\n");
    sb.append("    testPlanName: ").append(toIndentedString(testPlanName)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

