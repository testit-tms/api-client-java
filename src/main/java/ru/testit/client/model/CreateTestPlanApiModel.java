/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.TagApiModel;
import ru.testit.client.model.TestSuiteTestPlanApiModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * CreateTestPlanApiModel
 */
@JsonPropertyOrder({
  CreateTestPlanApiModel.JSON_PROPERTY_NAME,
  CreateTestPlanApiModel.JSON_PROPERTY_PROJECT_ID,
  CreateTestPlanApiModel.JSON_PROPERTY_ATTRIBUTES,
  CreateTestPlanApiModel.JSON_PROPERTY_TAGS,
  CreateTestPlanApiModel.JSON_PROPERTY_START_DATE,
  CreateTestPlanApiModel.JSON_PROPERTY_END_DATE,
  CreateTestPlanApiModel.JSON_PROPERTY_DESCRIPTION,
  CreateTestPlanApiModel.JSON_PROPERTY_BUILD,
  CreateTestPlanApiModel.JSON_PROPERTY_PRODUCT_NAME,
  CreateTestPlanApiModel.JSON_PROPERTY_HAS_AUTOMATIC_DURATION_TIMER,
  CreateTestPlanApiModel.JSON_PROPERTY_TEST_SUITE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class CreateTestPlanApiModel {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = new HashMap<>();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<List<TagApiModel>> tags = JsonNullable.<List<TagApiModel>>undefined();

  public static final String JSON_PROPERTY_START_DATE = "startDate";
  private JsonNullable<OffsetDateTime> startDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_END_DATE = "endDate";
  private JsonNullable<OffsetDateTime> endDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_BUILD = "build";
  private JsonNullable<String> build = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PRODUCT_NAME = "productName";
  private JsonNullable<String> productName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HAS_AUTOMATIC_DURATION_TIMER = "hasAutomaticDurationTimer";
  private JsonNullable<Boolean> hasAutomaticDurationTimer = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_TEST_SUITE = "testSuite";
  private JsonNullable<TestSuiteTestPlanApiModel> testSuite = JsonNullable.<TestSuiteTestPlanApiModel>undefined();

  public CreateTestPlanApiModel() { 
  }

  public CreateTestPlanApiModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Test plan name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CreateTestPlanApiModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Project unique identifier
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public CreateTestPlanApiModel attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public CreateTestPlanApiModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Key value pair of test plan custom attributes
   * @return attributes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public CreateTestPlanApiModel tags(List<TagApiModel> tags) {
    this.tags = JsonNullable.<List<TagApiModel>>of(tags);
    return this;
  }

  public CreateTestPlanApiModel addTagsItem(TagApiModel tagsItem) {
    if (this.tags == null || !this.tags.isPresent()) {
      this.tags = JsonNullable.<List<TagApiModel>>of(new ArrayList<>());
    }
    try {
      this.tags.get().add(tagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Test plan tag names collection
   * @return tags
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<TagApiModel> getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TagApiModel>> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<List<TagApiModel>> tags) {
    this.tags = tags;
  }

  public void setTags(List<TagApiModel> tags) {
    this.tags = JsonNullable.<List<TagApiModel>>of(tags);
  }


  public CreateTestPlanApiModel startDate(OffsetDateTime startDate) {
    this.startDate = JsonNullable.<OffsetDateTime>of(startDate);
    return this;
  }

  /**
   * Date and time of test plan start
   * @return startDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getStartDate() {
        return startDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_START_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartDate_JsonNullable() {
    return startDate;
  }
  
  @JsonProperty(JSON_PROPERTY_START_DATE)
  public void setStartDate_JsonNullable(JsonNullable<OffsetDateTime> startDate) {
    this.startDate = startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = JsonNullable.<OffsetDateTime>of(startDate);
  }


  public CreateTestPlanApiModel endDate(OffsetDateTime endDate) {
    this.endDate = JsonNullable.<OffsetDateTime>of(endDate);
    return this;
  }

  /**
   * Date and time of test plan end
   * @return endDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getEndDate() {
        return endDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_END_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getEndDate_JsonNullable() {
    return endDate;
  }
  
  @JsonProperty(JSON_PROPERTY_END_DATE)
  public void setEndDate_JsonNullable(JsonNullable<OffsetDateTime> endDate) {
    this.endDate = endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = JsonNullable.<OffsetDateTime>of(endDate);
  }


  public CreateTestPlanApiModel description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Test plan description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public CreateTestPlanApiModel build(String build) {
    this.build = JsonNullable.<String>of(build);
    return this;
  }

  /**
   * Build of the application on which test plan is executed
   * @return build
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getBuild() {
        return build.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_BUILD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getBuild_JsonNullable() {
    return build;
  }
  
  @JsonProperty(JSON_PROPERTY_BUILD)
  public void setBuild_JsonNullable(JsonNullable<String> build) {
    this.build = build;
  }

  public void setBuild(String build) {
    this.build = JsonNullable.<String>of(build);
  }


  public CreateTestPlanApiModel productName(String productName) {
    this.productName = JsonNullable.<String>of(productName);
    return this;
  }

  /**
   * Name of the testing product
   * @return productName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getProductName() {
        return productName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getProductName_JsonNullable() {
    return productName;
  }
  
  @JsonProperty(JSON_PROPERTY_PRODUCT_NAME)
  public void setProductName_JsonNullable(JsonNullable<String> productName) {
    this.productName = productName;
  }

  public void setProductName(String productName) {
    this.productName = JsonNullable.<String>of(productName);
  }


  public CreateTestPlanApiModel hasAutomaticDurationTimer(Boolean hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = JsonNullable.<Boolean>of(hasAutomaticDurationTimer);
    return this;
  }

  /**
   * Boolean flag defines if test plan has automatic duration timer
   * @return hasAutomaticDurationTimer
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Boolean getHasAutomaticDurationTimer() {
        return hasAutomaticDurationTimer.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HAS_AUTOMATIC_DURATION_TIMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getHasAutomaticDurationTimer_JsonNullable() {
    return hasAutomaticDurationTimer;
  }
  
  @JsonProperty(JSON_PROPERTY_HAS_AUTOMATIC_DURATION_TIMER)
  public void setHasAutomaticDurationTimer_JsonNullable(JsonNullable<Boolean> hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
  }

  public void setHasAutomaticDurationTimer(Boolean hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = JsonNullable.<Boolean>of(hasAutomaticDurationTimer);
  }


  public CreateTestPlanApiModel testSuite(TestSuiteTestPlanApiModel testSuite) {
    this.testSuite = JsonNullable.<TestSuiteTestPlanApiModel>of(testSuite);
    return this;
  }

  /**
   * Get testSuite
   * @return testSuite
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public TestSuiteTestPlanApiModel getTestSuite() {
        return testSuite.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_SUITE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TestSuiteTestPlanApiModel> getTestSuite_JsonNullable() {
    return testSuite;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_SUITE)
  public void setTestSuite_JsonNullable(JsonNullable<TestSuiteTestPlanApiModel> testSuite) {
    this.testSuite = testSuite;
  }

  public void setTestSuite(TestSuiteTestPlanApiModel testSuite) {
    this.testSuite = JsonNullable.<TestSuiteTestPlanApiModel>of(testSuite);
  }


  /**
   * Return true if this CreateTestPlanApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTestPlanApiModel createTestPlanApiModel = (CreateTestPlanApiModel) o;
    return Objects.equals(this.name, createTestPlanApiModel.name) &&
        Objects.equals(this.projectId, createTestPlanApiModel.projectId) &&
        Objects.equals(this.attributes, createTestPlanApiModel.attributes) &&
        equalsNullable(this.tags, createTestPlanApiModel.tags) &&
        equalsNullable(this.startDate, createTestPlanApiModel.startDate) &&
        equalsNullable(this.endDate, createTestPlanApiModel.endDate) &&
        equalsNullable(this.description, createTestPlanApiModel.description) &&
        equalsNullable(this.build, createTestPlanApiModel.build) &&
        equalsNullable(this.productName, createTestPlanApiModel.productName) &&
        equalsNullable(this.hasAutomaticDurationTimer, createTestPlanApiModel.hasAutomaticDurationTimer) &&
        equalsNullable(this.testSuite, createTestPlanApiModel.testSuite);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, projectId, attributes, hashCodeNullable(tags), hashCodeNullable(startDate), hashCodeNullable(endDate), hashCodeNullable(description), hashCodeNullable(build), hashCodeNullable(productName), hashCodeNullable(hasAutomaticDurationTimer), hashCodeNullable(testSuite));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTestPlanApiModel {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    hasAutomaticDurationTimer: ").append(toIndentedString(hasAutomaticDurationTimer)).append("\n");
    sb.append("    testSuite: ").append(toIndentedString(testSuite)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

