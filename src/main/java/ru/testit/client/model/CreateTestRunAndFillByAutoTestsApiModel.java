/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AssignAttachmentApiModel;
import ru.testit.client.model.CreateLinkApiModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * CreateTestRunAndFillByAutoTestsApiModel
 */
@JsonPropertyOrder({
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_PROJECT_ID,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_CONFIGURATION_IDS,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_AUTO_TEST_EXTERNAL_IDS,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_NAME,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_DESCRIPTION,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_LAUNCH_SOURCE,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_ATTACHMENTS,
  CreateTestRunAndFillByAutoTestsApiModel.JSON_PROPERTY_LINKS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class CreateTestRunAndFillByAutoTestsApiModel {
  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_CONFIGURATION_IDS = "configurationIds";
  private List<UUID> configurationIds = new ArrayList<>();

  public static final String JSON_PROPERTY_AUTO_TEST_EXTERNAL_IDS = "autoTestExternalIds";
  private List<String> autoTestExternalIds = new ArrayList<>();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAUNCH_SOURCE = "launchSource";
  private JsonNullable<String> launchSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private JsonNullable<List<AssignAttachmentApiModel>> attachments = JsonNullable.<List<AssignAttachmentApiModel>>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<CreateLinkApiModel>> links = JsonNullable.<List<CreateLinkApiModel>>undefined();

  public CreateTestRunAndFillByAutoTestsApiModel() { 
  }

  public CreateTestRunAndFillByAutoTestsApiModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Specifies the GUID of the project, in which a test run will be created.
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public CreateTestRunAndFillByAutoTestsApiModel configurationIds(List<UUID> configurationIds) {
    this.configurationIds = configurationIds;
    return this;
  }

  public CreateTestRunAndFillByAutoTestsApiModel addConfigurationIdsItem(UUID configurationIdsItem) {
    if (this.configurationIds == null) {
      this.configurationIds = new ArrayList<>();
    }
    this.configurationIds.add(configurationIdsItem);
    return this;
  }

  /**
   * Specifies the configuration GUIDs, from which test points are created. You can specify several GUIDs.
   * @return configurationIds
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<UUID> getConfigurationIds() {
    return configurationIds;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfigurationIds(List<UUID> configurationIds) {
    this.configurationIds = configurationIds;
  }


  public CreateTestRunAndFillByAutoTestsApiModel autoTestExternalIds(List<String> autoTestExternalIds) {
    this.autoTestExternalIds = autoTestExternalIds;
    return this;
  }

  public CreateTestRunAndFillByAutoTestsApiModel addAutoTestExternalIdsItem(String autoTestExternalIdsItem) {
    if (this.autoTestExternalIds == null) {
      this.autoTestExternalIds = new ArrayList<>();
    }
    this.autoTestExternalIds.add(autoTestExternalIdsItem);
    return this;
  }

  /**
   * Specifies the external ID of the autotest. You can specify several IDs.
   * @return autoTestExternalIds
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_EXTERNAL_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getAutoTestExternalIds() {
    return autoTestExternalIds;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_TEST_EXTERNAL_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutoTestExternalIds(List<String> autoTestExternalIds) {
    this.autoTestExternalIds = autoTestExternalIds;
  }


  public CreateTestRunAndFillByAutoTestsApiModel name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Specifies the name of the test run.
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public CreateTestRunAndFillByAutoTestsApiModel description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Specifies the test run description.
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public CreateTestRunAndFillByAutoTestsApiModel launchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
    return this;
  }

  /**
   * Specifies the test run launch source.
   * @return launchSource
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getLaunchSource() {
        return launchSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLaunchSource_JsonNullable() {
    return launchSource;
  }
  
  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  public void setLaunchSource_JsonNullable(JsonNullable<String> launchSource) {
    this.launchSource = launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
  }


  public CreateTestRunAndFillByAutoTestsApiModel attachments(List<AssignAttachmentApiModel> attachments) {
    this.attachments = JsonNullable.<List<AssignAttachmentApiModel>>of(attachments);
    return this;
  }

  public CreateTestRunAndFillByAutoTestsApiModel addAttachmentsItem(AssignAttachmentApiModel attachmentsItem) {
    if (this.attachments == null || !this.attachments.isPresent()) {
      this.attachments = JsonNullable.<List<AssignAttachmentApiModel>>of(new ArrayList<>());
    }
    try {
      this.attachments.get().add(attachmentsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of attachment ids to relate to the test run
   * @return attachments
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AssignAttachmentApiModel> getAttachments() {
        return attachments.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AssignAttachmentApiModel>> getAttachments_JsonNullable() {
    return attachments;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  public void setAttachments_JsonNullable(JsonNullable<List<AssignAttachmentApiModel>> attachments) {
    this.attachments = attachments;
  }

  public void setAttachments(List<AssignAttachmentApiModel> attachments) {
    this.attachments = JsonNullable.<List<AssignAttachmentApiModel>>of(attachments);
  }


  public CreateTestRunAndFillByAutoTestsApiModel links(List<CreateLinkApiModel> links) {
    this.links = JsonNullable.<List<CreateLinkApiModel>>of(links);
    return this;
  }

  public CreateTestRunAndFillByAutoTestsApiModel addLinksItem(CreateLinkApiModel linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<CreateLinkApiModel>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of links to relate to the test run
   * @return links
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<CreateLinkApiModel> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<CreateLinkApiModel>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<CreateLinkApiModel>> links) {
    this.links = links;
  }

  public void setLinks(List<CreateLinkApiModel> links) {
    this.links = JsonNullable.<List<CreateLinkApiModel>>of(links);
  }


  /**
   * Return true if this CreateTestRunAndFillByAutoTestsApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateTestRunAndFillByAutoTestsApiModel createTestRunAndFillByAutoTestsApiModel = (CreateTestRunAndFillByAutoTestsApiModel) o;
    return Objects.equals(this.projectId, createTestRunAndFillByAutoTestsApiModel.projectId) &&
        Objects.equals(this.configurationIds, createTestRunAndFillByAutoTestsApiModel.configurationIds) &&
        Objects.equals(this.autoTestExternalIds, createTestRunAndFillByAutoTestsApiModel.autoTestExternalIds) &&
        equalsNullable(this.name, createTestRunAndFillByAutoTestsApiModel.name) &&
        equalsNullable(this.description, createTestRunAndFillByAutoTestsApiModel.description) &&
        equalsNullable(this.launchSource, createTestRunAndFillByAutoTestsApiModel.launchSource) &&
        equalsNullable(this.attachments, createTestRunAndFillByAutoTestsApiModel.attachments) &&
        equalsNullable(this.links, createTestRunAndFillByAutoTestsApiModel.links);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectId, configurationIds, autoTestExternalIds, hashCodeNullable(name), hashCodeNullable(description), hashCodeNullable(launchSource), hashCodeNullable(attachments), hashCodeNullable(links));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateTestRunAndFillByAutoTestsApiModel {\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    configurationIds: ").append(toIndentedString(configurationIds)).append("\n");
    sb.append("    autoTestExternalIds: ").append(toIndentedString(autoTestExternalIds)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

