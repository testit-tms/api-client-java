/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * CustomAttributeReplaceModel
 */
@JsonPropertyOrder({
  CustomAttributeReplaceModel.JSON_PROPERTY_CUSTOM_ATTRIBUTE_OPTIONS_REPLACE_IDS,
  CustomAttributeReplaceModel.JSON_PROPERTY_TARGET_CUSTOM_ATTRIBUTE_ID,
  CustomAttributeReplaceModel.JSON_PROPERTY_SOURCE_CUSTOM_ATTRIBUTE_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class CustomAttributeReplaceModel {
  public static final String JSON_PROPERTY_CUSTOM_ATTRIBUTE_OPTIONS_REPLACE_IDS = "customAttributeOptionsReplaceIds";
  private JsonNullable<Map<String, String>> customAttributeOptionsReplaceIds = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_TARGET_CUSTOM_ATTRIBUTE_ID = "targetCustomAttributeId";
  private UUID targetCustomAttributeId;

  public static final String JSON_PROPERTY_SOURCE_CUSTOM_ATTRIBUTE_IDS = "sourceCustomAttributeIds";
  private JsonNullable<Set<UUID>> sourceCustomAttributeIds = JsonNullable.<Set<UUID>>undefined();

  public CustomAttributeReplaceModel() { 
  }

  public CustomAttributeReplaceModel customAttributeOptionsReplaceIds(Map<String, String> customAttributeOptionsReplaceIds) {
    this.customAttributeOptionsReplaceIds = JsonNullable.<Map<String, String>>of(customAttributeOptionsReplaceIds);
    return this;
  }

  public CustomAttributeReplaceModel putCustomAttributeOptionsReplaceIdsItem(String key, String customAttributeOptionsReplaceIdsItem) {
    if (this.customAttributeOptionsReplaceIds == null || !this.customAttributeOptionsReplaceIds.isPresent()) {
      this.customAttributeOptionsReplaceIds = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.customAttributeOptionsReplaceIds.get().put(key, customAttributeOptionsReplaceIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get customAttributeOptionsReplaceIds
   * @return customAttributeOptionsReplaceIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Map<String, String> getCustomAttributeOptionsReplaceIds() {
        return customAttributeOptionsReplaceIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_ATTRIBUTE_OPTIONS_REPLACE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getCustomAttributeOptionsReplaceIds_JsonNullable() {
    return customAttributeOptionsReplaceIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_ATTRIBUTE_OPTIONS_REPLACE_IDS)
  public void setCustomAttributeOptionsReplaceIds_JsonNullable(JsonNullable<Map<String, String>> customAttributeOptionsReplaceIds) {
    this.customAttributeOptionsReplaceIds = customAttributeOptionsReplaceIds;
  }

  public void setCustomAttributeOptionsReplaceIds(Map<String, String> customAttributeOptionsReplaceIds) {
    this.customAttributeOptionsReplaceIds = JsonNullable.<Map<String, String>>of(customAttributeOptionsReplaceIds);
  }


  public CustomAttributeReplaceModel targetCustomAttributeId(UUID targetCustomAttributeId) {
    this.targetCustomAttributeId = targetCustomAttributeId;
    return this;
  }

   /**
   * Get targetCustomAttributeId
   * @return targetCustomAttributeId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TARGET_CUSTOM_ATTRIBUTE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTargetCustomAttributeId() {
    return targetCustomAttributeId;
  }


  @JsonProperty(JSON_PROPERTY_TARGET_CUSTOM_ATTRIBUTE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTargetCustomAttributeId(UUID targetCustomAttributeId) {
    this.targetCustomAttributeId = targetCustomAttributeId;
  }


  public CustomAttributeReplaceModel sourceCustomAttributeIds(Set<UUID> sourceCustomAttributeIds) {
    this.sourceCustomAttributeIds = JsonNullable.<Set<UUID>>of(sourceCustomAttributeIds);
    return this;
  }

  public CustomAttributeReplaceModel addSourceCustomAttributeIdsItem(UUID sourceCustomAttributeIdsItem) {
    if (this.sourceCustomAttributeIds == null || !this.sourceCustomAttributeIds.isPresent()) {
      this.sourceCustomAttributeIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.sourceCustomAttributeIds.get().add(sourceCustomAttributeIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get sourceCustomAttributeIds
   * @return sourceCustomAttributeIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getSourceCustomAttributeIds() {
        return sourceCustomAttributeIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_CUSTOM_ATTRIBUTE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getSourceCustomAttributeIds_JsonNullable() {
    return sourceCustomAttributeIds;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_CUSTOM_ATTRIBUTE_IDS)
  public void setSourceCustomAttributeIds_JsonNullable(JsonNullable<Set<UUID>> sourceCustomAttributeIds) {
    this.sourceCustomAttributeIds = sourceCustomAttributeIds;
  }

  public void setSourceCustomAttributeIds(Set<UUID> sourceCustomAttributeIds) {
    this.sourceCustomAttributeIds = JsonNullable.<Set<UUID>>of(sourceCustomAttributeIds);
  }


  /**
   * Return true if this CustomAttributeReplaceModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomAttributeReplaceModel customAttributeReplaceModel = (CustomAttributeReplaceModel) o;
    return equalsNullable(this.customAttributeOptionsReplaceIds, customAttributeReplaceModel.customAttributeOptionsReplaceIds) &&
        Objects.equals(this.targetCustomAttributeId, customAttributeReplaceModel.targetCustomAttributeId) &&
        equalsNullable(this.sourceCustomAttributeIds, customAttributeReplaceModel.sourceCustomAttributeIds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(customAttributeOptionsReplaceIds), targetCustomAttributeId, hashCodeNullable(sourceCustomAttributeIds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomAttributeReplaceModel {\n");
    sb.append("    customAttributeOptionsReplaceIds: ").append(toIndentedString(customAttributeOptionsReplaceIds)).append("\n");
    sb.append("    targetCustomAttributeId: ").append(toIndentedString(targetCustomAttributeId)).append("\n");
    sb.append("    sourceCustomAttributeIds: ").append(toIndentedString(sourceCustomAttributeIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

