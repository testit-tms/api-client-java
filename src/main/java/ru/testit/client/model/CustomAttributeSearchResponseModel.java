/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import ru.testit.client.model.CustomAttributeOptionModel;
import ru.testit.client.model.CustomAttributeTypesEnum;
import ru.testit.client.model.ProjectShortestModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * CustomAttributeSearchResponseModel
 */
@JsonPropertyOrder({
  CustomAttributeSearchResponseModel.JSON_PROPERTY_WORK_ITEM_USAGE,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_TEST_PLAN_USAGE,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_ID,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_OPTIONS,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_TYPE,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_IS_DELETED,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_NAME,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_IS_ENABLED,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_IS_REQUIRED,
  CustomAttributeSearchResponseModel.JSON_PROPERTY_IS_GLOBAL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class CustomAttributeSearchResponseModel {
  public static final String JSON_PROPERTY_WORK_ITEM_USAGE = "workItemUsage";
  private List<ProjectShortestModel> workItemUsage = new ArrayList<>();

  public static final String JSON_PROPERTY_TEST_PLAN_USAGE = "testPlanUsage";
  private List<ProjectShortestModel> testPlanUsage = new ArrayList<>();

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_OPTIONS = "options";
  private List<CustomAttributeOptionModel> options = new ArrayList<>();

  public static final String JSON_PROPERTY_TYPE = "type";
  private CustomAttributeTypesEnum type;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IS_ENABLED = "isEnabled";
  private Boolean isEnabled;

  public static final String JSON_PROPERTY_IS_REQUIRED = "isRequired";
  private Boolean isRequired;

  public static final String JSON_PROPERTY_IS_GLOBAL = "isGlobal";
  private Boolean isGlobal;

  public CustomAttributeSearchResponseModel() { 
  }

  public CustomAttributeSearchResponseModel workItemUsage(List<ProjectShortestModel> workItemUsage) {
    this.workItemUsage = workItemUsage;
    return this;
  }

  public CustomAttributeSearchResponseModel addWorkItemUsageItem(ProjectShortestModel workItemUsageItem) {
    if (this.workItemUsage == null) {
      this.workItemUsage = new ArrayList<>();
    }
    this.workItemUsage.add(workItemUsageItem);
    return this;
  }

  /**
   * Get workItemUsage
   * @return workItemUsage
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ProjectShortestModel> getWorkItemUsage() {
    return workItemUsage;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemUsage(List<ProjectShortestModel> workItemUsage) {
    this.workItemUsage = workItemUsage;
  }


  public CustomAttributeSearchResponseModel testPlanUsage(List<ProjectShortestModel> testPlanUsage) {
    this.testPlanUsage = testPlanUsage;
    return this;
  }

  public CustomAttributeSearchResponseModel addTestPlanUsageItem(ProjectShortestModel testPlanUsageItem) {
    if (this.testPlanUsage == null) {
      this.testPlanUsage = new ArrayList<>();
    }
    this.testPlanUsage.add(testPlanUsageItem);
    return this;
  }

  /**
   * Get testPlanUsage
   * @return testPlanUsage
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ProjectShortestModel> getTestPlanUsage() {
    return testPlanUsage;
  }


  @JsonProperty(JSON_PROPERTY_TEST_PLAN_USAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestPlanUsage(List<ProjectShortestModel> testPlanUsage) {
    this.testPlanUsage = testPlanUsage;
  }


  public CustomAttributeSearchResponseModel id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID of the attribute
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public CustomAttributeSearchResponseModel options(List<CustomAttributeOptionModel> options) {
    this.options = options;
    return this;
  }

  public CustomAttributeSearchResponseModel addOptionsItem(CustomAttributeOptionModel optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

  /**
   * Collection of the attribute options   Available for attributes of type &#x60;options&#x60; and &#x60;multiple options&#x60; only
   * @return options
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<CustomAttributeOptionModel> getOptions() {
    return options;
  }


  @JsonProperty(JSON_PROPERTY_OPTIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOptions(List<CustomAttributeOptionModel> options) {
    this.options = options;
  }


  public CustomAttributeSearchResponseModel type(CustomAttributeTypesEnum type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the attribute
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public CustomAttributeTypesEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(CustomAttributeTypesEnum type) {
    this.type = type;
  }


  public CustomAttributeSearchResponseModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Indicates if the attribute is deleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public CustomAttributeSearchResponseModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the attribute
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public CustomAttributeSearchResponseModel isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

  /**
   * Indicates if the attribute is enabled
   * @return isEnabled
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsEnabled() {
    return isEnabled;
  }


  @JsonProperty(JSON_PROPERTY_IS_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public CustomAttributeSearchResponseModel isRequired(Boolean isRequired) {
    this.isRequired = isRequired;
    return this;
  }

  /**
   * Indicates if the attribute value is mandatory to specify
   * @return isRequired
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsRequired() {
    return isRequired;
  }


  @JsonProperty(JSON_PROPERTY_IS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsRequired(Boolean isRequired) {
    this.isRequired = isRequired;
  }


  public CustomAttributeSearchResponseModel isGlobal(Boolean isGlobal) {
    this.isGlobal = isGlobal;
    return this;
  }

  /**
   * Indicates if the attribute is available across all projects
   * @return isGlobal
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsGlobal() {
    return isGlobal;
  }


  @JsonProperty(JSON_PROPERTY_IS_GLOBAL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsGlobal(Boolean isGlobal) {
    this.isGlobal = isGlobal;
  }


  /**
   * Return true if this CustomAttributeSearchResponseModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomAttributeSearchResponseModel customAttributeSearchResponseModel = (CustomAttributeSearchResponseModel) o;
    return Objects.equals(this.workItemUsage, customAttributeSearchResponseModel.workItemUsage) &&
        Objects.equals(this.testPlanUsage, customAttributeSearchResponseModel.testPlanUsage) &&
        Objects.equals(this.id, customAttributeSearchResponseModel.id) &&
        Objects.equals(this.options, customAttributeSearchResponseModel.options) &&
        Objects.equals(this.type, customAttributeSearchResponseModel.type) &&
        Objects.equals(this.isDeleted, customAttributeSearchResponseModel.isDeleted) &&
        Objects.equals(this.name, customAttributeSearchResponseModel.name) &&
        Objects.equals(this.isEnabled, customAttributeSearchResponseModel.isEnabled) &&
        Objects.equals(this.isRequired, customAttributeSearchResponseModel.isRequired) &&
        Objects.equals(this.isGlobal, customAttributeSearchResponseModel.isGlobal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workItemUsage, testPlanUsage, id, options, type, isDeleted, name, isEnabled, isRequired, isGlobal);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomAttributeSearchResponseModel {\n");
    sb.append("    workItemUsage: ").append(toIndentedString(workItemUsage)).append("\n");
    sb.append("    testPlanUsage: ").append(toIndentedString(testPlanUsage)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    isGlobal: ").append(toIndentedString(isGlobal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

