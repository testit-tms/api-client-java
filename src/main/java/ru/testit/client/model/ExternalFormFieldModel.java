/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ExternalFormFieldModel
 */
@JsonPropertyOrder({
  ExternalFormFieldModel.JSON_PROPERTY_IS_CUSTOM_VALUE_ALLOWED,
  ExternalFormFieldModel.JSON_PROPERTY_FIELD_ID,
  ExternalFormFieldModel.JSON_PROPERTY_FIELD_NAME,
  ExternalFormFieldModel.JSON_PROPERTY_HELP_TEXT,
  ExternalFormFieldModel.JSON_PROPERTY_TYPE,
  ExternalFormFieldModel.JSON_PROPERTY_ARRAY_VALUES_TYPE,
  ExternalFormFieldModel.JSON_PROPERTY_DEFAULT_VALUE,
  ExternalFormFieldModel.JSON_PROPERTY_AUTO_COMPLETE_URL,
  ExternalFormFieldModel.JSON_PROPERTY_CONTROL_TYPE,
  ExternalFormFieldModel.JSON_PROPERTY_MIN_LENGTH,
  ExternalFormFieldModel.JSON_PROPERTY_MAX_LENGTH,
  ExternalFormFieldModel.JSON_PROPERTY_IS_REQUIRED,
  ExternalFormFieldModel.JSON_PROPERTY_MIN,
  ExternalFormFieldModel.JSON_PROPERTY_MAX
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class ExternalFormFieldModel {
  public static final String JSON_PROPERTY_IS_CUSTOM_VALUE_ALLOWED = "isCustomValueAllowed";
  private Boolean isCustomValueAllowed;

  public static final String JSON_PROPERTY_FIELD_ID = "fieldId";
  private JsonNullable<String> fieldId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FIELD_NAME = "fieldName";
  private JsonNullable<String> fieldName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_HELP_TEXT = "helpText";
  private JsonNullable<String> helpText = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TYPE = "type";
  private JsonNullable<String> type = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ARRAY_VALUES_TYPE = "arrayValuesType";
  private JsonNullable<String> arrayValuesType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_DEFAULT_VALUE = "defaultValue";
  private JsonNullable<Object> defaultValue = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_AUTO_COMPLETE_URL = "autoCompleteUrl";
  private JsonNullable<String> autoCompleteUrl = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONTROL_TYPE = "controlType";
  private JsonNullable<String> controlType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MIN_LENGTH = "minLength";
  private JsonNullable<Double> minLength = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_MAX_LENGTH = "maxLength";
  private JsonNullable<Double> maxLength = JsonNullable.<Double>undefined();

  public static final String JSON_PROPERTY_IS_REQUIRED = "isRequired";
  private JsonNullable<Boolean> isRequired = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_MIN = "min";
  private JsonNullable<Object> min = JsonNullable.<Object>of(null);

  public static final String JSON_PROPERTY_MAX = "max";
  private JsonNullable<Object> max = JsonNullable.<Object>of(null);

  public ExternalFormFieldModel() { 
  }

  public ExternalFormFieldModel isCustomValueAllowed(Boolean isCustomValueAllowed) {
    this.isCustomValueAllowed = isCustomValueAllowed;
    return this;
  }

  /**
   * Get isCustomValueAllowed
   * @return isCustomValueAllowed
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_CUSTOM_VALUE_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsCustomValueAllowed() {
    return isCustomValueAllowed;
  }


  @JsonProperty(JSON_PROPERTY_IS_CUSTOM_VALUE_ALLOWED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsCustomValueAllowed(Boolean isCustomValueAllowed) {
    this.isCustomValueAllowed = isCustomValueAllowed;
  }


  public ExternalFormFieldModel fieldId(String fieldId) {
    this.fieldId = JsonNullable.<String>of(fieldId);
    return this;
  }

  /**
   * Get fieldId
   * @return fieldId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getFieldId() {
        return fieldId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIELD_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFieldId_JsonNullable() {
    return fieldId;
  }
  
  @JsonProperty(JSON_PROPERTY_FIELD_ID)
  public void setFieldId_JsonNullable(JsonNullable<String> fieldId) {
    this.fieldId = fieldId;
  }

  public void setFieldId(String fieldId) {
    this.fieldId = JsonNullable.<String>of(fieldId);
  }


  public ExternalFormFieldModel fieldName(String fieldName) {
    this.fieldName = JsonNullable.<String>of(fieldName);
    return this;
  }

  /**
   * Get fieldName
   * @return fieldName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getFieldName() {
        return fieldName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFieldName_JsonNullable() {
    return fieldName;
  }
  
  @JsonProperty(JSON_PROPERTY_FIELD_NAME)
  public void setFieldName_JsonNullable(JsonNullable<String> fieldName) {
    this.fieldName = fieldName;
  }

  public void setFieldName(String fieldName) {
    this.fieldName = JsonNullable.<String>of(fieldName);
  }


  public ExternalFormFieldModel helpText(String helpText) {
    this.helpText = JsonNullable.<String>of(helpText);
    return this;
  }

  /**
   * Get helpText
   * @return helpText
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getHelpText() {
        return helpText.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_HELP_TEXT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getHelpText_JsonNullable() {
    return helpText;
  }
  
  @JsonProperty(JSON_PROPERTY_HELP_TEXT)
  public void setHelpText_JsonNullable(JsonNullable<String> helpText) {
    this.helpText = helpText;
  }

  public void setHelpText(String helpText) {
    this.helpText = JsonNullable.<String>of(helpText);
  }


  public ExternalFormFieldModel type(String type) {
    this.type = JsonNullable.<String>of(type);
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getType() {
        return type.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getType_JsonNullable() {
    return type;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE)
  public void setType_JsonNullable(JsonNullable<String> type) {
    this.type = type;
  }

  public void setType(String type) {
    this.type = JsonNullable.<String>of(type);
  }


  public ExternalFormFieldModel arrayValuesType(String arrayValuesType) {
    this.arrayValuesType = JsonNullable.<String>of(arrayValuesType);
    return this;
  }

  /**
   * Get arrayValuesType
   * @return arrayValuesType
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getArrayValuesType() {
        return arrayValuesType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ARRAY_VALUES_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getArrayValuesType_JsonNullable() {
    return arrayValuesType;
  }
  
  @JsonProperty(JSON_PROPERTY_ARRAY_VALUES_TYPE)
  public void setArrayValuesType_JsonNullable(JsonNullable<String> arrayValuesType) {
    this.arrayValuesType = arrayValuesType;
  }

  public void setArrayValuesType(String arrayValuesType) {
    this.arrayValuesType = JsonNullable.<String>of(arrayValuesType);
  }


  public ExternalFormFieldModel defaultValue(Object defaultValue) {
    this.defaultValue = JsonNullable.<Object>of(defaultValue);
    return this;
  }

  /**
   * Get defaultValue
   * @return defaultValue
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Object getDefaultValue() {
        return defaultValue.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getDefaultValue_JsonNullable() {
    return defaultValue;
  }
  
  @JsonProperty(JSON_PROPERTY_DEFAULT_VALUE)
  public void setDefaultValue_JsonNullable(JsonNullable<Object> defaultValue) {
    this.defaultValue = defaultValue;
  }

  public void setDefaultValue(Object defaultValue) {
    this.defaultValue = JsonNullable.<Object>of(defaultValue);
  }


  public ExternalFormFieldModel autoCompleteUrl(String autoCompleteUrl) {
    this.autoCompleteUrl = JsonNullable.<String>of(autoCompleteUrl);
    return this;
  }

  /**
   * Get autoCompleteUrl
   * @return autoCompleteUrl
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getAutoCompleteUrl() {
        return autoCompleteUrl.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_COMPLETE_URL)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getAutoCompleteUrl_JsonNullable() {
    return autoCompleteUrl;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_COMPLETE_URL)
  public void setAutoCompleteUrl_JsonNullable(JsonNullable<String> autoCompleteUrl) {
    this.autoCompleteUrl = autoCompleteUrl;
  }

  public void setAutoCompleteUrl(String autoCompleteUrl) {
    this.autoCompleteUrl = JsonNullable.<String>of(autoCompleteUrl);
  }


  public ExternalFormFieldModel controlType(String controlType) {
    this.controlType = JsonNullable.<String>of(controlType);
    return this;
  }

  /**
   * Get controlType
   * @return controlType
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getControlType() {
        return controlType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONTROL_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getControlType_JsonNullable() {
    return controlType;
  }
  
  @JsonProperty(JSON_PROPERTY_CONTROL_TYPE)
  public void setControlType_JsonNullable(JsonNullable<String> controlType) {
    this.controlType = controlType;
  }

  public void setControlType(String controlType) {
    this.controlType = JsonNullable.<String>of(controlType);
  }


  public ExternalFormFieldModel minLength(Double minLength) {
    this.minLength = JsonNullable.<Double>of(minLength);
    return this;
  }

  /**
   * Get minLength
   * @return minLength
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Double getMinLength() {
        return minLength.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIN_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMinLength_JsonNullable() {
    return minLength;
  }
  
  @JsonProperty(JSON_PROPERTY_MIN_LENGTH)
  public void setMinLength_JsonNullable(JsonNullable<Double> minLength) {
    this.minLength = minLength;
  }

  public void setMinLength(Double minLength) {
    this.minLength = JsonNullable.<Double>of(minLength);
  }


  public ExternalFormFieldModel maxLength(Double maxLength) {
    this.maxLength = JsonNullable.<Double>of(maxLength);
    return this;
  }

  /**
   * Get maxLength
   * @return maxLength
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Double getMaxLength() {
        return maxLength.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX_LENGTH)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Double> getMaxLength_JsonNullable() {
    return maxLength;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX_LENGTH)
  public void setMaxLength_JsonNullable(JsonNullable<Double> maxLength) {
    this.maxLength = maxLength;
  }

  public void setMaxLength(Double maxLength) {
    this.maxLength = JsonNullable.<Double>of(maxLength);
  }


  public ExternalFormFieldModel isRequired(Boolean isRequired) {
    this.isRequired = JsonNullable.<Boolean>of(isRequired);
    return this;
  }

  /**
   * Get isRequired
   * @return isRequired
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Boolean getIsRequired() {
        return isRequired.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_REQUIRED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsRequired_JsonNullable() {
    return isRequired;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_REQUIRED)
  public void setIsRequired_JsonNullable(JsonNullable<Boolean> isRequired) {
    this.isRequired = isRequired;
  }

  public void setIsRequired(Boolean isRequired) {
    this.isRequired = JsonNullable.<Boolean>of(isRequired);
  }


  public ExternalFormFieldModel min(Object min) {
    this.min = JsonNullable.<Object>of(min);
    return this;
  }

  /**
   * Get min
   * @return min
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Object getMin() {
        return min.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MIN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMin_JsonNullable() {
    return min;
  }
  
  @JsonProperty(JSON_PROPERTY_MIN)
  public void setMin_JsonNullable(JsonNullable<Object> min) {
    this.min = min;
  }

  public void setMin(Object min) {
    this.min = JsonNullable.<Object>of(min);
  }


  public ExternalFormFieldModel max(Object max) {
    this.max = JsonNullable.<Object>of(max);
    return this;
  }

  /**
   * Get max
   * @return max
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Object getMax() {
        return max.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MAX)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getMax_JsonNullable() {
    return max;
  }
  
  @JsonProperty(JSON_PROPERTY_MAX)
  public void setMax_JsonNullable(JsonNullable<Object> max) {
    this.max = max;
  }

  public void setMax(Object max) {
    this.max = JsonNullable.<Object>of(max);
  }


  /**
   * Return true if this ExternalFormFieldModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalFormFieldModel externalFormFieldModel = (ExternalFormFieldModel) o;
    return Objects.equals(this.isCustomValueAllowed, externalFormFieldModel.isCustomValueAllowed) &&
        equalsNullable(this.fieldId, externalFormFieldModel.fieldId) &&
        equalsNullable(this.fieldName, externalFormFieldModel.fieldName) &&
        equalsNullable(this.helpText, externalFormFieldModel.helpText) &&
        equalsNullable(this.type, externalFormFieldModel.type) &&
        equalsNullable(this.arrayValuesType, externalFormFieldModel.arrayValuesType) &&
        equalsNullable(this.defaultValue, externalFormFieldModel.defaultValue) &&
        equalsNullable(this.autoCompleteUrl, externalFormFieldModel.autoCompleteUrl) &&
        equalsNullable(this.controlType, externalFormFieldModel.controlType) &&
        equalsNullable(this.minLength, externalFormFieldModel.minLength) &&
        equalsNullable(this.maxLength, externalFormFieldModel.maxLength) &&
        equalsNullable(this.isRequired, externalFormFieldModel.isRequired) &&
        equalsNullable(this.min, externalFormFieldModel.min) &&
        equalsNullable(this.max, externalFormFieldModel.max);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(isCustomValueAllowed, hashCodeNullable(fieldId), hashCodeNullable(fieldName), hashCodeNullable(helpText), hashCodeNullable(type), hashCodeNullable(arrayValuesType), hashCodeNullable(defaultValue), hashCodeNullable(autoCompleteUrl), hashCodeNullable(controlType), hashCodeNullable(minLength), hashCodeNullable(maxLength), hashCodeNullable(isRequired), hashCodeNullable(min), hashCodeNullable(max));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalFormFieldModel {\n");
    sb.append("    isCustomValueAllowed: ").append(toIndentedString(isCustomValueAllowed)).append("\n");
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    helpText: ").append(toIndentedString(helpText)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    arrayValuesType: ").append(toIndentedString(arrayValuesType)).append("\n");
    sb.append("    defaultValue: ").append(toIndentedString(defaultValue)).append("\n");
    sb.append("    autoCompleteUrl: ").append(toIndentedString(autoCompleteUrl)).append("\n");
    sb.append("    controlType: ").append(toIndentedString(controlType)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    isRequired: ").append(toIndentedString(isRequired)).append("\n");
    sb.append("    min: ").append(toIndentedString(min)).append("\n");
    sb.append("    max: ").append(toIndentedString(max)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

