/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import ru.testit.client.model.ExternalServiceCategoryApiResult;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ExternalServiceMetadataApiResult
 */
@JsonPropertyOrder({
  ExternalServiceMetadataApiResult.JSON_PROPERTY_NAME,
  ExternalServiceMetadataApiResult.JSON_PROPERTY_CODE,
  ExternalServiceMetadataApiResult.JSON_PROPERTY_ICON_URL,
  ExternalServiceMetadataApiResult.JSON_PROPERTY_CATEGORY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class ExternalServiceMetadataApiResult {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CODE = "code";
  private String code;

  public static final String JSON_PROPERTY_ICON_URL = "iconUrl";
  private String iconUrl;

  public static final String JSON_PROPERTY_CATEGORY = "category";
  private ExternalServiceCategoryApiResult category;

  public ExternalServiceMetadataApiResult() { 
  }

  public ExternalServiceMetadataApiResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the external service
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ExternalServiceMetadataApiResult code(String code) {
    this.code = code;
    return this;
  }

  /**
   * The code of the external service
   * @return code
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCode() {
    return code;
  }


  @JsonProperty(JSON_PROPERTY_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCode(String code) {
    this.code = code;
  }


  public ExternalServiceMetadataApiResult iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

  /**
   * The icon URL of the external service
   * @return iconUrl
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getIconUrl() {
    return iconUrl;
  }


  @JsonProperty(JSON_PROPERTY_ICON_URL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }


  public ExternalServiceMetadataApiResult category(ExternalServiceCategoryApiResult category) {
    this.category = category;
    return this;
  }

  /**
   * The category of the external service
   * @return category
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ExternalServiceCategoryApiResult getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategory(ExternalServiceCategoryApiResult category) {
    this.category = category;
  }


  /**
   * Return true if this ExternalServiceMetadataApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ExternalServiceMetadataApiResult externalServiceMetadataApiResult = (ExternalServiceMetadataApiResult) o;
    return Objects.equals(this.name, externalServiceMetadataApiResult.name) &&
        Objects.equals(this.code, externalServiceMetadataApiResult.code) &&
        Objects.equals(this.iconUrl, externalServiceMetadataApiResult.iconUrl) &&
        Objects.equals(this.category, externalServiceMetadataApiResult.category);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, code, iconUrl, category);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ExternalServiceMetadataApiResult {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

