/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * FlakyBulkDto
 */
@JsonPropertyOrder({
  FlakyBulkDto.JSON_PROPERTY_VALUE,
  FlakyBulkDto.JSON_PROPERTY_AUTOTEST_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class FlakyBulkDto {
  public static final String JSON_PROPERTY_VALUE = "value";
  private Boolean value;

  public static final String JSON_PROPERTY_AUTOTEST_IDS = "autotestIds";
  private Set<UUID> autotestIds = new LinkedHashSet<>();

  public FlakyBulkDto() { 
  }

  public FlakyBulkDto value(Boolean value) {
    this.value = value;
    return this;
  }

   /**
   * Are autotests flaky
   * @return value
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Are autotests flaky")
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValue(Boolean value) {
    this.value = value;
  }


  public FlakyBulkDto autotestIds(Set<UUID> autotestIds) {
    this.autotestIds = autotestIds;
    return this;
  }

  public FlakyBulkDto addAutotestIdsItem(UUID autotestIdsItem) {
    this.autotestIds.add(autotestIdsItem);
    return this;
  }

   /**
   * Collection of identifiers of autotests which will be marked as stable/flaky
   * @return autotestIds
  **/
  @jakarta.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Collection of identifiers of autotests which will be marked as stable/flaky")
  @JsonProperty(JSON_PROPERTY_AUTOTEST_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Set<UUID> getAutotestIds() {
    return autotestIds;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_AUTOTEST_IDS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAutotestIds(Set<UUID> autotestIds) {
    this.autotestIds = autotestIds;
  }


  /**
   * Return true if this FlakyBulkDto object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FlakyBulkDto flakyBulkDto = (FlakyBulkDto) o;
    return Objects.equals(this.value, flakyBulkDto.value) &&
        Objects.equals(this.autotestIds, flakyBulkDto.autotestIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(value, autotestIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FlakyBulkDto {\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    autotestIds: ").append(toIndentedString(autotestIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

