/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.Inquiry;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * GetShortProjectsApiModel
 */
@JsonPropertyOrder({
  GetShortProjectsApiModel.JSON_PROPERTY_INQUIRY,
  GetShortProjectsApiModel.JSON_PROPERTY_PERMISSION_NAME,
  GetShortProjectsApiModel.JSON_PROPERTY_PERMISSION_TYPE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class GetShortProjectsApiModel {
  public static final String JSON_PROPERTY_INQUIRY = "inquiry";
  private JsonNullable<Inquiry> inquiry = JsonNullable.<Inquiry>undefined();

  public static final String JSON_PROPERTY_PERMISSION_NAME = "permissionName";
  private JsonNullable<String> permissionName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PERMISSION_TYPE = "permissionType";
  private JsonNullable<String> permissionType = JsonNullable.<String>undefined();

  public GetShortProjectsApiModel() { 
  }

  public GetShortProjectsApiModel inquiry(Inquiry inquiry) {
    this.inquiry = JsonNullable.<Inquiry>of(inquiry);
    return this;
  }

  /**
   * Get inquiry
   * @return inquiry
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Inquiry getInquiry() {
        return inquiry.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INQUIRY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Inquiry> getInquiry_JsonNullable() {
    return inquiry;
  }
  
  @JsonProperty(JSON_PROPERTY_INQUIRY)
  public void setInquiry_JsonNullable(JsonNullable<Inquiry> inquiry) {
    this.inquiry = inquiry;
  }

  public void setInquiry(Inquiry inquiry) {
    this.inquiry = JsonNullable.<Inquiry>of(inquiry);
  }


  public GetShortProjectsApiModel permissionName(String permissionName) {
    this.permissionName = JsonNullable.<String>of(permissionName);
    return this;
  }

  /**
   * Get permissionName
   * @return permissionName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getPermissionName() {
        return permissionName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERMISSION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPermissionName_JsonNullable() {
    return permissionName;
  }
  
  @JsonProperty(JSON_PROPERTY_PERMISSION_NAME)
  public void setPermissionName_JsonNullable(JsonNullable<String> permissionName) {
    this.permissionName = permissionName;
  }

  public void setPermissionName(String permissionName) {
    this.permissionName = JsonNullable.<String>of(permissionName);
  }


  public GetShortProjectsApiModel permissionType(String permissionType) {
    this.permissionType = JsonNullable.<String>of(permissionType);
    return this;
  }

  /**
   * Get permissionType
   * @return permissionType
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getPermissionType() {
        return permissionType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PERMISSION_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getPermissionType_JsonNullable() {
    return permissionType;
  }
  
  @JsonProperty(JSON_PROPERTY_PERMISSION_TYPE)
  public void setPermissionType_JsonNullable(JsonNullable<String> permissionType) {
    this.permissionType = permissionType;
  }

  public void setPermissionType(String permissionType) {
    this.permissionType = JsonNullable.<String>of(permissionType);
  }


  /**
   * Return true if this GetShortProjectsApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetShortProjectsApiModel getShortProjectsApiModel = (GetShortProjectsApiModel) o;
    return equalsNullable(this.inquiry, getShortProjectsApiModel.inquiry) &&
        equalsNullable(this.permissionName, getShortProjectsApiModel.permissionName) &&
        equalsNullable(this.permissionType, getShortProjectsApiModel.permissionType);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(inquiry), hashCodeNullable(permissionName), hashCodeNullable(permissionType));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetShortProjectsApiModel {\n");
    sb.append("    inquiry: ").append(toIndentedString(inquiry)).append("\n");
    sb.append("    permissionName: ").append(toIndentedString(permissionName)).append("\n");
    sb.append("    permissionType: ").append(toIndentedString(permissionType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

