/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * GlobalSearchItemResult
 */
@JsonPropertyOrder({
  GlobalSearchItemResult.JSON_PROPERTY_RESOURCE_TYPE,
  GlobalSearchItemResult.JSON_PROPERTY_RESOURCE_ID,
  GlobalSearchItemResult.JSON_PROPERTY_GLOBAL_ID,
  GlobalSearchItemResult.JSON_PROPERTY_NAME,
  GlobalSearchItemResult.JSON_PROPERTY_PROJECT_GLOBAL_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GlobalSearchItemResult {
  public static final String JSON_PROPERTY_RESOURCE_TYPE = "resourceType";
  private String resourceType;

  public static final String JSON_PROPERTY_RESOURCE_ID = "resourceId";
  private UUID resourceId;

  public static final String JSON_PROPERTY_GLOBAL_ID = "globalId";
  private JsonNullable<Long> globalId = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_PROJECT_GLOBAL_ID = "projectGlobalId";
  private Long projectGlobalId;

  public GlobalSearchItemResult() { 
  }

  public GlobalSearchItemResult resourceType(String resourceType) {
    this.resourceType = resourceType;
    return this;
  }

   /**
   * Get resourceType
   * @return resourceType
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getResourceType() {
    return resourceType;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceType(String resourceType) {
    this.resourceType = resourceType;
  }


  public GlobalSearchItemResult resourceId(UUID resourceId) {
    this.resourceId = resourceId;
    return this;
  }

   /**
   * Get resourceId
   * @return resourceId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getResourceId() {
    return resourceId;
  }


  @JsonProperty(JSON_PROPERTY_RESOURCE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setResourceId(UUID resourceId) {
    this.resourceId = resourceId;
  }


  public GlobalSearchItemResult globalId(Long globalId) {
    this.globalId = JsonNullable.<Long>of(globalId);
    return this;
  }

   /**
   * Get globalId
   * @return globalId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getGlobalId() {
        return globalId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getGlobalId_JsonNullable() {
    return globalId;
  }
  
  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  public void setGlobalId_JsonNullable(JsonNullable<Long> globalId) {
    this.globalId = globalId;
  }

  public void setGlobalId(Long globalId) {
    this.globalId = JsonNullable.<Long>of(globalId);
  }


  public GlobalSearchItemResult name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public GlobalSearchItemResult projectGlobalId(Long projectGlobalId) {
    this.projectGlobalId = projectGlobalId;
    return this;
  }

   /**
   * Get projectGlobalId
   * @return projectGlobalId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getProjectGlobalId() {
    return projectGlobalId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectGlobalId(Long projectGlobalId) {
    this.projectGlobalId = projectGlobalId;
  }


  /**
   * Return true if this GlobalSearchItemResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalSearchItemResult globalSearchItemResult = (GlobalSearchItemResult) o;
    return Objects.equals(this.resourceType, globalSearchItemResult.resourceType) &&
        Objects.equals(this.resourceId, globalSearchItemResult.resourceId) &&
        equalsNullable(this.globalId, globalSearchItemResult.globalId) &&
        Objects.equals(this.name, globalSearchItemResult.name) &&
        Objects.equals(this.projectGlobalId, globalSearchItemResult.projectGlobalId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(resourceType, resourceId, hashCodeNullable(globalId), name, projectGlobalId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalSearchItemResult {\n");
    sb.append("    resourceType: ").append(toIndentedString(resourceType)).append("\n");
    sb.append("    resourceId: ").append(toIndentedString(resourceId)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    projectGlobalId: ").append(toIndentedString(projectGlobalId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

