/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * MoveRequest
 */
@JsonPropertyOrder({
  MoveRequest.JSON_PROPERTY_ID,
  MoveRequest.JSON_PROPERTY_OLD_PARENT_ID,
  MoveRequest.JSON_PROPERTY_PARENT_ID,
  MoveRequest.JSON_PROPERTY_NEXT_SECTION_ID
})
@JsonTypeName("Move_request")
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MoveRequest {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_OLD_PARENT_ID = "oldParentId";
  private UUID oldParentId;

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private UUID parentId;

  public static final String JSON_PROPERTY_NEXT_SECTION_ID = "nextSectionId";
  private JsonNullable<UUID> nextSectionId = JsonNullable.<UUID>undefined();

  public MoveRequest() { 
  }

  public MoveRequest id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID of the section
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public MoveRequest oldParentId(UUID oldParentId) {
    this.oldParentId = oldParentId;
    return this;
  }

   /**
   * Unique ID of the section&#39;s current parent section
   * @return oldParentId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OLD_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getOldParentId() {
    return oldParentId;
  }


  @JsonProperty(JSON_PROPERTY_OLD_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOldParentId(UUID oldParentId) {
    this.oldParentId = oldParentId;
  }


  public MoveRequest parentId(UUID parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Unique ID of the section&#39;s target parent section
   * @return parentId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getParentId() {
    return parentId;
  }


  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setParentId(UUID parentId) {
    this.parentId = parentId;
  }


  public MoveRequest nextSectionId(UUID nextSectionId) {
    this.nextSectionId = JsonNullable.<UUID>of(nextSectionId);
    return this;
  }

   /**
   * Unique ID of the section&#39;s following section
   * @return nextSectionId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getNextSectionId() {
        return nextSectionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NEXT_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getNextSectionId_JsonNullable() {
    return nextSectionId;
  }
  
  @JsonProperty(JSON_PROPERTY_NEXT_SECTION_ID)
  public void setNextSectionId_JsonNullable(JsonNullable<UUID> nextSectionId) {
    this.nextSectionId = nextSectionId;
  }

  public void setNextSectionId(UUID nextSectionId) {
    this.nextSectionId = JsonNullable.<UUID>of(nextSectionId);
  }


  /**
   * Return true if this Move_request object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MoveRequest moveRequest = (MoveRequest) o;
    return Objects.equals(this.id, moveRequest.id) &&
        Objects.equals(this.oldParentId, moveRequest.oldParentId) &&
        Objects.equals(this.parentId, moveRequest.parentId) &&
        equalsNullable(this.nextSectionId, moveRequest.nextSectionId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, oldParentId, parentId, hashCodeNullable(nextSectionId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MoveRequest {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    oldParentId: ").append(toIndentedString(oldParentId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    nextSectionId: ").append(toIndentedString(nextSectionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

