/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import ru.testit.client.model.ProjectFailureCategoryGroupItemApiResult;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ProjectFailureCategoryGroupItemApiResultReply
 */
@JsonPropertyOrder({
  ProjectFailureCategoryGroupItemApiResultReply.JSON_PROPERTY_DATA,
  ProjectFailureCategoryGroupItemApiResultReply.JSON_PROPERTY_TOTAL_COUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class ProjectFailureCategoryGroupItemApiResultReply {
  public static final String JSON_PROPERTY_DATA = "data";
  private List<ProjectFailureCategoryGroupItemApiResult> data = new ArrayList<>();

  public static final String JSON_PROPERTY_TOTAL_COUNT = "totalCount";
  private Integer totalCount;

  public ProjectFailureCategoryGroupItemApiResultReply() { 
  }

  public ProjectFailureCategoryGroupItemApiResultReply data(List<ProjectFailureCategoryGroupItemApiResult> data) {
    this.data = data;
    return this;
  }

  public ProjectFailureCategoryGroupItemApiResultReply addDataItem(ProjectFailureCategoryGroupItemApiResult dataItem) {
    if (this.data == null) {
      this.data = new ArrayList<>();
    }
    this.data.add(dataItem);
    return this;
  }

  /**
   * Get data
   * @return data
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<ProjectFailureCategoryGroupItemApiResult> getData() {
    return data;
  }


  @JsonProperty(JSON_PROPERTY_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setData(List<ProjectFailureCategoryGroupItemApiResult> data) {
    this.data = data;
  }


  public ProjectFailureCategoryGroupItemApiResultReply totalCount(Integer totalCount) {
    this.totalCount = totalCount;
    return this;
  }

  /**
   * Get totalCount
   * @return totalCount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getTotalCount() {
    return totalCount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalCount(Integer totalCount) {
    this.totalCount = totalCount;
  }


  /**
   * Return true if this ProjectFailureCategoryGroupItemApiResultReply object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectFailureCategoryGroupItemApiResultReply projectFailureCategoryGroupItemApiResultReply = (ProjectFailureCategoryGroupItemApiResultReply) o;
    return Objects.equals(this.data, projectFailureCategoryGroupItemApiResultReply.data) &&
        Objects.equals(this.totalCount, projectFailureCategoryGroupItemApiResultReply.totalCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, totalCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectFailureCategoryGroupItemApiResultReply {\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    totalCount: ").append(toIndentedString(totalCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

