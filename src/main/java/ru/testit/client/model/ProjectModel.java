/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.CustomAttributeModel;
import ru.testit.client.model.ProjectTypeModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ProjectModel
 */
@JsonPropertyOrder({
  ProjectModel.JSON_PROPERTY_ID,
  ProjectModel.JSON_PROPERTY_NAME,
  ProjectModel.JSON_PROPERTY_IS_FAVORITE,
  ProjectModel.JSON_PROPERTY_IS_DELETED,
  ProjectModel.JSON_PROPERTY_CREATED_DATE,
  ProjectModel.JSON_PROPERTY_CREATED_BY_ID,
  ProjectModel.JSON_PROPERTY_GLOBAL_ID,
  ProjectModel.JSON_PROPERTY_TYPE,
  ProjectModel.JSON_PROPERTY_IS_FLAKY_AUTO,
  ProjectModel.JSON_PROPERTY_WORKFLOW_ID,
  ProjectModel.JSON_PROPERTY_DESCRIPTION,
  ProjectModel.JSON_PROPERTY_ATTRIBUTES_SCHEME,
  ProjectModel.JSON_PROPERTY_TEST_PLANS_ATTRIBUTES_SCHEME,
  ProjectModel.JSON_PROPERTY_TEST_CASES_COUNT,
  ProjectModel.JSON_PROPERTY_SHARED_STEPS_COUNT,
  ProjectModel.JSON_PROPERTY_CHECK_LISTS_COUNT,
  ProjectModel.JSON_PROPERTY_AUTO_TESTS_COUNT,
  ProjectModel.JSON_PROPERTY_MODIFIED_DATE,
  ProjectModel.JSON_PROPERTY_MODIFIED_BY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class ProjectModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_IS_FAVORITE = "isFavorite";
  private Boolean isFavorite;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_GLOBAL_ID = "globalId";
  private Long globalId;

  public static final String JSON_PROPERTY_TYPE = "type";
  private ProjectTypeModel type;

  public static final String JSON_PROPERTY_IS_FLAKY_AUTO = "isFlakyAuto";
  @Deprecated
  private Boolean isFlakyAuto;

  public static final String JSON_PROPERTY_WORKFLOW_ID = "workflowId";
  private UUID workflowId;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ATTRIBUTES_SCHEME = "attributesScheme";
  private JsonNullable<List<CustomAttributeModel>> attributesScheme = JsonNullable.<List<CustomAttributeModel>>undefined();

  public static final String JSON_PROPERTY_TEST_PLANS_ATTRIBUTES_SCHEME = "testPlansAttributesScheme";
  private JsonNullable<List<CustomAttributeModel>> testPlansAttributesScheme = JsonNullable.<List<CustomAttributeModel>>undefined();

  public static final String JSON_PROPERTY_TEST_CASES_COUNT = "testCasesCount";
  private JsonNullable<Integer> testCasesCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_SHARED_STEPS_COUNT = "sharedStepsCount";
  private JsonNullable<Integer> sharedStepsCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_CHECK_LISTS_COUNT = "checkListsCount";
  private JsonNullable<Integer> checkListsCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_AUTO_TESTS_COUNT = "autoTestsCount";
  private JsonNullable<Integer> autoTestsCount = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public ProjectModel() { 
  }

  public ProjectModel id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID of the project
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public ProjectModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the project
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public ProjectModel isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

  /**
   * Indicates if the project is marked as favorite
   * @return isFavorite
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsFavorite() {
    return isFavorite;
  }


  @JsonProperty(JSON_PROPERTY_IS_FAVORITE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }


  public ProjectModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Indicates if the project is deleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public ProjectModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Creation date of the project
   * @return createdDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public ProjectModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Unique ID of the project creator
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public ProjectModel globalId(Long globalId) {
    this.globalId = globalId;
    return this;
  }

  /**
   * Global ID of the project
   * @return globalId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getGlobalId() {
    return globalId;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }


  public ProjectModel type(ProjectTypeModel type) {
    this.type = type;
    return this;
  }

  /**
   * Type of the project
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public ProjectTypeModel getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(ProjectTypeModel type) {
    this.type = type;
  }


  @Deprecated
  public ProjectModel isFlakyAuto(Boolean isFlakyAuto) {
    this.isFlakyAuto = isFlakyAuto;
    return this;
  }

  /**
   * Indicates if the status \&quot;Flaky/Stable\&quot; sets automatically
   * @return isFlakyAuto
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_FLAKY_AUTO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsFlakyAuto() {
    return isFlakyAuto;
  }


  @Deprecated
  @JsonProperty(JSON_PROPERTY_IS_FLAKY_AUTO)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsFlakyAuto(Boolean isFlakyAuto) {
    this.isFlakyAuto = isFlakyAuto;
  }


  public ProjectModel workflowId(UUID workflowId) {
    this.workflowId = workflowId;
    return this;
  }

  /**
   * Get workflowId
   * @return workflowId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORKFLOW_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkflowId() {
    return workflowId;
  }


  @JsonProperty(JSON_PROPERTY_WORKFLOW_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkflowId(UUID workflowId) {
    this.workflowId = workflowId;
  }


  public ProjectModel description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Description of the project
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public ProjectModel attributesScheme(List<CustomAttributeModel> attributesScheme) {
    this.attributesScheme = JsonNullable.<List<CustomAttributeModel>>of(attributesScheme);
    return this;
  }

  public ProjectModel addAttributesSchemeItem(CustomAttributeModel attributesSchemeItem) {
    if (this.attributesScheme == null || !this.attributesScheme.isPresent()) {
      this.attributesScheme = JsonNullable.<List<CustomAttributeModel>>of(new ArrayList<>());
    }
    try {
      this.attributesScheme.get().add(attributesSchemeItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of the project attributes
   * @return attributesScheme
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<CustomAttributeModel> getAttributesScheme() {
        return attributesScheme.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<CustomAttributeModel>> getAttributesScheme_JsonNullable() {
    return attributesScheme;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES_SCHEME)
  public void setAttributesScheme_JsonNullable(JsonNullable<List<CustomAttributeModel>> attributesScheme) {
    this.attributesScheme = attributesScheme;
  }

  public void setAttributesScheme(List<CustomAttributeModel> attributesScheme) {
    this.attributesScheme = JsonNullable.<List<CustomAttributeModel>>of(attributesScheme);
  }


  public ProjectModel testPlansAttributesScheme(List<CustomAttributeModel> testPlansAttributesScheme) {
    this.testPlansAttributesScheme = JsonNullable.<List<CustomAttributeModel>>of(testPlansAttributesScheme);
    return this;
  }

  public ProjectModel addTestPlansAttributesSchemeItem(CustomAttributeModel testPlansAttributesSchemeItem) {
    if (this.testPlansAttributesScheme == null || !this.testPlansAttributesScheme.isPresent()) {
      this.testPlansAttributesScheme = JsonNullable.<List<CustomAttributeModel>>of(new ArrayList<>());
    }
    try {
      this.testPlansAttributesScheme.get().add(testPlansAttributesSchemeItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of the project test plans attributes
   * @return testPlansAttributesScheme
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<CustomAttributeModel> getTestPlansAttributesScheme() {
        return testPlansAttributesScheme.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLANS_ATTRIBUTES_SCHEME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<CustomAttributeModel>> getTestPlansAttributesScheme_JsonNullable() {
    return testPlansAttributesScheme;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLANS_ATTRIBUTES_SCHEME)
  public void setTestPlansAttributesScheme_JsonNullable(JsonNullable<List<CustomAttributeModel>> testPlansAttributesScheme) {
    this.testPlansAttributesScheme = testPlansAttributesScheme;
  }

  public void setTestPlansAttributesScheme(List<CustomAttributeModel> testPlansAttributesScheme) {
    this.testPlansAttributesScheme = JsonNullable.<List<CustomAttributeModel>>of(testPlansAttributesScheme);
  }


  public ProjectModel testCasesCount(Integer testCasesCount) {
    this.testCasesCount = JsonNullable.<Integer>of(testCasesCount);
    return this;
  }

  /**
   * Number of test cases in the project
   * @return testCasesCount
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getTestCasesCount() {
        return testCasesCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_CASES_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getTestCasesCount_JsonNullable() {
    return testCasesCount;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_CASES_COUNT)
  public void setTestCasesCount_JsonNullable(JsonNullable<Integer> testCasesCount) {
    this.testCasesCount = testCasesCount;
  }

  public void setTestCasesCount(Integer testCasesCount) {
    this.testCasesCount = JsonNullable.<Integer>of(testCasesCount);
  }


  public ProjectModel sharedStepsCount(Integer sharedStepsCount) {
    this.sharedStepsCount = JsonNullable.<Integer>of(sharedStepsCount);
    return this;
  }

  /**
   * Number of shared steps in the project
   * @return sharedStepsCount
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getSharedStepsCount() {
        return sharedStepsCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SHARED_STEPS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getSharedStepsCount_JsonNullable() {
    return sharedStepsCount;
  }
  
  @JsonProperty(JSON_PROPERTY_SHARED_STEPS_COUNT)
  public void setSharedStepsCount_JsonNullable(JsonNullable<Integer> sharedStepsCount) {
    this.sharedStepsCount = sharedStepsCount;
  }

  public void setSharedStepsCount(Integer sharedStepsCount) {
    this.sharedStepsCount = JsonNullable.<Integer>of(sharedStepsCount);
  }


  public ProjectModel checkListsCount(Integer checkListsCount) {
    this.checkListsCount = JsonNullable.<Integer>of(checkListsCount);
    return this;
  }

  /**
   * Number of checklists in the project
   * @return checkListsCount
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getCheckListsCount() {
        return checkListsCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CHECK_LISTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getCheckListsCount_JsonNullable() {
    return checkListsCount;
  }
  
  @JsonProperty(JSON_PROPERTY_CHECK_LISTS_COUNT)
  public void setCheckListsCount_JsonNullable(JsonNullable<Integer> checkListsCount) {
    this.checkListsCount = checkListsCount;
  }

  public void setCheckListsCount(Integer checkListsCount) {
    this.checkListsCount = JsonNullable.<Integer>of(checkListsCount);
  }


  public ProjectModel autoTestsCount(Integer autoTestsCount) {
    this.autoTestsCount = JsonNullable.<Integer>of(autoTestsCount);
    return this;
  }

  /**
   * Number of autotests in the project
   * @return autoTestsCount
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getAutoTestsCount() {
        return autoTestsCount.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TESTS_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getAutoTestsCount_JsonNullable() {
    return autoTestsCount;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TESTS_COUNT)
  public void setAutoTestsCount_JsonNullable(JsonNullable<Integer> autoTestsCount) {
    this.autoTestsCount = autoTestsCount;
  }

  public void setAutoTestsCount(Integer autoTestsCount) {
    this.autoTestsCount = JsonNullable.<Integer>of(autoTestsCount);
  }


  public ProjectModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Last modification date of the project
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public ProjectModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Unique ID of the project last editor
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  /**
   * Return true if this ProjectModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectModel projectModel = (ProjectModel) o;
    return Objects.equals(this.id, projectModel.id) &&
        Objects.equals(this.name, projectModel.name) &&
        Objects.equals(this.isFavorite, projectModel.isFavorite) &&
        Objects.equals(this.isDeleted, projectModel.isDeleted) &&
        Objects.equals(this.createdDate, projectModel.createdDate) &&
        Objects.equals(this.createdById, projectModel.createdById) &&
        Objects.equals(this.globalId, projectModel.globalId) &&
        Objects.equals(this.type, projectModel.type) &&
        Objects.equals(this.isFlakyAuto, projectModel.isFlakyAuto) &&
        Objects.equals(this.workflowId, projectModel.workflowId) &&
        equalsNullable(this.description, projectModel.description) &&
        equalsNullable(this.attributesScheme, projectModel.attributesScheme) &&
        equalsNullable(this.testPlansAttributesScheme, projectModel.testPlansAttributesScheme) &&
        equalsNullable(this.testCasesCount, projectModel.testCasesCount) &&
        equalsNullable(this.sharedStepsCount, projectModel.sharedStepsCount) &&
        equalsNullable(this.checkListsCount, projectModel.checkListsCount) &&
        equalsNullable(this.autoTestsCount, projectModel.autoTestsCount) &&
        equalsNullable(this.modifiedDate, projectModel.modifiedDate) &&
        equalsNullable(this.modifiedById, projectModel.modifiedById);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, isFavorite, isDeleted, createdDate, createdById, globalId, type, isFlakyAuto, workflowId, hashCodeNullable(description), hashCodeNullable(attributesScheme), hashCodeNullable(testPlansAttributesScheme), hashCodeNullable(testCasesCount), hashCodeNullable(sharedStepsCount), hashCodeNullable(checkListsCount), hashCodeNullable(autoTestsCount), hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isFlakyAuto: ").append(toIndentedString(isFlakyAuto)).append("\n");
    sb.append("    workflowId: ").append(toIndentedString(workflowId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    attributesScheme: ").append(toIndentedString(attributesScheme)).append("\n");
    sb.append("    testPlansAttributesScheme: ").append(toIndentedString(testPlansAttributesScheme)).append("\n");
    sb.append("    testCasesCount: ").append(toIndentedString(testCasesCount)).append("\n");
    sb.append("    sharedStepsCount: ").append(toIndentedString(sharedStepsCount)).append("\n");
    sb.append("    checkListsCount: ").append(toIndentedString(checkListsCount)).append("\n");
    sb.append("    autoTestsCount: ").append(toIndentedString(autoTestsCount)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

