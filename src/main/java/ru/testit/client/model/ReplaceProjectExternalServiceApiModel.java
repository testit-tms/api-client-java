/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ReplaceProjectExternalServiceApiModel
 */
@JsonPropertyOrder({
  ReplaceProjectExternalServiceApiModel.JSON_PROPERTY_NEW_EXTERNAL_SERVICE_ID,
  ReplaceProjectExternalServiceApiModel.JSON_PROPERTY_SETTINGS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class ReplaceProjectExternalServiceApiModel {
  public static final String JSON_PROPERTY_NEW_EXTERNAL_SERVICE_ID = "newExternalServiceId";
  private UUID newExternalServiceId;

  public static final String JSON_PROPERTY_SETTINGS = "settings";
  private JsonNullable<Object> settings = JsonNullable.<Object>of(null);

  public ReplaceProjectExternalServiceApiModel() { 
  }

  public ReplaceProjectExternalServiceApiModel newExternalServiceId(UUID newExternalServiceId) {
    this.newExternalServiceId = newExternalServiceId;
    return this;
  }

  /**
   * The unique ID of the new external service that will replace the current one
   * @return newExternalServiceId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEW_EXTERNAL_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getNewExternalServiceId() {
    return newExternalServiceId;
  }


  @JsonProperty(JSON_PROPERTY_NEW_EXTERNAL_SERVICE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewExternalServiceId(UUID newExternalServiceId) {
    this.newExternalServiceId = newExternalServiceId;
  }


  public ReplaceProjectExternalServiceApiModel settings(Object settings) {
    this.settings = JsonNullable.<Object>of(settings);
    return this;
  }

  /**
   * External service settings
   * @return settings
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Object getSettings() {
        return settings.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETTINGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getSettings_JsonNullable() {
    return settings;
  }
  
  @JsonProperty(JSON_PROPERTY_SETTINGS)
  public void setSettings_JsonNullable(JsonNullable<Object> settings) {
    this.settings = settings;
  }

  public void setSettings(Object settings) {
    this.settings = JsonNullable.<Object>of(settings);
  }


  /**
   * Return true if this ReplaceProjectExternalServiceApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ReplaceProjectExternalServiceApiModel replaceProjectExternalServiceApiModel = (ReplaceProjectExternalServiceApiModel) o;
    return Objects.equals(this.newExternalServiceId, replaceProjectExternalServiceApiModel.newExternalServiceId) &&
        equalsNullable(this.settings, replaceProjectExternalServiceApiModel.settings);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(newExternalServiceId, hashCodeNullable(settings));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ReplaceProjectExternalServiceApiModel {\n");
    sb.append("    newExternalServiceId: ").append(toIndentedString(newExternalServiceId)).append("\n");
    sb.append("    settings: ").append(toIndentedString(settings)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

