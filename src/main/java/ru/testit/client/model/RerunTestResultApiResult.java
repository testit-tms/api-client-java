/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import ru.testit.client.model.TestStatusApiResult;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * RerunTestResultApiResult
 */
@JsonPropertyOrder({
  RerunTestResultApiResult.JSON_PROPERTY_ID,
  RerunTestResultApiResult.JSON_PROPERTY_OUTCOME,
  RerunTestResultApiResult.JSON_PROPERTY_STATUS,
  RerunTestResultApiResult.JSON_PROPERTY_RUN_NUMBER
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class RerunTestResultApiResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_OUTCOME = "outcome";
  private String outcome;

  public static final String JSON_PROPERTY_STATUS = "status";
  private TestStatusApiResult status;

  public static final String JSON_PROPERTY_RUN_NUMBER = "runNumber";
  private Integer runNumber;

  public RerunTestResultApiResult() { 
  }

  public RerunTestResultApiResult id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public RerunTestResultApiResult outcome(String outcome) {
    this.outcome = outcome;
    return this;
  }

  /**
   * Get outcome
   * @return outcome
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOutcome() {
    return outcome;
  }


  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutcome(String outcome) {
    this.outcome = outcome;
  }


  public RerunTestResultApiResult status(TestStatusApiResult status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestStatusApiResult getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(TestStatusApiResult status) {
    this.status = status;
  }


  public RerunTestResultApiResult runNumber(Integer runNumber) {
    this.runNumber = runNumber;
    return this;
  }

  /**
   * Get runNumber
   * @return runNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RUN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRunNumber() {
    return runNumber;
  }


  @JsonProperty(JSON_PROPERTY_RUN_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunNumber(Integer runNumber) {
    this.runNumber = runNumber;
  }


  /**
   * Return true if this RerunTestResultApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RerunTestResultApiResult rerunTestResultApiResult = (RerunTestResultApiResult) o;
    return Objects.equals(this.id, rerunTestResultApiResult.id) &&
        Objects.equals(this.outcome, rerunTestResultApiResult.outcome) &&
        Objects.equals(this.status, rerunTestResultApiResult.status) &&
        Objects.equals(this.runNumber, rerunTestResultApiResult.runNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, outcome, status, runNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RerunTestResultApiResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    runNumber: ").append(toIndentedString(runNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

