/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.StepModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * SectionWithStepsModel
 */
@JsonPropertyOrder({
  SectionWithStepsModel.JSON_PROPERTY_PRECONDITION_STEPS,
  SectionWithStepsModel.JSON_PROPERTY_POSTCONDITION_STEPS,
  SectionWithStepsModel.JSON_PROPERTY_PROJECT_ID,
  SectionWithStepsModel.JSON_PROPERTY_PARENT_ID,
  SectionWithStepsModel.JSON_PROPERTY_IS_DELETED,
  SectionWithStepsModel.JSON_PROPERTY_ID,
  SectionWithStepsModel.JSON_PROPERTY_CREATED_DATE,
  SectionWithStepsModel.JSON_PROPERTY_MODIFIED_DATE,
  SectionWithStepsModel.JSON_PROPERTY_CREATED_BY_ID,
  SectionWithStepsModel.JSON_PROPERTY_MODIFIED_BY_ID,
  SectionWithStepsModel.JSON_PROPERTY_NAME
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SectionWithStepsModel {
  public static final String JSON_PROPERTY_PRECONDITION_STEPS = "preconditionSteps";
  private JsonNullable<List<StepModel>> preconditionSteps = JsonNullable.<List<StepModel>>undefined();

  public static final String JSON_PROPERTY_POSTCONDITION_STEPS = "postconditionSteps";
  private JsonNullable<List<StepModel>> postconditionSteps = JsonNullable.<List<StepModel>>undefined();

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private JsonNullable<UUID> projectId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_PARENT_ID = "parentId";
  private JsonNullable<UUID> parentId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public SectionWithStepsModel() { 
  }

  public SectionWithStepsModel preconditionSteps(List<StepModel> preconditionSteps) {
    this.preconditionSteps = JsonNullable.<List<StepModel>>of(preconditionSteps);
    return this;
  }

  public SectionWithStepsModel addPreconditionStepsItem(StepModel preconditionStepsItem) {
    if (this.preconditionSteps == null || !this.preconditionSteps.isPresent()) {
      this.preconditionSteps = JsonNullable.<List<StepModel>>of(new ArrayList<>());
    }
    try {
      this.preconditionSteps.get().add(preconditionStepsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get preconditionSteps
   * @return preconditionSteps
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<StepModel> getPreconditionSteps() {
        return preconditionSteps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRECONDITION_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StepModel>> getPreconditionSteps_JsonNullable() {
    return preconditionSteps;
  }
  
  @JsonProperty(JSON_PROPERTY_PRECONDITION_STEPS)
  public void setPreconditionSteps_JsonNullable(JsonNullable<List<StepModel>> preconditionSteps) {
    this.preconditionSteps = preconditionSteps;
  }

  public void setPreconditionSteps(List<StepModel> preconditionSteps) {
    this.preconditionSteps = JsonNullable.<List<StepModel>>of(preconditionSteps);
  }


  public SectionWithStepsModel postconditionSteps(List<StepModel> postconditionSteps) {
    this.postconditionSteps = JsonNullable.<List<StepModel>>of(postconditionSteps);
    return this;
  }

  public SectionWithStepsModel addPostconditionStepsItem(StepModel postconditionStepsItem) {
    if (this.postconditionSteps == null || !this.postconditionSteps.isPresent()) {
      this.postconditionSteps = JsonNullable.<List<StepModel>>of(new ArrayList<>());
    }
    try {
      this.postconditionSteps.get().add(postconditionStepsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get postconditionSteps
   * @return postconditionSteps
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<StepModel> getPostconditionSteps() {
        return postconditionSteps.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_POSTCONDITION_STEPS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StepModel>> getPostconditionSteps_JsonNullable() {
    return postconditionSteps;
  }
  
  @JsonProperty(JSON_PROPERTY_POSTCONDITION_STEPS)
  public void setPostconditionSteps_JsonNullable(JsonNullable<List<StepModel>> postconditionSteps) {
    this.postconditionSteps = postconditionSteps;
  }

  public void setPostconditionSteps(List<StepModel> postconditionSteps) {
    this.postconditionSteps = JsonNullable.<List<StepModel>>of(postconditionSteps);
  }


  public SectionWithStepsModel projectId(UUID projectId) {
    this.projectId = JsonNullable.<UUID>of(projectId);
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getProjectId() {
        return projectId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getProjectId_JsonNullable() {
    return projectId;
  }
  
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  public void setProjectId_JsonNullable(JsonNullable<UUID> projectId) {
    this.projectId = projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = JsonNullable.<UUID>of(projectId);
  }


  public SectionWithStepsModel parentId(UUID parentId) {
    this.parentId = JsonNullable.<UUID>of(parentId);
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getParentId() {
        return parentId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getParentId_JsonNullable() {
    return parentId;
  }
  
  @JsonProperty(JSON_PROPERTY_PARENT_ID)
  public void setParentId_JsonNullable(JsonNullable<UUID> parentId) {
    this.parentId = parentId;
  }

  public void setParentId(UUID parentId) {
    this.parentId = JsonNullable.<UUID>of(parentId);
  }


  public SectionWithStepsModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public SectionWithStepsModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public SectionWithStepsModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public SectionWithStepsModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public SectionWithStepsModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public SectionWithStepsModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public SectionWithStepsModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  /**
   * Return true if this SectionWithStepsModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SectionWithStepsModel sectionWithStepsModel = (SectionWithStepsModel) o;
    return equalsNullable(this.preconditionSteps, sectionWithStepsModel.preconditionSteps) &&
        equalsNullable(this.postconditionSteps, sectionWithStepsModel.postconditionSteps) &&
        equalsNullable(this.projectId, sectionWithStepsModel.projectId) &&
        equalsNullable(this.parentId, sectionWithStepsModel.parentId) &&
        Objects.equals(this.isDeleted, sectionWithStepsModel.isDeleted) &&
        Objects.equals(this.id, sectionWithStepsModel.id) &&
        Objects.equals(this.createdDate, sectionWithStepsModel.createdDate) &&
        equalsNullable(this.modifiedDate, sectionWithStepsModel.modifiedDate) &&
        Objects.equals(this.createdById, sectionWithStepsModel.createdById) &&
        equalsNullable(this.modifiedById, sectionWithStepsModel.modifiedById) &&
        Objects.equals(this.name, sectionWithStepsModel.name);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(preconditionSteps), hashCodeNullable(postconditionSteps), hashCodeNullable(projectId), hashCodeNullable(parentId), isDeleted, id, createdDate, hashCodeNullable(modifiedDate), createdById, hashCodeNullable(modifiedById), name);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SectionWithStepsModel {\n");
    sb.append("    preconditionSteps: ").append(toIndentedString(preconditionSteps)).append("\n");
    sb.append("    postconditionSteps: ").append(toIndentedString(postconditionSteps)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

