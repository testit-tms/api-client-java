/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.invoker.JSON;

import java.io.IOException;
import java.util.*;
import java.util.Map.Entry;

/**
 * StepResultModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class StepResultModel {
  public static final String SERIALIZED_NAME_STEP_ID = "stepId";
  @SerializedName(SERIALIZED_NAME_STEP_ID)
  private UUID stepId;

  public static final String SERIALIZED_NAME_OUTCOME = "outcome";
  @SerializedName(SERIALIZED_NAME_OUTCOME)
  private String outcome;

  public static final String SERIALIZED_NAME_SHARED_STEP_VERSION_ID = "sharedStepVersionId";
  @SerializedName(SERIALIZED_NAME_SHARED_STEP_VERSION_ID)
  private UUID sharedStepVersionId;

  public static final String SERIALIZED_NAME_SHARED_STEP_RESULTS = "sharedStepResults";
  @SerializedName(SERIALIZED_NAME_SHARED_STEP_RESULTS)
  private List<SharedStepResultModel> sharedStepResults = null;

  public StepResultModel() {
  }

  public StepResultModel stepId(UUID stepId) {
    
    this.stepId = stepId;
    return this;
  }

   /**
   * Get stepId
   * @return stepId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getStepId() {
    return stepId;
  }


  public void setStepId(UUID stepId) {
    this.stepId = stepId;
  }


  public StepResultModel outcome(String outcome) {
    
    this.outcome = outcome;
    return this;
  }

   /**
   * Get outcome
   * @return outcome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOutcome() {
    return outcome;
  }


  public void setOutcome(String outcome) {
    this.outcome = outcome;
  }


  public StepResultModel sharedStepVersionId(UUID sharedStepVersionId) {
    
    this.sharedStepVersionId = sharedStepVersionId;
    return this;
  }

   /**
   * Get sharedStepVersionId
   * @return sharedStepVersionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getSharedStepVersionId() {
    return sharedStepVersionId;
  }


  public void setSharedStepVersionId(UUID sharedStepVersionId) {
    this.sharedStepVersionId = sharedStepVersionId;
  }


  public StepResultModel sharedStepResults(List<SharedStepResultModel> sharedStepResults) {
    
    this.sharedStepResults = sharedStepResults;
    return this;
  }

  public StepResultModel addSharedStepResultsItem(SharedStepResultModel sharedStepResultsItem) {
    if (this.sharedStepResults == null) {
      this.sharedStepResults = new ArrayList<>();
    }
    this.sharedStepResults.add(sharedStepResultsItem);
    return this;
  }

   /**
   * Get sharedStepResults
   * @return sharedStepResults
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<SharedStepResultModel> getSharedStepResults() {
    return sharedStepResults;
  }


  public void setSharedStepResults(List<SharedStepResultModel> sharedStepResults) {
    this.sharedStepResults = sharedStepResults;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StepResultModel stepResultModel = (StepResultModel) o;
    return Objects.equals(this.stepId, stepResultModel.stepId) &&
        Objects.equals(this.outcome, stepResultModel.outcome) &&
        Objects.equals(this.sharedStepVersionId, stepResultModel.sharedStepVersionId) &&
        Objects.equals(this.sharedStepResults, stepResultModel.sharedStepResults);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(stepId, outcome, sharedStepVersionId, sharedStepResults);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StepResultModel {\n");
    sb.append("    stepId: ").append(toIndentedString(stepId)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    sharedStepVersionId: ").append(toIndentedString(sharedStepVersionId)).append("\n");
    sb.append("    sharedStepResults: ").append(toIndentedString(sharedStepResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("stepId");
    openapiFields.add("outcome");
    openapiFields.add("sharedStepVersionId");
    openapiFields.add("sharedStepResults");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to StepResultModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!StepResultModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StepResultModel is not found in the empty JSON string", StepResultModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!StepResultModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StepResultModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("stepId") != null && !jsonObj.get("stepId").isJsonNull()) && !jsonObj.get("stepId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stepId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stepId").toString()));
      }
      if ((jsonObj.get("outcome") != null && !jsonObj.get("outcome").isJsonNull()) && !jsonObj.get("outcome").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `outcome` to be a primitive type in the JSON string but got `%s`", jsonObj.get("outcome").toString()));
      }
      if ((jsonObj.get("sharedStepVersionId") != null && !jsonObj.get("sharedStepVersionId").isJsonNull()) && !jsonObj.get("sharedStepVersionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sharedStepVersionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sharedStepVersionId").toString()));
      }
      if (jsonObj.get("sharedStepResults") != null && !jsonObj.get("sharedStepResults").isJsonNull()) {
        JsonArray jsonArraysharedStepResults = jsonObj.getAsJsonArray("sharedStepResults");
        if (jsonArraysharedStepResults != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sharedStepResults").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sharedStepResults` to be an array in the JSON string but got `%s`", jsonObj.get("sharedStepResults").toString()));
          }

          // validate the optional field `sharedStepResults` (array)
          for (int i = 0; i < jsonArraysharedStepResults.size(); i++) {
            SharedStepResultModel.validateJsonObject(jsonArraysharedStepResults.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StepResultModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StepResultModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StepResultModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StepResultModel.class));

       return (TypeAdapter<T>) new TypeAdapter<StepResultModel>() {
           @Override
           public void write(JsonWriter out, StepResultModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StepResultModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StepResultModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StepResultModel
  * @throws IOException if the JSON string is invalid with respect to StepResultModel
  */
  public static StepResultModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StepResultModel.class);
  }

 /**
  * Convert an instance of StepResultModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

