/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import ru.testit.client.model.TestStatusType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestPlanGroupByStatusType
 */
@JsonPropertyOrder({
  TestPlanGroupByStatusType.JSON_PROPERTY_STATUS_TYPE,
  TestPlanGroupByStatusType.JSON_PROPERTY_VALUE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestPlanGroupByStatusType {
  public static final String JSON_PROPERTY_STATUS_TYPE = "statusType";
  private TestStatusType statusType;

  public static final String JSON_PROPERTY_VALUE = "value";
  private Long value;

  public TestPlanGroupByStatusType() { 
  }

  public TestPlanGroupByStatusType statusType(TestStatusType statusType) {
    this.statusType = statusType;
    return this;
  }

  /**
   * Get statusType
   * @return statusType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestStatusType getStatusType() {
    return statusType;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusType(TestStatusType statusType) {
    this.statusType = statusType;
  }


  public TestPlanGroupByStatusType value(Long value) {
    this.value = value;
    return this;
  }

  /**
   * Get value
   * @return value
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getValue() {
    return value;
  }


  @JsonProperty(JSON_PROPERTY_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setValue(Long value) {
    this.value = value;
  }


  /**
   * Return true if this TestPlanGroupByStatusType object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanGroupByStatusType testPlanGroupByStatusType = (TestPlanGroupByStatusType) o;
    return Objects.equals(this.statusType, testPlanGroupByStatusType.statusType) &&
        Objects.equals(this.value, testPlanGroupByStatusType.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statusType, value);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanGroupByStatusType {\n");
    sb.append("    statusType: ").append(toIndentedString(statusType)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

