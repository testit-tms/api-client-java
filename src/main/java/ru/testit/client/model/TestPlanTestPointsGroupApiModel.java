/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestPlanTestPointsGroupApiModel
 */
@JsonPropertyOrder({
  TestPlanTestPointsGroupApiModel.JSON_PROPERTY_FIELD,
  TestPlanTestPointsGroupApiModel.JSON_PROPERTY_DISPLAY_FIELD
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestPlanTestPointsGroupApiModel {
  public static final String JSON_PROPERTY_FIELD = "field";
  private String field;

  public static final String JSON_PROPERTY_DISPLAY_FIELD = "displayField";
  private JsonNullable<String> displayField = JsonNullable.<String>undefined();

  public TestPlanTestPointsGroupApiModel() { 
  }

  public TestPlanTestPointsGroupApiModel field(String field) {
    this.field = field;
    return this;
  }

  /**
   * Get field
   * @return field
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getField() {
    return field;
  }


  @JsonProperty(JSON_PROPERTY_FIELD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setField(String field) {
    this.field = field;
  }


  public TestPlanTestPointsGroupApiModel displayField(String displayField) {
    this.displayField = JsonNullable.<String>of(displayField);
    return this;
  }

  /**
   * Get displayField
   * @return displayField
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getDisplayField() {
        return displayField.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DISPLAY_FIELD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDisplayField_JsonNullable() {
    return displayField;
  }
  
  @JsonProperty(JSON_PROPERTY_DISPLAY_FIELD)
  public void setDisplayField_JsonNullable(JsonNullable<String> displayField) {
    this.displayField = displayField;
  }

  public void setDisplayField(String displayField) {
    this.displayField = JsonNullable.<String>of(displayField);
  }


  /**
   * Return true if this TestPlanTestPointsGroupApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanTestPointsGroupApiModel testPlanTestPointsGroupApiModel = (TestPlanTestPointsGroupApiModel) o;
    return Objects.equals(this.field, testPlanTestPointsGroupApiModel.field) &&
        equalsNullable(this.displayField, testPlanTestPointsGroupApiModel.displayField);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(field, hashCodeNullable(displayField));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanTestPointsGroupApiModel {\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    displayField: ").append(toIndentedString(displayField)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

