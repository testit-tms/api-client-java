/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestPlanTestPointsGroupApiResult
 */
@JsonPropertyOrder({
  TestPlanTestPointsGroupApiResult.JSON_PROPERTY_FIELD_VALUE,
  TestPlanTestPointsGroupApiResult.JSON_PROPERTY_DISPLAY_FIELD_VALUE,
  TestPlanTestPointsGroupApiResult.JSON_PROPERTY_COUNT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestPlanTestPointsGroupApiResult {
  public static final String JSON_PROPERTY_FIELD_VALUE = "fieldValue";
  private Object fieldValue = null;

  public static final String JSON_PROPERTY_DISPLAY_FIELD_VALUE = "displayFieldValue";
  private Object displayFieldValue = null;

  public static final String JSON_PROPERTY_COUNT = "count";
  private Integer count;

  public TestPlanTestPointsGroupApiResult() { 
  }

  public TestPlanTestPointsGroupApiResult fieldValue(Object fieldValue) {
    this.fieldValue = fieldValue;
    return this;
  }

  /**
   * Get fieldValue
   * @return fieldValue
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FIELD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getFieldValue() {
    return fieldValue;
  }


  @JsonProperty(JSON_PROPERTY_FIELD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFieldValue(Object fieldValue) {
    this.fieldValue = fieldValue;
  }


  public TestPlanTestPointsGroupApiResult displayFieldValue(Object displayFieldValue) {
    this.displayFieldValue = displayFieldValue;
    return this;
  }

  /**
   * Get displayFieldValue
   * @return displayFieldValue
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DISPLAY_FIELD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getDisplayFieldValue() {
    return displayFieldValue;
  }


  @JsonProperty(JSON_PROPERTY_DISPLAY_FIELD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDisplayFieldValue(Object displayFieldValue) {
    this.displayFieldValue = displayFieldValue;
  }


  public TestPlanTestPointsGroupApiResult count(Integer count) {
    this.count = count;
    return this;
  }

  /**
   * Get count
   * @return count
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getCount() {
    return count;
  }


  @JsonProperty(JSON_PROPERTY_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCount(Integer count) {
    this.count = count;
  }


  /**
   * Return true if this TestPlanTestPointsGroupApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanTestPointsGroupApiResult testPlanTestPointsGroupApiResult = (TestPlanTestPointsGroupApiResult) o;
    return Objects.equals(this.fieldValue, testPlanTestPointsGroupApiResult.fieldValue) &&
        Objects.equals(this.displayFieldValue, testPlanTestPointsGroupApiResult.displayFieldValue) &&
        Objects.equals(this.count, testPlanTestPointsGroupApiResult.count);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fieldValue, displayFieldValue, count);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanTestPointsGroupApiResult {\n");
    sb.append("    fieldValue: ").append(toIndentedString(fieldValue)).append("\n");
    sb.append("    displayFieldValue: ").append(toIndentedString(displayFieldValue)).append("\n");
    sb.append("    count: ").append(toIndentedString(count)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

