/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.TestStatusApiResult;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestPointShortApiResult
 */
@JsonPropertyOrder({
  TestPointShortApiResult.JSON_PROPERTY_ID,
  TestPointShortApiResult.JSON_PROPERTY_IS_DELETED,
  TestPointShortApiResult.JSON_PROPERTY_STATUS_MODEL,
  TestPointShortApiResult.JSON_PROPERTY_ITERATION_ID,
  TestPointShortApiResult.JSON_PROPERTY_TEST_SUITE_ID,
  TestPointShortApiResult.JSON_PROPERTY_TESTER_ID,
  TestPointShortApiResult.JSON_PROPERTY_WORK_ITEM_ID,
  TestPointShortApiResult.JSON_PROPERTY_CONFIGURATION_ID,
  TestPointShortApiResult.JSON_PROPERTY_STATUS,
  TestPointShortApiResult.JSON_PROPERTY_LAST_TEST_RESULT_ID,
  TestPointShortApiResult.JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestPointShortApiResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_STATUS_MODEL = "statusModel";
  private TestStatusApiResult statusModel;

  public static final String JSON_PROPERTY_ITERATION_ID = "iterationId";
  private UUID iterationId;

  public static final String JSON_PROPERTY_TEST_SUITE_ID = "testSuiteId";
  private UUID testSuiteId;

  public static final String JSON_PROPERTY_TESTER_ID = "testerId";
  private JsonNullable<UUID> testerId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_ID = "workItemId";
  private JsonNullable<UUID> workItemId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_CONFIGURATION_ID = "configurationId";
  private JsonNullable<UUID> configurationId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  @Deprecated
  private JsonNullable<String> status = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RESULT_ID = "lastTestResultId";
  private JsonNullable<UUID> lastTestResultId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION = "workItemMedianDuration";
  private JsonNullable<Long> workItemMedianDuration = JsonNullable.<Long>undefined();

  public TestPointShortApiResult() { 
  }

  public TestPointShortApiResult id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Test point unique internal identifier
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestPointShortApiResult isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Indicates if the entity is deleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public TestPointShortApiResult statusModel(TestStatusApiResult statusModel) {
    this.statusModel = statusModel;
    return this;
  }

  /**
   * Test point status
   * @return statusModel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestStatusApiResult getStatusModel() {
    return statusModel;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusModel(TestStatusApiResult statusModel) {
    this.statusModel = statusModel;
  }


  public TestPointShortApiResult iterationId(UUID iterationId) {
    this.iterationId = iterationId;
    return this;
  }

  /**
   * Iteration unique identifier
   * @return iterationId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getIterationId() {
    return iterationId;
  }


  @JsonProperty(JSON_PROPERTY_ITERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIterationId(UUID iterationId) {
    this.iterationId = iterationId;
  }


  public TestPointShortApiResult testSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
    return this;
  }

  /**
   * Test suite to which test point relates unique identifier
   * @return testSuiteId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_SUITE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getTestSuiteId() {
    return testSuiteId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_SUITE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
  }


  public TestPointShortApiResult testerId(UUID testerId) {
    this.testerId = JsonNullable.<UUID>of(testerId);
    return this;
  }

  /**
   * Tester who is responded for the test unique internal identifier
   * @return testerId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTesterId() {
        return testerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TESTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTesterId_JsonNullable() {
    return testerId;
  }
  
  @JsonProperty(JSON_PROPERTY_TESTER_ID)
  public void setTesterId_JsonNullable(JsonNullable<UUID> testerId) {
    this.testerId = testerId;
  }

  public void setTesterId(UUID testerId) {
    this.testerId = JsonNullable.<UUID>of(testerId);
  }


  public TestPointShortApiResult workItemId(UUID workItemId) {
    this.workItemId = JsonNullable.<UUID>of(workItemId);
    return this;
  }

  /**
   * Workitem to which test point relates unique identifier
   * @return workItemId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getWorkItemId() {
        return workItemId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkItemId_JsonNullable() {
    return workItemId;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  public void setWorkItemId_JsonNullable(JsonNullable<UUID> workItemId) {
    this.workItemId = workItemId;
  }

  public void setWorkItemId(UUID workItemId) {
    this.workItemId = JsonNullable.<UUID>of(workItemId);
  }


  public TestPointShortApiResult configurationId(UUID configurationId) {
    this.configurationId = JsonNullable.<UUID>of(configurationId);
    return this;
  }

  /**
   * Configuration to which test point relates unique identifier
   * @return configurationId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getConfigurationId() {
        return configurationId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getConfigurationId_JsonNullable() {
    return configurationId;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  public void setConfigurationId_JsonNullable(JsonNullable<UUID> configurationId) {
    this.configurationId = configurationId;
  }

  public void setConfigurationId(UUID configurationId) {
    this.configurationId = JsonNullable.<UUID>of(configurationId);
  }


  @Deprecated
  public TestPointShortApiResult status(String status) {
    this.status = JsonNullable.<String>of(status);
    return this;
  }

  /**
   * Test point status  Applies one of these values: Blocked, NoResults, Failed, Passed
   * @return status
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getStatus() {
        return status.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getStatus_JsonNullable() {
    return status;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS)
  public void setStatus_JsonNullable(JsonNullable<String> status) {
    this.status = status;
  }

  @Deprecated
  public void setStatus(String status) {
    this.status = JsonNullable.<String>of(status);
  }


  public TestPointShortApiResult lastTestResultId(UUID lastTestResultId) {
    this.lastTestResultId = JsonNullable.<UUID>of(lastTestResultId);
    return this;
  }

  /**
   * Last test result unique identifier
   * @return lastTestResultId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getLastTestResultId() {
        return lastTestResultId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getLastTestResultId_JsonNullable() {
    return lastTestResultId;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT_ID)
  public void setLastTestResultId_JsonNullable(JsonNullable<UUID> lastTestResultId) {
    this.lastTestResultId = lastTestResultId;
  }

  public void setLastTestResultId(UUID lastTestResultId) {
    this.lastTestResultId = JsonNullable.<UUID>of(lastTestResultId);
  }


  public TestPointShortApiResult workItemMedianDuration(Long workItemMedianDuration) {
    this.workItemMedianDuration = JsonNullable.<Long>of(workItemMedianDuration);
    return this;
  }

  /**
   * Median duration of work item the test point represents
   * @return workItemMedianDuration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getWorkItemMedianDuration() {
        return workItemMedianDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getWorkItemMedianDuration_JsonNullable() {
    return workItemMedianDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION)
  public void setWorkItemMedianDuration_JsonNullable(JsonNullable<Long> workItemMedianDuration) {
    this.workItemMedianDuration = workItemMedianDuration;
  }

  public void setWorkItemMedianDuration(Long workItemMedianDuration) {
    this.workItemMedianDuration = JsonNullable.<Long>of(workItemMedianDuration);
  }


  /**
   * Return true if this TestPointShortApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPointShortApiResult testPointShortApiResult = (TestPointShortApiResult) o;
    return Objects.equals(this.id, testPointShortApiResult.id) &&
        Objects.equals(this.isDeleted, testPointShortApiResult.isDeleted) &&
        Objects.equals(this.statusModel, testPointShortApiResult.statusModel) &&
        Objects.equals(this.iterationId, testPointShortApiResult.iterationId) &&
        Objects.equals(this.testSuiteId, testPointShortApiResult.testSuiteId) &&
        equalsNullable(this.testerId, testPointShortApiResult.testerId) &&
        equalsNullable(this.workItemId, testPointShortApiResult.workItemId) &&
        equalsNullable(this.configurationId, testPointShortApiResult.configurationId) &&
        equalsNullable(this.status, testPointShortApiResult.status) &&
        equalsNullable(this.lastTestResultId, testPointShortApiResult.lastTestResultId) &&
        equalsNullable(this.workItemMedianDuration, testPointShortApiResult.workItemMedianDuration);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, isDeleted, statusModel, iterationId, testSuiteId, hashCodeNullable(testerId), hashCodeNullable(workItemId), hashCodeNullable(configurationId), hashCodeNullable(status), hashCodeNullable(lastTestResultId), hashCodeNullable(workItemMedianDuration));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPointShortApiResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    statusModel: ").append(toIndentedString(statusModel)).append("\n");
    sb.append("    iterationId: ").append(toIndentedString(iterationId)).append("\n");
    sb.append("    testSuiteId: ").append(toIndentedString(testSuiteId)).append("\n");
    sb.append("    testerId: ").append(toIndentedString(testerId)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastTestResultId: ").append(toIndentedString(lastTestResultId)).append("\n");
    sb.append("    workItemMedianDuration: ").append(toIndentedString(workItemMedianDuration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

