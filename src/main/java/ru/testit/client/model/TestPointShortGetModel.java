/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.TestPointShortGetModelLastTestResult;
import ru.testit.client.model.TestPointStatus;
import ru.testit.client.model.WorkItemPriorityModel;
import ru.testit.client.model.WorkItemState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestPointShortGetModel
 */
@JsonPropertyOrder({
  TestPointShortGetModel.JSON_PROPERTY_ID,
  TestPointShortGetModel.JSON_PROPERTY_CREATED_DATE,
  TestPointShortGetModel.JSON_PROPERTY_CREATED_BY_ID,
  TestPointShortGetModel.JSON_PROPERTY_MODIFIED_DATE,
  TestPointShortGetModel.JSON_PROPERTY_MODIFIED_BY_ID,
  TestPointShortGetModel.JSON_PROPERTY_TESTER_ID,
  TestPointShortGetModel.JSON_PROPERTY_PARAMETERS,
  TestPointShortGetModel.JSON_PROPERTY_ATTRIBUTES,
  TestPointShortGetModel.JSON_PROPERTY_TAGS,
  TestPointShortGetModel.JSON_PROPERTY_LINKS,
  TestPointShortGetModel.JSON_PROPERTY_TEST_SUITE_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_GLOBAL_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_VERSION_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION,
  TestPointShortGetModel.JSON_PROPERTY_STATUS,
  TestPointShortGetModel.JSON_PROPERTY_PRIORITY,
  TestPointShortGetModel.JSON_PROPERTY_IS_AUTOMATED,
  TestPointShortGetModel.JSON_PROPERTY_NAME,
  TestPointShortGetModel.JSON_PROPERTY_CONFIGURATION_ID,
  TestPointShortGetModel.JSON_PROPERTY_DURATION,
  TestPointShortGetModel.JSON_PROPERTY_SECTION_ID,
  TestPointShortGetModel.JSON_PROPERTY_SECTION_NAME,
  TestPointShortGetModel.JSON_PROPERTY_PROJECT_ID,
  TestPointShortGetModel.JSON_PROPERTY_LAST_TEST_RESULT,
  TestPointShortGetModel.JSON_PROPERTY_ITERATION_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_STATE,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_CREATED_DATE,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID,
  TestPointShortGetModel.JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TestPointShortGetModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TESTER_ID = "testerId";
  private JsonNullable<UUID> testerId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private JsonNullable<Map<String, String>> parameters = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private JsonNullable<Map<String, Object>> attributes = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<List<String>> tags = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<String>> links = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TEST_SUITE_ID = "testSuiteId";
  private UUID testSuiteId;

  public static final String JSON_PROPERTY_WORK_ITEM_ID = "workItemId";
  private UUID workItemId;

  public static final String JSON_PROPERTY_WORK_ITEM_GLOBAL_ID = "workItemGlobalId";
  private Long workItemGlobalId;

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_ID = "workItemVersionId";
  private UUID workItemVersionId;

  public static final String JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION = "workItemMedianDuration";
  private JsonNullable<Long> workItemMedianDuration = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_STATUS = "status";
  private TestPointStatus status;

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private WorkItemPriorityModel priority;

  public static final String JSON_PROPERTY_IS_AUTOMATED = "isAutomated";
  private Boolean isAutomated;

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONFIGURATION_ID = "configurationId";
  private UUID configurationId;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Integer duration;

  public static final String JSON_PROPERTY_SECTION_ID = "sectionId";
  private UUID sectionId;

  public static final String JSON_PROPERTY_SECTION_NAME = "sectionName";
  private JsonNullable<String> sectionName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_LAST_TEST_RESULT = "lastTestResult";
  private TestPointShortGetModelLastTestResult lastTestResult;

  public static final String JSON_PROPERTY_ITERATION_ID = "iterationId";
  private UUID iterationId;

  public static final String JSON_PROPERTY_WORK_ITEM_STATE = "workItemState";
  private WorkItemState workItemState;

  public static final String JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID = "workItemCreatedById";
  private UUID workItemCreatedById;

  public static final String JSON_PROPERTY_WORK_ITEM_CREATED_DATE = "workItemCreatedDate";
  private OffsetDateTime workItemCreatedDate;

  public static final String JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID = "workItemModifiedById";
  private JsonNullable<UUID> workItemModifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE = "workItemModifiedDate";
  private JsonNullable<OffsetDateTime> workItemModifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public TestPointShortGetModel() { 
  }

  public TestPointShortGetModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Unique ID of the test point
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestPointShortGetModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Creation date of the test point
   * @return createdDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public TestPointShortGetModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Unique ID of the test point creator
   * @return createdById
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public TestPointShortGetModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

   /**
   * Last modification date of the test point
   * @return modifiedDate
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public TestPointShortGetModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

   /**
   * Unique ID of the test point last editor
   * @return modifiedById
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public TestPointShortGetModel testerId(UUID testerId) {
    this.testerId = JsonNullable.<UUID>of(testerId);
    return this;
  }

   /**
   * Unique ID of the test point assigned user
   * @return testerId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTesterId() {
        return testerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TESTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTesterId_JsonNullable() {
    return testerId;
  }
  
  @JsonProperty(JSON_PROPERTY_TESTER_ID)
  public void setTesterId_JsonNullable(JsonNullable<UUID> testerId) {
    this.testerId = testerId;
  }

  public void setTesterId(UUID testerId) {
    this.testerId = JsonNullable.<UUID>of(testerId);
  }


  public TestPointShortGetModel parameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
    return this;
  }

  public TestPointShortGetModel putParametersItem(String key, String parametersItem) {
    if (this.parameters == null || !this.parameters.isPresent()) {
      this.parameters = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.parameters.get().put(key, parametersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Collection of the test point parameters
   * @return parameters
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getParameters() {
        return parameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getParameters_JsonNullable() {
    return parameters;
  }
  
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  public void setParameters_JsonNullable(JsonNullable<Map<String, String>> parameters) {
    this.parameters = parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
  }


  public TestPointShortGetModel attributes(Map<String, Object> attributes) {
    this.attributes = JsonNullable.<Map<String, Object>>of(attributes);
    return this;
  }

  public TestPointShortGetModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null || !this.attributes.isPresent()) {
      this.attributes = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.attributes.get().put(key, attributesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Collection of attributes of work item the test point represents
   * @return attributes
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, Object> getAttributes() {
        return attributes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getAttributes_JsonNullable() {
    return attributes;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  public void setAttributes_JsonNullable(JsonNullable<Map<String, Object>> attributes) {
    this.attributes = attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = JsonNullable.<Map<String, Object>>of(attributes);
  }


  public TestPointShortGetModel tags(List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
    return this;
  }

  public TestPointShortGetModel addTagsItem(String tagsItem) {
    if (this.tags == null || !this.tags.isPresent()) {
      this.tags = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tags.get().add(tagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Collection of the test point tags
   * @return tags
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<String> getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<List<String>> tags) {
    this.tags = tags;
  }

  public void setTags(List<String> tags) {
    this.tags = JsonNullable.<List<String>>of(tags);
  }


  public TestPointShortGetModel links(List<String> links) {
    this.links = JsonNullable.<List<String>>of(links);
    return this;
  }

  public TestPointShortGetModel addLinksItem(String linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Collection of the test point links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<String> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<String>> links) {
    this.links = links;
  }

  public void setLinks(List<String> links) {
    this.links = JsonNullable.<List<String>>of(links);
  }


  public TestPointShortGetModel testSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
    return this;
  }

   /**
   * Unique ID of test suite the test point assigned to
   * @return testSuiteId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_SUITE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getTestSuiteId() {
    return testSuiteId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_SUITE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
  }


  public TestPointShortGetModel workItemId(UUID workItemId) {
    this.workItemId = workItemId;
    return this;
  }

   /**
   * Unique ID of work item the test point represents
   * @return workItemId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkItemId() {
    return workItemId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemId(UUID workItemId) {
    this.workItemId = workItemId;
  }


  public TestPointShortGetModel workItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
    return this;
  }

   /**
   * Global ID of work item the test point represents
   * @return workItemGlobalId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getWorkItemGlobalId() {
    return workItemGlobalId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
  }


  public TestPointShortGetModel workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
    return this;
  }

   /**
   * Unique ID of work item version the test point represents
   * @return workItemVersionId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkItemVersionId() {
    return workItemVersionId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }


  public TestPointShortGetModel workItemMedianDuration(Long workItemMedianDuration) {
    this.workItemMedianDuration = JsonNullable.<Long>of(workItemMedianDuration);
    return this;
  }

   /**
   * Median duration of work item the test point represents
   * @return workItemMedianDuration
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getWorkItemMedianDuration() {
        return workItemMedianDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getWorkItemMedianDuration_JsonNullable() {
    return workItemMedianDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION)
  public void setWorkItemMedianDuration_JsonNullable(JsonNullable<Long> workItemMedianDuration) {
    this.workItemMedianDuration = workItemMedianDuration;
  }

  public void setWorkItemMedianDuration(Long workItemMedianDuration) {
    this.workItemMedianDuration = JsonNullable.<Long>of(workItemMedianDuration);
  }


  public TestPointShortGetModel status(TestPointStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestPointStatus getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(TestPointStatus status) {
    this.status = status;
  }


  public TestPointShortGetModel priority(WorkItemPriorityModel priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemPriorityModel getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPriority(WorkItemPriorityModel priority) {
    this.priority = priority;
  }


  public TestPointShortGetModel isAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

   /**
   * Indicates if the test point represents an autotest
   * @return isAutomated
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAutomated() {
    return isAutomated;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }


  public TestPointShortGetModel name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

   /**
   * Name of the test point
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public TestPointShortGetModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Unique ID of the test point configuration
   * @return configurationId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getConfigurationId() {
    return configurationId;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }


  public TestPointShortGetModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Duration of the test point
   * @return duration
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public TestPointShortGetModel sectionId(UUID sectionId) {
    this.sectionId = sectionId;
    return this;
  }

   /**
   * Unique ID of section where work item the test point represents is located
   * @return sectionId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSectionId() {
    return sectionId;
  }


  @JsonProperty(JSON_PROPERTY_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSectionId(UUID sectionId) {
    this.sectionId = sectionId;
  }


  public TestPointShortGetModel sectionName(String sectionName) {
    this.sectionName = JsonNullable.<String>of(sectionName);
    return this;
  }

   /**
   * Name of section where work item the test point represents is located
   * @return sectionName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getSectionName() {
        return sectionName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSectionName_JsonNullable() {
    return sectionName;
  }
  
  @JsonProperty(JSON_PROPERTY_SECTION_NAME)
  public void setSectionName_JsonNullable(JsonNullable<String> sectionName) {
    this.sectionName = sectionName;
  }

  public void setSectionName(String sectionName) {
    this.sectionName = JsonNullable.<String>of(sectionName);
  }


  public TestPointShortGetModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Unique ID of the test point project
   * @return projectId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public TestPointShortGetModel lastTestResult(TestPointShortGetModelLastTestResult lastTestResult) {
    this.lastTestResult = lastTestResult;
    return this;
  }

   /**
   * Get lastTestResult
   * @return lastTestResult
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestPointShortGetModelLastTestResult getLastTestResult() {
    return lastTestResult;
  }


  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLastTestResult(TestPointShortGetModelLastTestResult lastTestResult) {
    this.lastTestResult = lastTestResult;
  }


  public TestPointShortGetModel iterationId(UUID iterationId) {
    this.iterationId = iterationId;
    return this;
  }

   /**
   * Unique ID of work item iteration the test point represents
   * @return iterationId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getIterationId() {
    return iterationId;
  }


  @JsonProperty(JSON_PROPERTY_ITERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIterationId(UUID iterationId) {
    this.iterationId = iterationId;
  }


  public TestPointShortGetModel workItemState(WorkItemState workItemState) {
    this.workItemState = workItemState;
    return this;
  }

   /**
   * Get workItemState
   * @return workItemState
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemState getWorkItemState() {
    return workItemState;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemState(WorkItemState workItemState) {
    this.workItemState = workItemState;
  }


  public TestPointShortGetModel workItemCreatedById(UUID workItemCreatedById) {
    this.workItemCreatedById = workItemCreatedById;
    return this;
  }

   /**
   * Unique ID of the work item creator
   * @return workItemCreatedById
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkItemCreatedById() {
    return workItemCreatedById;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemCreatedById(UUID workItemCreatedById) {
    this.workItemCreatedById = workItemCreatedById;
  }


  public TestPointShortGetModel workItemCreatedDate(OffsetDateTime workItemCreatedDate) {
    this.workItemCreatedDate = workItemCreatedDate;
    return this;
  }

   /**
   * Creation date of work item
   * @return workItemCreatedDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getWorkItemCreatedDate() {
    return workItemCreatedDate;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemCreatedDate(OffsetDateTime workItemCreatedDate) {
    this.workItemCreatedDate = workItemCreatedDate;
  }


  public TestPointShortGetModel workItemModifiedById(UUID workItemModifiedById) {
    this.workItemModifiedById = JsonNullable.<UUID>of(workItemModifiedById);
    return this;
  }

   /**
   * Unique ID of the work item last editor
   * @return workItemModifiedById
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getWorkItemModifiedById() {
        return workItemModifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkItemModifiedById_JsonNullable() {
    return workItemModifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID)
  public void setWorkItemModifiedById_JsonNullable(JsonNullable<UUID> workItemModifiedById) {
    this.workItemModifiedById = workItemModifiedById;
  }

  public void setWorkItemModifiedById(UUID workItemModifiedById) {
    this.workItemModifiedById = JsonNullable.<UUID>of(workItemModifiedById);
  }


  public TestPointShortGetModel workItemModifiedDate(OffsetDateTime workItemModifiedDate) {
    this.workItemModifiedDate = JsonNullable.<OffsetDateTime>of(workItemModifiedDate);
    return this;
  }

   /**
   * Modified date of work item
   * @return workItemModifiedDate
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getWorkItemModifiedDate() {
        return workItemModifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getWorkItemModifiedDate_JsonNullable() {
    return workItemModifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE)
  public void setWorkItemModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> workItemModifiedDate) {
    this.workItemModifiedDate = workItemModifiedDate;
  }

  public void setWorkItemModifiedDate(OffsetDateTime workItemModifiedDate) {
    this.workItemModifiedDate = JsonNullable.<OffsetDateTime>of(workItemModifiedDate);
  }


  /**
   * Return true if this TestPointShortGetModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPointShortGetModel testPointShortGetModel = (TestPointShortGetModel) o;
    return Objects.equals(this.id, testPointShortGetModel.id) &&
        Objects.equals(this.createdDate, testPointShortGetModel.createdDate) &&
        Objects.equals(this.createdById, testPointShortGetModel.createdById) &&
        equalsNullable(this.modifiedDate, testPointShortGetModel.modifiedDate) &&
        equalsNullable(this.modifiedById, testPointShortGetModel.modifiedById) &&
        equalsNullable(this.testerId, testPointShortGetModel.testerId) &&
        equalsNullable(this.parameters, testPointShortGetModel.parameters) &&
        equalsNullable(this.attributes, testPointShortGetModel.attributes) &&
        equalsNullable(this.tags, testPointShortGetModel.tags) &&
        equalsNullable(this.links, testPointShortGetModel.links) &&
        Objects.equals(this.testSuiteId, testPointShortGetModel.testSuiteId) &&
        Objects.equals(this.workItemId, testPointShortGetModel.workItemId) &&
        Objects.equals(this.workItemGlobalId, testPointShortGetModel.workItemGlobalId) &&
        Objects.equals(this.workItemVersionId, testPointShortGetModel.workItemVersionId) &&
        equalsNullable(this.workItemMedianDuration, testPointShortGetModel.workItemMedianDuration) &&
        Objects.equals(this.status, testPointShortGetModel.status) &&
        Objects.equals(this.priority, testPointShortGetModel.priority) &&
        Objects.equals(this.isAutomated, testPointShortGetModel.isAutomated) &&
        equalsNullable(this.name, testPointShortGetModel.name) &&
        Objects.equals(this.configurationId, testPointShortGetModel.configurationId) &&
        Objects.equals(this.duration, testPointShortGetModel.duration) &&
        Objects.equals(this.sectionId, testPointShortGetModel.sectionId) &&
        equalsNullable(this.sectionName, testPointShortGetModel.sectionName) &&
        Objects.equals(this.projectId, testPointShortGetModel.projectId) &&
        Objects.equals(this.lastTestResult, testPointShortGetModel.lastTestResult) &&
        Objects.equals(this.iterationId, testPointShortGetModel.iterationId) &&
        Objects.equals(this.workItemState, testPointShortGetModel.workItemState) &&
        Objects.equals(this.workItemCreatedById, testPointShortGetModel.workItemCreatedById) &&
        Objects.equals(this.workItemCreatedDate, testPointShortGetModel.workItemCreatedDate) &&
        equalsNullable(this.workItemModifiedById, testPointShortGetModel.workItemModifiedById) &&
        equalsNullable(this.workItemModifiedDate, testPointShortGetModel.workItemModifiedDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, createdById, hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById), hashCodeNullable(testerId), hashCodeNullable(parameters), hashCodeNullable(attributes), hashCodeNullable(tags), hashCodeNullable(links), testSuiteId, workItemId, workItemGlobalId, workItemVersionId, hashCodeNullable(workItemMedianDuration), status, priority, isAutomated, hashCodeNullable(name), configurationId, duration, sectionId, hashCodeNullable(sectionName), projectId, lastTestResult, iterationId, workItemState, workItemCreatedById, workItemCreatedDate, hashCodeNullable(workItemModifiedById), hashCodeNullable(workItemModifiedDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPointShortGetModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    testerId: ").append(toIndentedString(testerId)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    testSuiteId: ").append(toIndentedString(testSuiteId)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("    workItemGlobalId: ").append(toIndentedString(workItemGlobalId)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    workItemMedianDuration: ").append(toIndentedString(workItemMedianDuration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    sectionName: ").append(toIndentedString(sectionName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    lastTestResult: ").append(toIndentedString(lastTestResult)).append("\n");
    sb.append("    iterationId: ").append(toIndentedString(iterationId)).append("\n");
    sb.append("    workItemState: ").append(toIndentedString(workItemState)).append("\n");
    sb.append("    workItemCreatedById: ").append(toIndentedString(workItemCreatedById)).append("\n");
    sb.append("    workItemCreatedDate: ").append(toIndentedString(workItemCreatedDate)).append("\n");
    sb.append("    workItemModifiedById: ").append(toIndentedString(workItemModifiedById)).append("\n");
    sb.append("    workItemModifiedDate: ").append(toIndentedString(workItemModifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

