/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.LastTestResultModel;
import ru.testit.client.model.TestPointStatus;
import ru.testit.client.model.TestStatusApiResult;
import ru.testit.client.model.WorkItemPriorityModel;
import ru.testit.client.model.WorkItemSourceTypeModel;
import ru.testit.client.model.WorkItemState;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestPointShortResponseModel
 */
@JsonPropertyOrder({
  TestPointShortResponseModel.JSON_PROPERTY_ID,
  TestPointShortResponseModel.JSON_PROPERTY_CREATED_DATE,
  TestPointShortResponseModel.JSON_PROPERTY_CREATED_BY_ID,
  TestPointShortResponseModel.JSON_PROPERTY_ATTRIBUTES,
  TestPointShortResponseModel.JSON_PROPERTY_TAGS,
  TestPointShortResponseModel.JSON_PROPERTY_LINKS,
  TestPointShortResponseModel.JSON_PROPERTY_TEST_SUITE_ID,
  TestPointShortResponseModel.JSON_PROPERTY_TEST_SUITE_NAME,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_ID,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_GLOBAL_ID,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_VERSION_ID,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER,
  TestPointShortResponseModel.JSON_PROPERTY_STATUS,
  TestPointShortResponseModel.JSON_PROPERTY_STATUS_MODEL,
  TestPointShortResponseModel.JSON_PROPERTY_PRIORITY,
  TestPointShortResponseModel.JSON_PROPERTY_SOURCE_TYPE,
  TestPointShortResponseModel.JSON_PROPERTY_IS_AUTOMATED,
  TestPointShortResponseModel.JSON_PROPERTY_NAME,
  TestPointShortResponseModel.JSON_PROPERTY_CONFIGURATION_ID,
  TestPointShortResponseModel.JSON_PROPERTY_DURATION,
  TestPointShortResponseModel.JSON_PROPERTY_SECTION_ID,
  TestPointShortResponseModel.JSON_PROPERTY_PROJECT_ID,
  TestPointShortResponseModel.JSON_PROPERTY_ITERATION_ID,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_STATE,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_CREATED_DATE,
  TestPointShortResponseModel.JSON_PROPERTY_MODIFIED_DATE,
  TestPointShortResponseModel.JSON_PROPERTY_MODIFIED_BY_ID,
  TestPointShortResponseModel.JSON_PROPERTY_TESTER_ID,
  TestPointShortResponseModel.JSON_PROPERTY_PARAMETERS,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION,
  TestPointShortResponseModel.JSON_PROPERTY_SECTION_NAME,
  TestPointShortResponseModel.JSON_PROPERTY_LAST_TEST_RESULT,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID,
  TestPointShortResponseModel.JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestPointShortResponseModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private Map<String, Object> attributes = new HashMap<>();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private List<String> tags = new ArrayList<>();

  public static final String JSON_PROPERTY_LINKS = "links";
  private List<String> links = new ArrayList<>();

  public static final String JSON_PROPERTY_TEST_SUITE_ID = "testSuiteId";
  private UUID testSuiteId;

  public static final String JSON_PROPERTY_TEST_SUITE_NAME = "testSuiteName";
  private String testSuiteName;

  public static final String JSON_PROPERTY_WORK_ITEM_ID = "workItemId";
  private UUID workItemId;

  public static final String JSON_PROPERTY_WORK_ITEM_GLOBAL_ID = "workItemGlobalId";
  private Long workItemGlobalId;

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_ID = "workItemVersionId";
  private UUID workItemVersionId;

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER = "workItemVersionNumber";
  private Integer workItemVersionNumber;

  public static final String JSON_PROPERTY_STATUS = "status";
  @Deprecated
  private TestPointStatus status;

  public static final String JSON_PROPERTY_STATUS_MODEL = "statusModel";
  private TestStatusApiResult statusModel;

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private WorkItemPriorityModel priority;

  public static final String JSON_PROPERTY_SOURCE_TYPE = "sourceType";
  private WorkItemSourceTypeModel sourceType;

  public static final String JSON_PROPERTY_IS_AUTOMATED = "isAutomated";
  private Boolean isAutomated;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CONFIGURATION_ID = "configurationId";
  private UUID configurationId;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Integer duration;

  public static final String JSON_PROPERTY_SECTION_ID = "sectionId";
  private UUID sectionId;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_ITERATION_ID = "iterationId";
  private UUID iterationId;

  public static final String JSON_PROPERTY_WORK_ITEM_STATE = "workItemState";
  private WorkItemState workItemState;

  public static final String JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID = "workItemCreatedById";
  private UUID workItemCreatedById;

  public static final String JSON_PROPERTY_WORK_ITEM_CREATED_DATE = "workItemCreatedDate";
  private OffsetDateTime workItemCreatedDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TESTER_ID = "testerId";
  private JsonNullable<UUID> testerId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private JsonNullable<Map<String, String>> parameters = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION = "workItemMedianDuration";
  private JsonNullable<Long> workItemMedianDuration = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_SECTION_NAME = "sectionName";
  private JsonNullable<String> sectionName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAST_TEST_RESULT = "lastTestResult";
  private JsonNullable<LastTestResultModel> lastTestResult = JsonNullable.<LastTestResultModel>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID = "workItemModifiedById";
  private JsonNullable<UUID> workItemModifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE = "workItemModifiedDate";
  private JsonNullable<OffsetDateTime> workItemModifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public TestPointShortResponseModel() { 
  }

  public TestPointShortResponseModel id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Unique ID of the test point
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestPointShortResponseModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Creation date of the test point
   * @return createdDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public TestPointShortResponseModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Unique ID of the test point creator
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public TestPointShortResponseModel attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TestPointShortResponseModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

  /**
   * Collection of attributes of work item the test point represents
   * @return attributes
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.ALWAYS)
  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public TestPointShortResponseModel tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public TestPointShortResponseModel addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Collection of the test point tags
   * @return tags
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getTags() {
    return tags;
  }


  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public TestPointShortResponseModel links(List<String> links) {
    this.links = links;
    return this;
  }

  public TestPointShortResponseModel addLinksItem(String linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Collection of the test point links
   * @return links
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<String> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLinks(List<String> links) {
    this.links = links;
  }


  public TestPointShortResponseModel testSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
    return this;
  }

  /**
   * Unique ID of test suite the test point assigned to
   * @return testSuiteId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_SUITE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getTestSuiteId() {
    return testSuiteId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_SUITE_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
  }


  public TestPointShortResponseModel testSuiteName(String testSuiteName) {
    this.testSuiteName = testSuiteName;
    return this;
  }

  /**
   * Name of the test suite
   * @return testSuiteName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_SUITE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTestSuiteName() {
    return testSuiteName;
  }


  @JsonProperty(JSON_PROPERTY_TEST_SUITE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestSuiteName(String testSuiteName) {
    this.testSuiteName = testSuiteName;
  }


  public TestPointShortResponseModel workItemId(UUID workItemId) {
    this.workItemId = workItemId;
    return this;
  }

  /**
   * Unique ID of work item the test point represents
   * @return workItemId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkItemId() {
    return workItemId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemId(UUID workItemId) {
    this.workItemId = workItemId;
  }


  public TestPointShortResponseModel workItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
    return this;
  }

  /**
   * Global ID of work item the test point represents
   * @return workItemGlobalId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getWorkItemGlobalId() {
    return workItemGlobalId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
  }


  public TestPointShortResponseModel workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
    return this;
  }

  /**
   * Unique ID of work item version the test point represents
   * @return workItemVersionId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkItemVersionId() {
    return workItemVersionId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }


  public TestPointShortResponseModel workItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
    return this;
  }

  /**
   * Number of work item version the test point represents
   * @return workItemVersionNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWorkItemVersionNumber() {
    return workItemVersionNumber;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
  }


  @Deprecated
  public TestPointShortResponseModel status(TestPointStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Status of the test point
   * @return status
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestPointStatus getStatus() {
    return status;
  }


  @Deprecated
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(TestPointStatus status) {
    this.status = status;
  }


  public TestPointShortResponseModel statusModel(TestStatusApiResult statusModel) {
    this.statusModel = statusModel;
    return this;
  }

  /**
   * Status of the test point
   * @return statusModel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestStatusApiResult getStatusModel() {
    return statusModel;
  }


  @JsonProperty(JSON_PROPERTY_STATUS_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatusModel(TestStatusApiResult statusModel) {
    this.statusModel = statusModel;
  }


  public TestPointShortResponseModel priority(WorkItemPriorityModel priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Priority of the test point
   * @return priority
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemPriorityModel getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPriority(WorkItemPriorityModel priority) {
    this.priority = priority;
  }


  public TestPointShortResponseModel sourceType(WorkItemSourceTypeModel sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Source type of the test point
   * @return sourceType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemSourceTypeModel getSourceType() {
    return sourceType;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceType(WorkItemSourceTypeModel sourceType) {
    this.sourceType = sourceType;
  }


  public TestPointShortResponseModel isAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

  /**
   * Indicates if the test point represents an autotest
   * @return isAutomated
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAutomated() {
    return isAutomated;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }


  public TestPointShortResponseModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Name of the test point
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public TestPointShortResponseModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

  /**
   * Unique ID of the test point configuration
   * @return configurationId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getConfigurationId() {
    return configurationId;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }


  public TestPointShortResponseModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Duration of the test point
   * @return duration
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public TestPointShortResponseModel sectionId(UUID sectionId) {
    this.sectionId = sectionId;
    return this;
  }

  /**
   * Unique ID of section where work item the test point represents is located
   * @return sectionId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSectionId() {
    return sectionId;
  }


  @JsonProperty(JSON_PROPERTY_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSectionId(UUID sectionId) {
    this.sectionId = sectionId;
  }


  public TestPointShortResponseModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Unique ID of the test point project
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public TestPointShortResponseModel iterationId(UUID iterationId) {
    this.iterationId = iterationId;
    return this;
  }

  /**
   * Unique ID of work item iteration the test point represents
   * @return iterationId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getIterationId() {
    return iterationId;
  }


  @JsonProperty(JSON_PROPERTY_ITERATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIterationId(UUID iterationId) {
    this.iterationId = iterationId;
  }


  public TestPointShortResponseModel workItemState(WorkItemState workItemState) {
    this.workItemState = workItemState;
    return this;
  }

  /**
   * Work item state
   * @return workItemState
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemState getWorkItemState() {
    return workItemState;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemState(WorkItemState workItemState) {
    this.workItemState = workItemState;
  }


  public TestPointShortResponseModel workItemCreatedById(UUID workItemCreatedById) {
    this.workItemCreatedById = workItemCreatedById;
    return this;
  }

  /**
   * Unique ID of the work item creator
   * @return workItemCreatedById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getWorkItemCreatedById() {
    return workItemCreatedById;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemCreatedById(UUID workItemCreatedById) {
    this.workItemCreatedById = workItemCreatedById;
  }


  public TestPointShortResponseModel workItemCreatedDate(OffsetDateTime workItemCreatedDate) {
    this.workItemCreatedDate = workItemCreatedDate;
    return this;
  }

  /**
   * Creation date of work item
   * @return workItemCreatedDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getWorkItemCreatedDate() {
    return workItemCreatedDate;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemCreatedDate(OffsetDateTime workItemCreatedDate) {
    this.workItemCreatedDate = workItemCreatedDate;
  }


  public TestPointShortResponseModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Last modification date of the test point
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public TestPointShortResponseModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Unique ID of the test point last editor
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public TestPointShortResponseModel testerId(UUID testerId) {
    this.testerId = JsonNullable.<UUID>of(testerId);
    return this;
  }

  /**
   * Unique ID of the test point assigned user
   * @return testerId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTesterId() {
        return testerId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TESTER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTesterId_JsonNullable() {
    return testerId;
  }
  
  @JsonProperty(JSON_PROPERTY_TESTER_ID)
  public void setTesterId_JsonNullable(JsonNullable<UUID> testerId) {
    this.testerId = testerId;
  }

  public void setTesterId(UUID testerId) {
    this.testerId = JsonNullable.<UUID>of(testerId);
  }


  public TestPointShortResponseModel parameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
    return this;
  }

  public TestPointShortResponseModel putParametersItem(String key, String parametersItem) {
    if (this.parameters == null || !this.parameters.isPresent()) {
      this.parameters = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.parameters.get().put(key, parametersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of the test point parameters
   * @return parameters
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getParameters() {
        return parameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getParameters_JsonNullable() {
    return parameters;
  }
  
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  public void setParameters_JsonNullable(JsonNullable<Map<String, String>> parameters) {
    this.parameters = parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
  }


  public TestPointShortResponseModel workItemMedianDuration(Long workItemMedianDuration) {
    this.workItemMedianDuration = JsonNullable.<Long>of(workItemMedianDuration);
    return this;
  }

  /**
   * Median duration of work item the test point represents
   * @return workItemMedianDuration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getWorkItemMedianDuration() {
        return workItemMedianDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getWorkItemMedianDuration_JsonNullable() {
    return workItemMedianDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MEDIAN_DURATION)
  public void setWorkItemMedianDuration_JsonNullable(JsonNullable<Long> workItemMedianDuration) {
    this.workItemMedianDuration = workItemMedianDuration;
  }

  public void setWorkItemMedianDuration(Long workItemMedianDuration) {
    this.workItemMedianDuration = JsonNullable.<Long>of(workItemMedianDuration);
  }


  public TestPointShortResponseModel sectionName(String sectionName) {
    this.sectionName = JsonNullable.<String>of(sectionName);
    return this;
  }

  /**
   * Name of section where work item the test point represents is located
   * @return sectionName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getSectionName() {
        return sectionName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECTION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getSectionName_JsonNullable() {
    return sectionName;
  }
  
  @JsonProperty(JSON_PROPERTY_SECTION_NAME)
  public void setSectionName_JsonNullable(JsonNullable<String> sectionName) {
    this.sectionName = sectionName;
  }

  public void setSectionName(String sectionName) {
    this.sectionName = JsonNullable.<String>of(sectionName);
  }


  public TestPointShortResponseModel lastTestResult(LastTestResultModel lastTestResult) {
    this.lastTestResult = JsonNullable.<LastTestResultModel>of(lastTestResult);
    return this;
  }

  /**
   * Model of the test point last test result
   * @return lastTestResult
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public LastTestResultModel getLastTestResult() {
        return lastTestResult.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<LastTestResultModel> getLastTestResult_JsonNullable() {
    return lastTestResult;
  }
  
  @JsonProperty(JSON_PROPERTY_LAST_TEST_RESULT)
  public void setLastTestResult_JsonNullable(JsonNullable<LastTestResultModel> lastTestResult) {
    this.lastTestResult = lastTestResult;
  }

  public void setLastTestResult(LastTestResultModel lastTestResult) {
    this.lastTestResult = JsonNullable.<LastTestResultModel>of(lastTestResult);
  }


  public TestPointShortResponseModel workItemModifiedById(UUID workItemModifiedById) {
    this.workItemModifiedById = JsonNullable.<UUID>of(workItemModifiedById);
    return this;
  }

  /**
   * Unique ID of the work item last editor
   * @return workItemModifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getWorkItemModifiedById() {
        return workItemModifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkItemModifiedById_JsonNullable() {
    return workItemModifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_BY_ID)
  public void setWorkItemModifiedById_JsonNullable(JsonNullable<UUID> workItemModifiedById) {
    this.workItemModifiedById = workItemModifiedById;
  }

  public void setWorkItemModifiedById(UUID workItemModifiedById) {
    this.workItemModifiedById = JsonNullable.<UUID>of(workItemModifiedById);
  }


  public TestPointShortResponseModel workItemModifiedDate(OffsetDateTime workItemModifiedDate) {
    this.workItemModifiedDate = JsonNullable.<OffsetDateTime>of(workItemModifiedDate);
    return this;
  }

  /**
   * Modified date of work item
   * @return workItemModifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getWorkItemModifiedDate() {
        return workItemModifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getWorkItemModifiedDate_JsonNullable() {
    return workItemModifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_MODIFIED_DATE)
  public void setWorkItemModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> workItemModifiedDate) {
    this.workItemModifiedDate = workItemModifiedDate;
  }

  public void setWorkItemModifiedDate(OffsetDateTime workItemModifiedDate) {
    this.workItemModifiedDate = JsonNullable.<OffsetDateTime>of(workItemModifiedDate);
  }


  /**
   * Return true if this TestPointShortResponseModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPointShortResponseModel testPointShortResponseModel = (TestPointShortResponseModel) o;
    return Objects.equals(this.id, testPointShortResponseModel.id) &&
        Objects.equals(this.createdDate, testPointShortResponseModel.createdDate) &&
        Objects.equals(this.createdById, testPointShortResponseModel.createdById) &&
        Objects.equals(this.attributes, testPointShortResponseModel.attributes) &&
        Objects.equals(this.tags, testPointShortResponseModel.tags) &&
        Objects.equals(this.links, testPointShortResponseModel.links) &&
        Objects.equals(this.testSuiteId, testPointShortResponseModel.testSuiteId) &&
        Objects.equals(this.testSuiteName, testPointShortResponseModel.testSuiteName) &&
        Objects.equals(this.workItemId, testPointShortResponseModel.workItemId) &&
        Objects.equals(this.workItemGlobalId, testPointShortResponseModel.workItemGlobalId) &&
        Objects.equals(this.workItemVersionId, testPointShortResponseModel.workItemVersionId) &&
        Objects.equals(this.workItemVersionNumber, testPointShortResponseModel.workItemVersionNumber) &&
        Objects.equals(this.status, testPointShortResponseModel.status) &&
        Objects.equals(this.statusModel, testPointShortResponseModel.statusModel) &&
        Objects.equals(this.priority, testPointShortResponseModel.priority) &&
        Objects.equals(this.sourceType, testPointShortResponseModel.sourceType) &&
        Objects.equals(this.isAutomated, testPointShortResponseModel.isAutomated) &&
        Objects.equals(this.name, testPointShortResponseModel.name) &&
        Objects.equals(this.configurationId, testPointShortResponseModel.configurationId) &&
        Objects.equals(this.duration, testPointShortResponseModel.duration) &&
        Objects.equals(this.sectionId, testPointShortResponseModel.sectionId) &&
        Objects.equals(this.projectId, testPointShortResponseModel.projectId) &&
        Objects.equals(this.iterationId, testPointShortResponseModel.iterationId) &&
        Objects.equals(this.workItemState, testPointShortResponseModel.workItemState) &&
        Objects.equals(this.workItemCreatedById, testPointShortResponseModel.workItemCreatedById) &&
        Objects.equals(this.workItemCreatedDate, testPointShortResponseModel.workItemCreatedDate) &&
        equalsNullable(this.modifiedDate, testPointShortResponseModel.modifiedDate) &&
        equalsNullable(this.modifiedById, testPointShortResponseModel.modifiedById) &&
        equalsNullable(this.testerId, testPointShortResponseModel.testerId) &&
        equalsNullable(this.parameters, testPointShortResponseModel.parameters) &&
        equalsNullable(this.workItemMedianDuration, testPointShortResponseModel.workItemMedianDuration) &&
        equalsNullable(this.sectionName, testPointShortResponseModel.sectionName) &&
        equalsNullable(this.lastTestResult, testPointShortResponseModel.lastTestResult) &&
        equalsNullable(this.workItemModifiedById, testPointShortResponseModel.workItemModifiedById) &&
        equalsNullable(this.workItemModifiedDate, testPointShortResponseModel.workItemModifiedDate);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, createdById, attributes, tags, links, testSuiteId, testSuiteName, workItemId, workItemGlobalId, workItemVersionId, workItemVersionNumber, status, statusModel, priority, sourceType, isAutomated, name, configurationId, duration, sectionId, projectId, iterationId, workItemState, workItemCreatedById, workItemCreatedDate, hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById), hashCodeNullable(testerId), hashCodeNullable(parameters), hashCodeNullable(workItemMedianDuration), hashCodeNullable(sectionName), hashCodeNullable(lastTestResult), hashCodeNullable(workItemModifiedById), hashCodeNullable(workItemModifiedDate));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPointShortResponseModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    testSuiteId: ").append(toIndentedString(testSuiteId)).append("\n");
    sb.append("    testSuiteName: ").append(toIndentedString(testSuiteName)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("    workItemGlobalId: ").append(toIndentedString(workItemGlobalId)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    workItemVersionNumber: ").append(toIndentedString(workItemVersionNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusModel: ").append(toIndentedString(statusModel)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    iterationId: ").append(toIndentedString(iterationId)).append("\n");
    sb.append("    workItemState: ").append(toIndentedString(workItemState)).append("\n");
    sb.append("    workItemCreatedById: ").append(toIndentedString(workItemCreatedById)).append("\n");
    sb.append("    workItemCreatedDate: ").append(toIndentedString(workItemCreatedDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    testerId: ").append(toIndentedString(testerId)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    workItemMedianDuration: ").append(toIndentedString(workItemMedianDuration)).append("\n");
    sb.append("    sectionName: ").append(toIndentedString(sectionName)).append("\n");
    sb.append("    lastTestResult: ").append(toIndentedString(lastTestResult)).append("\n");
    sb.append("    workItemModifiedById: ").append(toIndentedString(workItemModifiedById)).append("\n");
    sb.append("    workItemModifiedDate: ").append(toIndentedString(workItemModifiedDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

