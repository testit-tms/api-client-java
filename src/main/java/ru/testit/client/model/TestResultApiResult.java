/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AttachmentApiResult;
import ru.testit.client.model.AutoTestApiResult;
import ru.testit.client.model.AutoTestStepResultsApiResult;
import ru.testit.client.model.LinkApiResult;
import ru.testit.client.model.StepCommentApiModel;
import ru.testit.client.model.TestPointShortApiResult;
import ru.testit.client.model.TestResultFailureClassApiResult;
import ru.testit.client.model.TestStatusApiResult;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestResultApiResult
 */
@JsonPropertyOrder({
  TestResultApiResult.JSON_PROPERTY_ID,
  TestResultApiResult.JSON_PROPERTY_OUTCOME,
  TestResultApiResult.JSON_PROPERTY_TEST_RUN_ID,
  TestResultApiResult.JSON_PROPERTY_CONFIGURATION_ID,
  TestResultApiResult.JSON_PROPERTY_STATUS,
  TestResultApiResult.JSON_PROPERTY_ATTACHMENTS,
  TestResultApiResult.JSON_PROPERTY_LINKS,
  TestResultApiResult.JSON_PROPERTY_FAILURE_CLASSES,
  TestResultApiResult.JSON_PROPERTY_CREATED_DATE,
  TestResultApiResult.JSON_PROPERTY_CREATED_BY_ID,
  TestResultApiResult.JSON_PROPERTY_IS_DELETED,
  TestResultApiResult.JSON_PROPERTY_STARTED_ON,
  TestResultApiResult.JSON_PROPERTY_COMPLETED_ON,
  TestResultApiResult.JSON_PROPERTY_DURATION_IN_MS,
  TestResultApiResult.JSON_PROPERTY_TRACES,
  TestResultApiResult.JSON_PROPERTY_FAILURE_TYPE,
  TestResultApiResult.JSON_PROPERTY_MESSAGE,
  TestResultApiResult.JSON_PROPERTY_RUN_BY_USER_ID,
  TestResultApiResult.JSON_PROPERTY_STOPPED_BY_USER_ID,
  TestResultApiResult.JSON_PROPERTY_AUTO_TEST_ID,
  TestResultApiResult.JSON_PROPERTY_TEST_POINT_ID,
  TestResultApiResult.JSON_PROPERTY_TEST_POINT,
  TestResultApiResult.JSON_PROPERTY_AUTO_TEST,
  TestResultApiResult.JSON_PROPERTY_AUTO_TEST_STEP_RESULTS,
  TestResultApiResult.JSON_PROPERTY_SETUP_RESULTS,
  TestResultApiResult.JSON_PROPERTY_TEARDOWN_RESULTS,
  TestResultApiResult.JSON_PROPERTY_WORK_ITEM_VERSION_ID,
  TestResultApiResult.JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER,
  TestResultApiResult.JSON_PROPERTY_STEP_COMMENTS,
  TestResultApiResult.JSON_PROPERTY_PARAMETERS,
  TestResultApiResult.JSON_PROPERTY_PROPERTIES,
  TestResultApiResult.JSON_PROPERTY_MODIFIED_DATE,
  TestResultApiResult.JSON_PROPERTY_MODIFIED_BY_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestResultApiResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_OUTCOME = "outcome";
  private String outcome;

  public static final String JSON_PROPERTY_TEST_RUN_ID = "testRunId";
  private UUID testRunId;

  public static final String JSON_PROPERTY_CONFIGURATION_ID = "configurationId";
  private UUID configurationId;

  public static final String JSON_PROPERTY_STATUS = "status";
  private TestStatusApiResult status;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private List<AttachmentApiResult> attachments = new ArrayList<>();

  public static final String JSON_PROPERTY_LINKS = "links";
  private List<LinkApiResult> links = new ArrayList<>();

  public static final String JSON_PROPERTY_FAILURE_CLASSES = "failureClasses";
  private List<TestResultFailureClassApiResult> failureClasses = new ArrayList<>();

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_STARTED_ON = "startedOn";
  private JsonNullable<OffsetDateTime> startedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_COMPLETED_ON = "completedOn";
  private JsonNullable<OffsetDateTime> completedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_DURATION_IN_MS = "durationInMs";
  private JsonNullable<Long> durationInMs = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_TRACES = "traces";
  private JsonNullable<String> traces = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FAILURE_TYPE = "failureType";
  private JsonNullable<String> failureType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<String> message = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RUN_BY_USER_ID = "runByUserId";
  private JsonNullable<UUID> runByUserId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_STOPPED_BY_USER_ID = "stoppedByUserId";
  private JsonNullable<UUID> stoppedByUserId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_AUTO_TEST_ID = "autoTestId";
  private JsonNullable<UUID> autoTestId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_POINT_ID = "testPointId";
  private JsonNullable<UUID> testPointId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_POINT = "testPoint";
  private JsonNullable<TestPointShortApiResult> testPoint = JsonNullable.<TestPointShortApiResult>undefined();

  public static final String JSON_PROPERTY_AUTO_TEST = "autoTest";
  private JsonNullable<AutoTestApiResult> autoTest = JsonNullable.<AutoTestApiResult>undefined();

  public static final String JSON_PROPERTY_AUTO_TEST_STEP_RESULTS = "autoTestStepResults";
  private JsonNullable<List<AutoTestStepResultsApiResult>> autoTestStepResults = JsonNullable.<List<AutoTestStepResultsApiResult>>undefined();

  public static final String JSON_PROPERTY_SETUP_RESULTS = "setupResults";
  private JsonNullable<List<AutoTestStepResultsApiResult>> setupResults = JsonNullable.<List<AutoTestStepResultsApiResult>>undefined();

  public static final String JSON_PROPERTY_TEARDOWN_RESULTS = "teardownResults";
  private JsonNullable<List<AutoTestStepResultsApiResult>> teardownResults = JsonNullable.<List<AutoTestStepResultsApiResult>>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_ID = "workItemVersionId";
  private JsonNullable<UUID> workItemVersionId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER = "workItemVersionNumber";
  private JsonNullable<Integer> workItemVersionNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_STEP_COMMENTS = "stepComments";
  private JsonNullable<List<StepCommentApiModel>> stepComments = JsonNullable.<List<StepCommentApiModel>>undefined();

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private JsonNullable<Map<String, String>> parameters = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private JsonNullable<Map<String, String>> properties = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public TestResultApiResult() { 
  }

  public TestResultApiResult id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestResultApiResult outcome(String outcome) {
    this.outcome = outcome;
    return this;
  }

  /**
   * Get outcome
   * @return outcome
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOutcome() {
    return outcome;
  }


  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOutcome(String outcome) {
    this.outcome = outcome;
  }


  public TestResultApiResult testRunId(UUID testRunId) {
    this.testRunId = testRunId;
    return this;
  }

  /**
   * Get testRunId
   * @return testRunId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getTestRunId() {
    return testRunId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestRunId(UUID testRunId) {
    this.testRunId = testRunId;
  }


  public TestResultApiResult configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

  /**
   * Get configurationId
   * @return configurationId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getConfigurationId() {
    return configurationId;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }


  public TestResultApiResult status(TestStatusApiResult status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestStatusApiResult getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(TestStatusApiResult status) {
    this.status = status;
  }


  public TestResultApiResult attachments(List<AttachmentApiResult> attachments) {
    this.attachments = attachments;
    return this;
  }

  public TestResultApiResult addAttachmentsItem(AttachmentApiResult attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * Get attachments
   * @return attachments
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AttachmentApiResult> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttachments(List<AttachmentApiResult> attachments) {
    this.attachments = attachments;
  }


  public TestResultApiResult links(List<LinkApiResult> links) {
    this.links = links;
    return this;
  }

  public TestResultApiResult addLinksItem(LinkApiResult linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<LinkApiResult> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLinks(List<LinkApiResult> links) {
    this.links = links;
  }


  public TestResultApiResult failureClasses(List<TestResultFailureClassApiResult> failureClasses) {
    this.failureClasses = failureClasses;
    return this;
  }

  public TestResultApiResult addFailureClassesItem(TestResultFailureClassApiResult failureClassesItem) {
    if (this.failureClasses == null) {
      this.failureClasses = new ArrayList<>();
    }
    this.failureClasses.add(failureClassesItem);
    return this;
  }

  /**
   * Get failureClasses
   * @return failureClasses
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILURE_CLASSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<TestResultFailureClassApiResult> getFailureClasses() {
    return failureClasses;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_CLASSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailureClasses(List<TestResultFailureClassApiResult> failureClasses) {
    this.failureClasses = failureClasses;
  }


  public TestResultApiResult createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public TestResultApiResult createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Get createdById
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public TestResultApiResult isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public TestResultApiResult startedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
    return this;
  }

  /**
   * Get startedOn
   * @return startedOn
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getStartedOn() {
        return startedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartedOn_JsonNullable() {
    return startedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  public void setStartedOn_JsonNullable(JsonNullable<OffsetDateTime> startedOn) {
    this.startedOn = startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
  }


  public TestResultApiResult completedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
    return this;
  }

  /**
   * Get completedOn
   * @return completedOn
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getCompletedOn() {
        return completedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCompletedOn_JsonNullable() {
    return completedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  public void setCompletedOn_JsonNullable(JsonNullable<OffsetDateTime> completedOn) {
    this.completedOn = completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
  }


  public TestResultApiResult durationInMs(Long durationInMs) {
    this.durationInMs = JsonNullable.<Long>of(durationInMs);
    return this;
  }

  /**
   * Get durationInMs
   * @return durationInMs
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getDurationInMs() {
        return durationInMs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION_IN_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getDurationInMs_JsonNullable() {
    return durationInMs;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION_IN_MS)
  public void setDurationInMs_JsonNullable(JsonNullable<Long> durationInMs) {
    this.durationInMs = durationInMs;
  }

  public void setDurationInMs(Long durationInMs) {
    this.durationInMs = JsonNullable.<Long>of(durationInMs);
  }


  public TestResultApiResult traces(String traces) {
    this.traces = JsonNullable.<String>of(traces);
    return this;
  }

  /**
   * Get traces
   * @return traces
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTraces() {
        return traces.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTraces_JsonNullable() {
    return traces;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACES)
  public void setTraces_JsonNullable(JsonNullable<String> traces) {
    this.traces = traces;
  }

  public void setTraces(String traces) {
    this.traces = JsonNullable.<String>of(traces);
  }


  public TestResultApiResult failureType(String failureType) {
    this.failureType = JsonNullable.<String>of(failureType);
    return this;
  }

  /**
   * Get failureType
   * @return failureType
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getFailureType() {
        return failureType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFailureType_JsonNullable() {
    return failureType;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_TYPE)
  public void setFailureType_JsonNullable(JsonNullable<String> failureType) {
    this.failureType = failureType;
  }

  public void setFailureType(String failureType) {
    this.failureType = JsonNullable.<String>of(failureType);
  }


  public TestResultApiResult message(String message) {
    this.message = JsonNullable.<String>of(message);
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<String> message) {
    this.message = message;
  }

  public void setMessage(String message) {
    this.message = JsonNullable.<String>of(message);
  }


  public TestResultApiResult runByUserId(UUID runByUserId) {
    this.runByUserId = JsonNullable.<UUID>of(runByUserId);
    return this;
  }

  /**
   * Get runByUserId
   * @return runByUserId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getRunByUserId() {
        return runByUserId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getRunByUserId_JsonNullable() {
    return runByUserId;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_BY_USER_ID)
  public void setRunByUserId_JsonNullable(JsonNullable<UUID> runByUserId) {
    this.runByUserId = runByUserId;
  }

  public void setRunByUserId(UUID runByUserId) {
    this.runByUserId = JsonNullable.<UUID>of(runByUserId);
  }


  public TestResultApiResult stoppedByUserId(UUID stoppedByUserId) {
    this.stoppedByUserId = JsonNullable.<UUID>of(stoppedByUserId);
    return this;
  }

  /**
   * Get stoppedByUserId
   * @return stoppedByUserId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getStoppedByUserId() {
        return stoppedByUserId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STOPPED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getStoppedByUserId_JsonNullable() {
    return stoppedByUserId;
  }
  
  @JsonProperty(JSON_PROPERTY_STOPPED_BY_USER_ID)
  public void setStoppedByUserId_JsonNullable(JsonNullable<UUID> stoppedByUserId) {
    this.stoppedByUserId = stoppedByUserId;
  }

  public void setStoppedByUserId(UUID stoppedByUserId) {
    this.stoppedByUserId = JsonNullable.<UUID>of(stoppedByUserId);
  }


  public TestResultApiResult autoTestId(UUID autoTestId) {
    this.autoTestId = JsonNullable.<UUID>of(autoTestId);
    return this;
  }

  /**
   * Get autoTestId
   * @return autoTestId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getAutoTestId() {
        return autoTestId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAutoTestId_JsonNullable() {
    return autoTestId;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_ID)
  public void setAutoTestId_JsonNullable(JsonNullable<UUID> autoTestId) {
    this.autoTestId = autoTestId;
  }

  public void setAutoTestId(UUID autoTestId) {
    this.autoTestId = JsonNullable.<UUID>of(autoTestId);
  }


  public TestResultApiResult testPointId(UUID testPointId) {
    this.testPointId = JsonNullable.<UUID>of(testPointId);
    return this;
  }

  /**
   * Get testPointId
   * @return testPointId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTestPointId() {
        return testPointId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_POINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTestPointId_JsonNullable() {
    return testPointId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_POINT_ID)
  public void setTestPointId_JsonNullable(JsonNullable<UUID> testPointId) {
    this.testPointId = testPointId;
  }

  public void setTestPointId(UUID testPointId) {
    this.testPointId = JsonNullable.<UUID>of(testPointId);
  }


  public TestResultApiResult testPoint(TestPointShortApiResult testPoint) {
    this.testPoint = JsonNullable.<TestPointShortApiResult>of(testPoint);
    return this;
  }

  /**
   * Get testPoint
   * @return testPoint
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public TestPointShortApiResult getTestPoint() {
        return testPoint.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<TestPointShortApiResult> getTestPoint_JsonNullable() {
    return testPoint;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_POINT)
  public void setTestPoint_JsonNullable(JsonNullable<TestPointShortApiResult> testPoint) {
    this.testPoint = testPoint;
  }

  public void setTestPoint(TestPointShortApiResult testPoint) {
    this.testPoint = JsonNullable.<TestPointShortApiResult>of(testPoint);
  }


  public TestResultApiResult autoTest(AutoTestApiResult autoTest) {
    this.autoTest = JsonNullable.<AutoTestApiResult>of(autoTest);
    return this;
  }

  /**
   * Get autoTest
   * @return autoTest
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public AutoTestApiResult getAutoTest() {
        return autoTest.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<AutoTestApiResult> getAutoTest_JsonNullable() {
    return autoTest;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST)
  public void setAutoTest_JsonNullable(JsonNullable<AutoTestApiResult> autoTest) {
    this.autoTest = autoTest;
  }

  public void setAutoTest(AutoTestApiResult autoTest) {
    this.autoTest = JsonNullable.<AutoTestApiResult>of(autoTest);
  }


  public TestResultApiResult autoTestStepResults(List<AutoTestStepResultsApiResult> autoTestStepResults) {
    this.autoTestStepResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(autoTestStepResults);
    return this;
  }

  public TestResultApiResult addAutoTestStepResultsItem(AutoTestStepResultsApiResult autoTestStepResultsItem) {
    if (this.autoTestStepResults == null || !this.autoTestStepResults.isPresent()) {
      this.autoTestStepResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(new ArrayList<>());
    }
    try {
      this.autoTestStepResults.get().add(autoTestStepResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get autoTestStepResults
   * @return autoTestStepResults
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AutoTestStepResultsApiResult> getAutoTestStepResults() {
        return autoTestStepResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST_STEP_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepResultsApiResult>> getAutoTestStepResults_JsonNullable() {
    return autoTestStepResults;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_STEP_RESULTS)
  public void setAutoTestStepResults_JsonNullable(JsonNullable<List<AutoTestStepResultsApiResult>> autoTestStepResults) {
    this.autoTestStepResults = autoTestStepResults;
  }

  public void setAutoTestStepResults(List<AutoTestStepResultsApiResult> autoTestStepResults) {
    this.autoTestStepResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(autoTestStepResults);
  }


  public TestResultApiResult setupResults(List<AutoTestStepResultsApiResult> setupResults) {
    this.setupResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(setupResults);
    return this;
  }

  public TestResultApiResult addSetupResultsItem(AutoTestStepResultsApiResult setupResultsItem) {
    if (this.setupResults == null || !this.setupResults.isPresent()) {
      this.setupResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(new ArrayList<>());
    }
    try {
      this.setupResults.get().add(setupResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get setupResults
   * @return setupResults
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AutoTestStepResultsApiResult> getSetupResults() {
        return setupResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepResultsApiResult>> getSetupResults_JsonNullable() {
    return setupResults;
  }
  
  @JsonProperty(JSON_PROPERTY_SETUP_RESULTS)
  public void setSetupResults_JsonNullable(JsonNullable<List<AutoTestStepResultsApiResult>> setupResults) {
    this.setupResults = setupResults;
  }

  public void setSetupResults(List<AutoTestStepResultsApiResult> setupResults) {
    this.setupResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(setupResults);
  }


  public TestResultApiResult teardownResults(List<AutoTestStepResultsApiResult> teardownResults) {
    this.teardownResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(teardownResults);
    return this;
  }

  public TestResultApiResult addTeardownResultsItem(AutoTestStepResultsApiResult teardownResultsItem) {
    if (this.teardownResults == null || !this.teardownResults.isPresent()) {
      this.teardownResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(new ArrayList<>());
    }
    try {
      this.teardownResults.get().add(teardownResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get teardownResults
   * @return teardownResults
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AutoTestStepResultsApiResult> getTeardownResults() {
        return teardownResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEARDOWN_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AutoTestStepResultsApiResult>> getTeardownResults_JsonNullable() {
    return teardownResults;
  }
  
  @JsonProperty(JSON_PROPERTY_TEARDOWN_RESULTS)
  public void setTeardownResults_JsonNullable(JsonNullable<List<AutoTestStepResultsApiResult>> teardownResults) {
    this.teardownResults = teardownResults;
  }

  public void setTeardownResults(List<AutoTestStepResultsApiResult> teardownResults) {
    this.teardownResults = JsonNullable.<List<AutoTestStepResultsApiResult>>of(teardownResults);
  }


  public TestResultApiResult workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = JsonNullable.<UUID>of(workItemVersionId);
    return this;
  }

  /**
   * Get workItemVersionId
   * @return workItemVersionId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getWorkItemVersionId() {
        return workItemVersionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkItemVersionId_JsonNullable() {
    return workItemVersionId;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  public void setWorkItemVersionId_JsonNullable(JsonNullable<UUID> workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }

  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = JsonNullable.<UUID>of(workItemVersionId);
  }


  public TestResultApiResult workItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = JsonNullable.<Integer>of(workItemVersionNumber);
    return this;
  }

  /**
   * Get workItemVersionNumber
   * @return workItemVersionNumber
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getWorkItemVersionNumber() {
        return workItemVersionNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getWorkItemVersionNumber_JsonNullable() {
    return workItemVersionNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  public void setWorkItemVersionNumber_JsonNullable(JsonNullable<Integer> workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
  }

  public void setWorkItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = JsonNullable.<Integer>of(workItemVersionNumber);
  }


  public TestResultApiResult stepComments(List<StepCommentApiModel> stepComments) {
    this.stepComments = JsonNullable.<List<StepCommentApiModel>>of(stepComments);
    return this;
  }

  public TestResultApiResult addStepCommentsItem(StepCommentApiModel stepCommentsItem) {
    if (this.stepComments == null || !this.stepComments.isPresent()) {
      this.stepComments = JsonNullable.<List<StepCommentApiModel>>of(new ArrayList<>());
    }
    try {
      this.stepComments.get().add(stepCommentsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get stepComments
   * @return stepComments
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<StepCommentApiModel> getStepComments() {
        return stepComments.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STEP_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StepCommentApiModel>> getStepComments_JsonNullable() {
    return stepComments;
  }
  
  @JsonProperty(JSON_PROPERTY_STEP_COMMENTS)
  public void setStepComments_JsonNullable(JsonNullable<List<StepCommentApiModel>> stepComments) {
    this.stepComments = stepComments;
  }

  public void setStepComments(List<StepCommentApiModel> stepComments) {
    this.stepComments = JsonNullable.<List<StepCommentApiModel>>of(stepComments);
  }


  public TestResultApiResult parameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
    return this;
  }

  public TestResultApiResult putParametersItem(String key, String parametersItem) {
    if (this.parameters == null || !this.parameters.isPresent()) {
      this.parameters = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.parameters.get().put(key, parametersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getParameters() {
        return parameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getParameters_JsonNullable() {
    return parameters;
  }
  
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  public void setParameters_JsonNullable(JsonNullable<Map<String, String>> parameters) {
    this.parameters = parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
  }


  public TestResultApiResult properties(Map<String, String> properties) {
    this.properties = JsonNullable.<Map<String, String>>of(properties);
    return this;
  }

  public TestResultApiResult putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null || !this.properties.isPresent()) {
      this.properties = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.properties.get().put(key, propertiesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Get properties
   * @return properties
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getProperties() {
        return properties.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getProperties_JsonNullable() {
    return properties;
  }
  
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  public void setProperties_JsonNullable(JsonNullable<Map<String, String>> properties) {
    this.properties = properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = JsonNullable.<Map<String, String>>of(properties);
  }


  public TestResultApiResult modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Get modifiedDate
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public TestResultApiResult modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Get modifiedById
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  /**
   * Return true if this TestResultApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultApiResult testResultApiResult = (TestResultApiResult) o;
    return Objects.equals(this.id, testResultApiResult.id) &&
        Objects.equals(this.outcome, testResultApiResult.outcome) &&
        Objects.equals(this.testRunId, testResultApiResult.testRunId) &&
        Objects.equals(this.configurationId, testResultApiResult.configurationId) &&
        Objects.equals(this.status, testResultApiResult.status) &&
        Objects.equals(this.attachments, testResultApiResult.attachments) &&
        Objects.equals(this.links, testResultApiResult.links) &&
        Objects.equals(this.failureClasses, testResultApiResult.failureClasses) &&
        Objects.equals(this.createdDate, testResultApiResult.createdDate) &&
        Objects.equals(this.createdById, testResultApiResult.createdById) &&
        Objects.equals(this.isDeleted, testResultApiResult.isDeleted) &&
        equalsNullable(this.startedOn, testResultApiResult.startedOn) &&
        equalsNullable(this.completedOn, testResultApiResult.completedOn) &&
        equalsNullable(this.durationInMs, testResultApiResult.durationInMs) &&
        equalsNullable(this.traces, testResultApiResult.traces) &&
        equalsNullable(this.failureType, testResultApiResult.failureType) &&
        equalsNullable(this.message, testResultApiResult.message) &&
        equalsNullable(this.runByUserId, testResultApiResult.runByUserId) &&
        equalsNullable(this.stoppedByUserId, testResultApiResult.stoppedByUserId) &&
        equalsNullable(this.autoTestId, testResultApiResult.autoTestId) &&
        equalsNullable(this.testPointId, testResultApiResult.testPointId) &&
        equalsNullable(this.testPoint, testResultApiResult.testPoint) &&
        equalsNullable(this.autoTest, testResultApiResult.autoTest) &&
        equalsNullable(this.autoTestStepResults, testResultApiResult.autoTestStepResults) &&
        equalsNullable(this.setupResults, testResultApiResult.setupResults) &&
        equalsNullable(this.teardownResults, testResultApiResult.teardownResults) &&
        equalsNullable(this.workItemVersionId, testResultApiResult.workItemVersionId) &&
        equalsNullable(this.workItemVersionNumber, testResultApiResult.workItemVersionNumber) &&
        equalsNullable(this.stepComments, testResultApiResult.stepComments) &&
        equalsNullable(this.parameters, testResultApiResult.parameters) &&
        equalsNullable(this.properties, testResultApiResult.properties) &&
        equalsNullable(this.modifiedDate, testResultApiResult.modifiedDate) &&
        equalsNullable(this.modifiedById, testResultApiResult.modifiedById);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, outcome, testRunId, configurationId, status, attachments, links, failureClasses, createdDate, createdById, isDeleted, hashCodeNullable(startedOn), hashCodeNullable(completedOn), hashCodeNullable(durationInMs), hashCodeNullable(traces), hashCodeNullable(failureType), hashCodeNullable(message), hashCodeNullable(runByUserId), hashCodeNullable(stoppedByUserId), hashCodeNullable(autoTestId), hashCodeNullable(testPointId), hashCodeNullable(testPoint), hashCodeNullable(autoTest), hashCodeNullable(autoTestStepResults), hashCodeNullable(setupResults), hashCodeNullable(teardownResults), hashCodeNullable(workItemVersionId), hashCodeNullable(workItemVersionNumber), hashCodeNullable(stepComments), hashCodeNullable(parameters), hashCodeNullable(properties), hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultApiResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    failureClasses: ").append(toIndentedString(failureClasses)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    durationInMs: ").append(toIndentedString(durationInMs)).append("\n");
    sb.append("    traces: ").append(toIndentedString(traces)).append("\n");
    sb.append("    failureType: ").append(toIndentedString(failureType)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    runByUserId: ").append(toIndentedString(runByUserId)).append("\n");
    sb.append("    stoppedByUserId: ").append(toIndentedString(stoppedByUserId)).append("\n");
    sb.append("    autoTestId: ").append(toIndentedString(autoTestId)).append("\n");
    sb.append("    testPointId: ").append(toIndentedString(testPointId)).append("\n");
    sb.append("    testPoint: ").append(toIndentedString(testPoint)).append("\n");
    sb.append("    autoTest: ").append(toIndentedString(autoTest)).append("\n");
    sb.append("    autoTestStepResults: ").append(toIndentedString(autoTestStepResults)).append("\n");
    sb.append("    setupResults: ").append(toIndentedString(setupResults)).append("\n");
    sb.append("    teardownResults: ").append(toIndentedString(teardownResults)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    workItemVersionNumber: ").append(toIndentedString(workItemVersionNumber)).append("\n");
    sb.append("    stepComments: ").append(toIndentedString(stepComments)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

