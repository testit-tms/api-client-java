/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AttachmentModel;
import ru.testit.client.model.LinkModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestResultHistoryReportModel
 */
@JsonPropertyOrder({
  TestResultHistoryReportModel.JSON_PROPERTY_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_CREATED_DATE,
  TestResultHistoryReportModel.JSON_PROPERTY_MODIFIED_DATE,
  TestResultHistoryReportModel.JSON_PROPERTY_USER_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_TEST_RUN_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_TEST_RUN_NAME,
  TestResultHistoryReportModel.JSON_PROPERTY_CREATED_BY_USER_NAME,
  TestResultHistoryReportModel.JSON_PROPERTY_TEST_PLAN_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_TEST_PLAN_GLOBAL_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_TEST_PLAN_NAME,
  TestResultHistoryReportModel.JSON_PROPERTY_CONFIGURATION_NAME,
  TestResultHistoryReportModel.JSON_PROPERTY_IS_AUTOMATED,
  TestResultHistoryReportModel.JSON_PROPERTY_OUTCOME,
  TestResultHistoryReportModel.JSON_PROPERTY_COMMENT,
  TestResultHistoryReportModel.JSON_PROPERTY_LINKS,
  TestResultHistoryReportModel.JSON_PROPERTY_STARTED_ON,
  TestResultHistoryReportModel.JSON_PROPERTY_COMPLETED_ON,
  TestResultHistoryReportModel.JSON_PROPERTY_DURATION,
  TestResultHistoryReportModel.JSON_PROPERTY_CREATED_BY_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_MODIFIED_BY_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_ATTACHMENTS,
  TestResultHistoryReportModel.JSON_PROPERTY_WORK_ITEM_VERSION_ID,
  TestResultHistoryReportModel.JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER,
  TestResultHistoryReportModel.JSON_PROPERTY_LAUNCH_SOURCE,
  TestResultHistoryReportModel.JSON_PROPERTY_FAILURE_CLASS_IDS,
  TestResultHistoryReportModel.JSON_PROPERTY_PARAMETERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TestResultHistoryReportModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private OffsetDateTime modifiedDate;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  private UUID userId;

  public static final String JSON_PROPERTY_TEST_RUN_ID = "testRunId";
  private JsonNullable<UUID> testRunId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_RUN_NAME = "testRunName";
  private JsonNullable<String> testRunName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_USER_NAME = "createdByUserName";
  private JsonNullable<String> createdByUserName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_ID = "testPlanId";
  private JsonNullable<UUID> testPlanId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_GLOBAL_ID = "testPlanGlobalId";
  private JsonNullable<Long> testPlanGlobalId = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_NAME = "testPlanName";
  private JsonNullable<String> testPlanName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CONFIGURATION_NAME = "configurationName";
  private JsonNullable<String> configurationName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IS_AUTOMATED = "isAutomated";
  private Boolean isAutomated;

  public static final String JSON_PROPERTY_OUTCOME = "outcome";
  private JsonNullable<String> outcome = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private JsonNullable<String> comment = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<LinkModel>> links = JsonNullable.<List<LinkModel>>undefined();

  public static final String JSON_PROPERTY_STARTED_ON = "startedOn";
  private JsonNullable<OffsetDateTime> startedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_COMPLETED_ON = "completedOn";
  private JsonNullable<OffsetDateTime> completedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_DURATION = "duration";
  private JsonNullable<Long> duration = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private JsonNullable<List<AttachmentModel>> attachments = JsonNullable.<List<AttachmentModel>>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_ID = "workItemVersionId";
  private JsonNullable<UUID> workItemVersionId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER = "workItemVersionNumber";
  private JsonNullable<Integer> workItemVersionNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_LAUNCH_SOURCE = "launchSource";
  private JsonNullable<String> launchSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FAILURE_CLASS_IDS = "failureClassIds";
  private JsonNullable<List<UUID>> failureClassIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private JsonNullable<Map<String, String>> parameters = JsonNullable.<Map<String, String>>undefined();

  public TestResultHistoryReportModel() { 
  }

  public TestResultHistoryReportModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestResultHistoryReportModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public TestResultHistoryReportModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public TestResultHistoryReportModel userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * If test run was stopped, this property equals identifier of user who stopped it.Otherwise, the property equals identifier of user who created the test result
   * @return userId
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(UUID userId) {
    this.userId = userId;
  }


  public TestResultHistoryReportModel testRunId(UUID testRunId) {
    this.testRunId = JsonNullable.<UUID>of(testRunId);
    return this;
  }

   /**
   * Get testRunId
   * @return testRunId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTestRunId() {
        return testRunId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTestRunId_JsonNullable() {
    return testRunId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  public void setTestRunId_JsonNullable(JsonNullable<UUID> testRunId) {
    this.testRunId = testRunId;
  }

  public void setTestRunId(UUID testRunId) {
    this.testRunId = JsonNullable.<UUID>of(testRunId);
  }


  public TestResultHistoryReportModel testRunName(String testRunName) {
    this.testRunName = JsonNullable.<String>of(testRunName);
    return this;
  }

   /**
   * Get testRunName
   * @return testRunName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTestRunName() {
        return testRunName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RUN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTestRunName_JsonNullable() {
    return testRunName;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RUN_NAME)
  public void setTestRunName_JsonNullable(JsonNullable<String> testRunName) {
    this.testRunName = testRunName;
  }

  public void setTestRunName(String testRunName) {
    this.testRunName = JsonNullable.<String>of(testRunName);
  }


  public TestResultHistoryReportModel createdByUserName(String createdByUserName) {
    this.createdByUserName = JsonNullable.<String>of(createdByUserName);
    return this;
  }

   /**
   * Get createdByUserName
   * @return createdByUserName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getCreatedByUserName() {
        return createdByUserName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_BY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedByUserName_JsonNullable() {
    return createdByUserName;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_BY_USER_NAME)
  public void setCreatedByUserName_JsonNullable(JsonNullable<String> createdByUserName) {
    this.createdByUserName = createdByUserName;
  }

  public void setCreatedByUserName(String createdByUserName) {
    this.createdByUserName = JsonNullable.<String>of(createdByUserName);
  }


  public TestResultHistoryReportModel testPlanId(UUID testPlanId) {
    this.testPlanId = JsonNullable.<UUID>of(testPlanId);
    return this;
  }

   /**
   * Get testPlanId
   * @return testPlanId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTestPlanId() {
        return testPlanId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTestPlanId_JsonNullable() {
    return testPlanId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_ID)
  public void setTestPlanId_JsonNullable(JsonNullable<UUID> testPlanId) {
    this.testPlanId = testPlanId;
  }

  public void setTestPlanId(UUID testPlanId) {
    this.testPlanId = JsonNullable.<UUID>of(testPlanId);
  }


  public TestResultHistoryReportModel testPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = JsonNullable.<Long>of(testPlanGlobalId);
    return this;
  }

   /**
   * Get testPlanGlobalId
   * @return testPlanGlobalId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getTestPlanGlobalId() {
        return testPlanGlobalId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getTestPlanGlobalId_JsonNullable() {
    return testPlanGlobalId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_GLOBAL_ID)
  public void setTestPlanGlobalId_JsonNullable(JsonNullable<Long> testPlanGlobalId) {
    this.testPlanGlobalId = testPlanGlobalId;
  }

  public void setTestPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = JsonNullable.<Long>of(testPlanGlobalId);
  }


  public TestResultHistoryReportModel testPlanName(String testPlanName) {
    this.testPlanName = JsonNullable.<String>of(testPlanName);
    return this;
  }

   /**
   * Get testPlanName
   * @return testPlanName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getTestPlanName() {
        return testPlanName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTestPlanName_JsonNullable() {
    return testPlanName;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_NAME)
  public void setTestPlanName_JsonNullable(JsonNullable<String> testPlanName) {
    this.testPlanName = testPlanName;
  }

  public void setTestPlanName(String testPlanName) {
    this.testPlanName = JsonNullable.<String>of(testPlanName);
  }


  public TestResultHistoryReportModel configurationName(String configurationName) {
    this.configurationName = JsonNullable.<String>of(configurationName);
    return this;
  }

   /**
   * If test point related to the test result has configuration, this property will be equal to the test point configuration name. Otherwise, this property will be equal to the test result configuration name
   * @return configurationName
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getConfigurationName() {
        return configurationName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIGURATION_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getConfigurationName_JsonNullable() {
    return configurationName;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_NAME)
  public void setConfigurationName_JsonNullable(JsonNullable<String> configurationName) {
    this.configurationName = configurationName;
  }

  public void setConfigurationName(String configurationName) {
    this.configurationName = JsonNullable.<String>of(configurationName);
  }


  public TestResultHistoryReportModel isAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

   /**
   * Get isAutomated
   * @return isAutomated
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAutomated() {
    return isAutomated;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }


  public TestResultHistoryReportModel outcome(String outcome) {
    this.outcome = JsonNullable.<String>of(outcome);
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest and the run has an outcome, the outcome value equalsto the worst outcome of the last modified test result.Otherwise, the outcome equals to the outcome of first created test result in the test run
   * @return outcome
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getOutcome() {
        return outcome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOutcome_JsonNullable() {
    return outcome;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTCOME)
  public void setOutcome_JsonNullable(JsonNullable<String> outcome) {
    this.outcome = outcome;
  }

  public void setOutcome(String outcome) {
    this.outcome = JsonNullable.<String>of(outcome);
  }


  public TestResultHistoryReportModel comment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest, comment will have default valueOtherwise, the comment equals to the comment of first created test result in the test run
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getComment() {
        return comment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getComment_JsonNullable() {
    return comment;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMENT)
  public void setComment_JsonNullable(JsonNullable<String> comment) {
    this.comment = comment;
  }

  public void setComment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
  }


  public TestResultHistoryReportModel links(List<LinkModel> links) {
    this.links = JsonNullable.<List<LinkModel>>of(links);
    return this;
  }

  public TestResultHistoryReportModel addLinksItem(LinkModel linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<LinkModel>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest, link will be equal to the links of last modified test result.Otherwise, the links equals to the links of first created test result in the test run
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<LinkModel> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkModel>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<LinkModel>> links) {
    this.links = links;
  }

  public void setLinks(List<LinkModel> links) {
    this.links = JsonNullable.<List<LinkModel>>of(links);
  }


  public TestResultHistoryReportModel startedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
    return this;
  }

   /**
   * Get startedOn
   * @return startedOn
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getStartedOn() {
        return startedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartedOn_JsonNullable() {
    return startedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  public void setStartedOn_JsonNullable(JsonNullable<OffsetDateTime> startedOn) {
    this.startedOn = startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
  }


  public TestResultHistoryReportModel completedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
    return this;
  }

   /**
   * Get completedOn
   * @return completedOn
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getCompletedOn() {
        return completedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCompletedOn_JsonNullable() {
    return completedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  public void setCompletedOn_JsonNullable(JsonNullable<OffsetDateTime> completedOn) {
    this.completedOn = completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
  }


  public TestResultHistoryReportModel duration(Long duration) {
    this.duration = JsonNullable.<Long>of(duration);
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getDuration() {
        return duration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getDuration_JsonNullable() {
    return duration;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION)
  public void setDuration_JsonNullable(JsonNullable<Long> duration) {
    this.duration = duration;
  }

  public void setDuration(Long duration) {
    this.duration = JsonNullable.<Long>of(duration);
  }


  public TestResultHistoryReportModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public TestResultHistoryReportModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public TestResultHistoryReportModel attachments(List<AttachmentModel> attachments) {
    this.attachments = JsonNullable.<List<AttachmentModel>>of(attachments);
    return this;
  }

  public TestResultHistoryReportModel addAttachmentsItem(AttachmentModel attachmentsItem) {
    if (this.attachments == null || !this.attachments.isPresent()) {
      this.attachments = JsonNullable.<List<AttachmentModel>>of(new ArrayList<>());
    }
    try {
      this.attachments.get().add(attachmentsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest, attachments will be equal to the attachments of last modified test result.Otherwise, the attachments equals to the attachments of first created test result in the test run
   * @return attachments
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<AttachmentModel> getAttachments() {
        return attachments.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentModel>> getAttachments_JsonNullable() {
    return attachments;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  public void setAttachments_JsonNullable(JsonNullable<List<AttachmentModel>> attachments) {
    this.attachments = attachments;
  }

  public void setAttachments(List<AttachmentModel> attachments) {
    this.attachments = JsonNullable.<List<AttachmentModel>>of(attachments);
  }


  public TestResultHistoryReportModel workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = JsonNullable.<UUID>of(workItemVersionId);
    return this;
  }

   /**
   * Get workItemVersionId
   * @return workItemVersionId
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getWorkItemVersionId() {
        return workItemVersionId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkItemVersionId_JsonNullable() {
    return workItemVersionId;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  public void setWorkItemVersionId_JsonNullable(JsonNullable<UUID> workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }

  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = JsonNullable.<UUID>of(workItemVersionId);
  }


  public TestResultHistoryReportModel workItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = JsonNullable.<Integer>of(workItemVersionNumber);
    return this;
  }

   /**
   * Get workItemVersionNumber
   * @return workItemVersionNumber
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Integer getWorkItemVersionNumber() {
        return workItemVersionNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getWorkItemVersionNumber_JsonNullable() {
    return workItemVersionNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  public void setWorkItemVersionNumber_JsonNullable(JsonNullable<Integer> workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
  }

  public void setWorkItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = JsonNullable.<Integer>of(workItemVersionNumber);
  }


  public TestResultHistoryReportModel launchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
    return this;
  }

   /**
   * Get launchSource
   * @return launchSource
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getLaunchSource() {
        return launchSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLaunchSource_JsonNullable() {
    return launchSource;
  }
  
  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  public void setLaunchSource_JsonNullable(JsonNullable<String> launchSource) {
    this.launchSource = launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
  }


  public TestResultHistoryReportModel failureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = JsonNullable.<List<UUID>>of(failureClassIds);
    return this;
  }

  public TestResultHistoryReportModel addFailureClassIdsItem(UUID failureClassIdsItem) {
    if (this.failureClassIds == null || !this.failureClassIds.isPresent()) {
      this.failureClassIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.failureClassIds.get().add(failureClassIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get failureClassIds
   * @return failureClassIds
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<UUID> getFailureClassIds() {
        return failureClassIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getFailureClassIds_JsonNullable() {
    return failureClassIds;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_IDS)
  public void setFailureClassIds_JsonNullable(JsonNullable<List<UUID>> failureClassIds) {
    this.failureClassIds = failureClassIds;
  }

  public void setFailureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = JsonNullable.<List<UUID>>of(failureClassIds);
  }


  public TestResultHistoryReportModel parameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
    return this;
  }

  public TestResultHistoryReportModel putParametersItem(String key, String parametersItem) {
    if (this.parameters == null || !this.parameters.isPresent()) {
      this.parameters = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.parameters.get().put(key, parametersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getParameters() {
        return parameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getParameters_JsonNullable() {
    return parameters;
  }
  
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  public void setParameters_JsonNullable(JsonNullable<Map<String, String>> parameters) {
    this.parameters = parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
  }


  /**
   * Return true if this TestResultHistoryReportModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultHistoryReportModel testResultHistoryReportModel = (TestResultHistoryReportModel) o;
    return Objects.equals(this.id, testResultHistoryReportModel.id) &&
        Objects.equals(this.createdDate, testResultHistoryReportModel.createdDate) &&
        Objects.equals(this.modifiedDate, testResultHistoryReportModel.modifiedDate) &&
        Objects.equals(this.userId, testResultHistoryReportModel.userId) &&
        equalsNullable(this.testRunId, testResultHistoryReportModel.testRunId) &&
        equalsNullable(this.testRunName, testResultHistoryReportModel.testRunName) &&
        equalsNullable(this.createdByUserName, testResultHistoryReportModel.createdByUserName) &&
        equalsNullable(this.testPlanId, testResultHistoryReportModel.testPlanId) &&
        equalsNullable(this.testPlanGlobalId, testResultHistoryReportModel.testPlanGlobalId) &&
        equalsNullable(this.testPlanName, testResultHistoryReportModel.testPlanName) &&
        equalsNullable(this.configurationName, testResultHistoryReportModel.configurationName) &&
        Objects.equals(this.isAutomated, testResultHistoryReportModel.isAutomated) &&
        equalsNullable(this.outcome, testResultHistoryReportModel.outcome) &&
        equalsNullable(this.comment, testResultHistoryReportModel.comment) &&
        equalsNullable(this.links, testResultHistoryReportModel.links) &&
        equalsNullable(this.startedOn, testResultHistoryReportModel.startedOn) &&
        equalsNullable(this.completedOn, testResultHistoryReportModel.completedOn) &&
        equalsNullable(this.duration, testResultHistoryReportModel.duration) &&
        Objects.equals(this.createdById, testResultHistoryReportModel.createdById) &&
        equalsNullable(this.modifiedById, testResultHistoryReportModel.modifiedById) &&
        equalsNullable(this.attachments, testResultHistoryReportModel.attachments) &&
        equalsNullable(this.workItemVersionId, testResultHistoryReportModel.workItemVersionId) &&
        equalsNullable(this.workItemVersionNumber, testResultHistoryReportModel.workItemVersionNumber) &&
        equalsNullable(this.launchSource, testResultHistoryReportModel.launchSource) &&
        equalsNullable(this.failureClassIds, testResultHistoryReportModel.failureClassIds) &&
        equalsNullable(this.parameters, testResultHistoryReportModel.parameters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, modifiedDate, userId, hashCodeNullable(testRunId), hashCodeNullable(testRunName), hashCodeNullable(createdByUserName), hashCodeNullable(testPlanId), hashCodeNullable(testPlanGlobalId), hashCodeNullable(testPlanName), hashCodeNullable(configurationName), isAutomated, hashCodeNullable(outcome), hashCodeNullable(comment), hashCodeNullable(links), hashCodeNullable(startedOn), hashCodeNullable(completedOn), hashCodeNullable(duration), createdById, hashCodeNullable(modifiedById), hashCodeNullable(attachments), hashCodeNullable(workItemVersionId), hashCodeNullable(workItemVersionNumber), hashCodeNullable(launchSource), hashCodeNullable(failureClassIds), hashCodeNullable(parameters));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultHistoryReportModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    testRunName: ").append(toIndentedString(testRunName)).append("\n");
    sb.append("    createdByUserName: ").append(toIndentedString(createdByUserName)).append("\n");
    sb.append("    testPlanId: ").append(toIndentedString(testPlanId)).append("\n");
    sb.append("    testPlanGlobalId: ").append(toIndentedString(testPlanGlobalId)).append("\n");
    sb.append("    testPlanName: ").append(toIndentedString(testPlanName)).append("\n");
    sb.append("    configurationName: ").append(toIndentedString(configurationName)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    workItemVersionNumber: ").append(toIndentedString(workItemVersionNumber)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("    failureClassIds: ").append(toIndentedString(failureClassIds)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

