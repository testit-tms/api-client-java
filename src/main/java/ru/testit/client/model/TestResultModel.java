/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AttachmentModel;
import ru.testit.client.model.AttachmentModelAutoTestStepResultsModel;
import ru.testit.client.model.AutoTestModel;
import ru.testit.client.model.LinkModel;
import ru.testit.client.model.StepCommentModel;
import ru.testit.client.model.StepResultModel;
import ru.testit.client.model.TestPointPutModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestResultModel
 */
@JsonPropertyOrder({
  TestResultModel.JSON_PROPERTY_AUTO_TEST_ID,
  TestResultModel.JSON_PROPERTY_CONFIGURATION_ID,
  TestResultModel.JSON_PROPERTY_STARTED_ON,
  TestResultModel.JSON_PROPERTY_COMPLETED_ON,
  TestResultModel.JSON_PROPERTY_DURATION_IN_MS,
  TestResultModel.JSON_PROPERTY_TRACES,
  TestResultModel.JSON_PROPERTY_FAILURE_TYPE,
  TestResultModel.JSON_PROPERTY_MESSAGE,
  TestResultModel.JSON_PROPERTY_RUN_BY_USER_ID,
  TestResultModel.JSON_PROPERTY_STOPPED_BY_USER_ID,
  TestResultModel.JSON_PROPERTY_TEST_POINT_ID,
  TestResultModel.JSON_PROPERTY_TEST_RUN_ID,
  TestResultModel.JSON_PROPERTY_TEST_POINT,
  TestResultModel.JSON_PROPERTY_AUTO_TEST,
  TestResultModel.JSON_PROPERTY_AUTO_TEST_STEP_RESULTS,
  TestResultModel.JSON_PROPERTY_SETUP_RESULTS,
  TestResultModel.JSON_PROPERTY_TEARDOWN_RESULTS,
  TestResultModel.JSON_PROPERTY_WORK_ITEM_VERSION_ID,
  TestResultModel.JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER,
  TestResultModel.JSON_PROPERTY_PARAMETERS,
  TestResultModel.JSON_PROPERTY_PROPERTIES,
  TestResultModel.JSON_PROPERTY_ID,
  TestResultModel.JSON_PROPERTY_CREATED_DATE,
  TestResultModel.JSON_PROPERTY_MODIFIED_DATE,
  TestResultModel.JSON_PROPERTY_CREATED_BY_ID,
  TestResultModel.JSON_PROPERTY_MODIFIED_BY_ID,
  TestResultModel.JSON_PROPERTY_STEP_COMMENTS,
  TestResultModel.JSON_PROPERTY_FAILURE_CLASS_IDS,
  TestResultModel.JSON_PROPERTY_OUTCOME,
  TestResultModel.JSON_PROPERTY_COMMENT,
  TestResultModel.JSON_PROPERTY_LINKS,
  TestResultModel.JSON_PROPERTY_STEP_RESULTS,
  TestResultModel.JSON_PROPERTY_ATTACHMENTS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TestResultModel {
  public static final String JSON_PROPERTY_AUTO_TEST_ID = "autoTestId";
  private JsonNullable<UUID> autoTestId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_CONFIGURATION_ID = "configurationId";
  private UUID configurationId;

  public static final String JSON_PROPERTY_STARTED_ON = "startedOn";
  private JsonNullable<OffsetDateTime> startedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_COMPLETED_ON = "completedOn";
  private JsonNullable<OffsetDateTime> completedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_DURATION_IN_MS = "durationInMs";
  private JsonNullable<Long> durationInMs = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_TRACES = "traces";
  private JsonNullable<String> traces = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_FAILURE_TYPE = "failureType";
  private JsonNullable<String> failureType = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private JsonNullable<String> message = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_RUN_BY_USER_ID = "runByUserId";
  private JsonNullable<UUID> runByUserId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_STOPPED_BY_USER_ID = "stoppedByUserId";
  private JsonNullable<UUID> stoppedByUserId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_POINT_ID = "testPointId";
  private UUID testPointId;

  public static final String JSON_PROPERTY_TEST_RUN_ID = "testRunId";
  private UUID testRunId;

  public static final String JSON_PROPERTY_TEST_POINT = "testPoint";
  private TestPointPutModel testPoint;

  public static final String JSON_PROPERTY_AUTO_TEST = "autoTest";
  private AutoTestModel autoTest;

  public static final String JSON_PROPERTY_AUTO_TEST_STEP_RESULTS = "autoTestStepResults";
  private JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> autoTestStepResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>undefined();

  public static final String JSON_PROPERTY_SETUP_RESULTS = "setupResults";
  private JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> setupResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>undefined();

  public static final String JSON_PROPERTY_TEARDOWN_RESULTS = "teardownResults";
  private JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> teardownResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_ID = "workItemVersionId";
  private UUID workItemVersionId;

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER = "workItemVersionNumber";
  private JsonNullable<Integer> workItemVersionNumber = JsonNullable.<Integer>undefined();

  public static final String JSON_PROPERTY_PARAMETERS = "parameters";
  private JsonNullable<Map<String, String>> parameters = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_PROPERTIES = "properties";
  private JsonNullable<Map<String, String>> properties = JsonNullable.<Map<String, String>>undefined();

  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private JsonNullable<OffsetDateTime> createdDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_STEP_COMMENTS = "stepComments";
  private JsonNullable<List<StepCommentModel>> stepComments = JsonNullable.<List<StepCommentModel>>undefined();

  public static final String JSON_PROPERTY_FAILURE_CLASS_IDS = "failureClassIds";
  private JsonNullable<List<UUID>> failureClassIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_OUTCOME = "outcome";
  private JsonNullable<String> outcome = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private JsonNullable<String> comment = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<List<LinkModel>> links = JsonNullable.<List<LinkModel>>undefined();

  public static final String JSON_PROPERTY_STEP_RESULTS = "stepResults";
  private JsonNullable<List<StepResultModel>> stepResults = JsonNullable.<List<StepResultModel>>undefined();

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private JsonNullable<List<AttachmentModel>> attachments = JsonNullable.<List<AttachmentModel>>undefined();

  public TestResultModel() { 
  }

  public TestResultModel autoTestId(UUID autoTestId) {
    this.autoTestId = JsonNullable.<UUID>of(autoTestId);
    return this;
  }

   /**
   * Get autoTestId
   * @return autoTestId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UUID getAutoTestId() {
        return autoTestId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getAutoTestId_JsonNullable() {
    return autoTestId;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_ID)
  public void setAutoTestId_JsonNullable(JsonNullable<UUID> autoTestId) {
    this.autoTestId = autoTestId;
  }

  public void setAutoTestId(UUID autoTestId) {
    this.autoTestId = JsonNullable.<UUID>of(autoTestId);
  }


  public TestResultModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Get configurationId
   * @return configurationId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getConfigurationId() {
    return configurationId;
  }


  @JsonProperty(JSON_PROPERTY_CONFIGURATION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }


  public TestResultModel startedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
    return this;
  }

   /**
   * Get startedOn
   * @return startedOn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getStartedOn() {
        return startedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartedOn_JsonNullable() {
    return startedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  public void setStartedOn_JsonNullable(JsonNullable<OffsetDateTime> startedOn) {
    this.startedOn = startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
  }


  public TestResultModel completedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
    return this;
  }

   /**
   * Get completedOn
   * @return completedOn
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getCompletedOn() {
        return completedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCompletedOn_JsonNullable() {
    return completedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  public void setCompletedOn_JsonNullable(JsonNullable<OffsetDateTime> completedOn) {
    this.completedOn = completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
  }


  public TestResultModel durationInMs(Long durationInMs) {
    this.durationInMs = JsonNullable.<Long>of(durationInMs);
    return this;
  }

   /**
   * Get durationInMs
   * @return durationInMs
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Long getDurationInMs() {
        return durationInMs.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION_IN_MS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getDurationInMs_JsonNullable() {
    return durationInMs;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION_IN_MS)
  public void setDurationInMs_JsonNullable(JsonNullable<Long> durationInMs) {
    this.durationInMs = durationInMs;
  }

  public void setDurationInMs(Long durationInMs) {
    this.durationInMs = JsonNullable.<Long>of(durationInMs);
  }


  public TestResultModel traces(String traces) {
    this.traces = JsonNullable.<String>of(traces);
    return this;
  }

   /**
   * Get traces
   * @return traces
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getTraces() {
        return traces.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TRACES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getTraces_JsonNullable() {
    return traces;
  }
  
  @JsonProperty(JSON_PROPERTY_TRACES)
  public void setTraces_JsonNullable(JsonNullable<String> traces) {
    this.traces = traces;
  }

  public void setTraces(String traces) {
    this.traces = JsonNullable.<String>of(traces);
  }


  public TestResultModel failureType(String failureType) {
    this.failureType = JsonNullable.<String>of(failureType);
    return this;
  }

   /**
   * Get failureType
   * @return failureType
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getFailureType() {
        return failureType.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getFailureType_JsonNullable() {
    return failureType;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_TYPE)
  public void setFailureType_JsonNullable(JsonNullable<String> failureType) {
    this.failureType = failureType;
  }

  public void setFailureType(String failureType) {
    this.failureType = JsonNullable.<String>of(failureType);
  }


  public TestResultModel message(String message) {
    this.message = JsonNullable.<String>of(message);
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getMessage() {
        return message.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getMessage_JsonNullable() {
    return message;
  }
  
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  public void setMessage_JsonNullable(JsonNullable<String> message) {
    this.message = message;
  }

  public void setMessage(String message) {
    this.message = JsonNullable.<String>of(message);
  }


  public TestResultModel runByUserId(UUID runByUserId) {
    this.runByUserId = JsonNullable.<UUID>of(runByUserId);
    return this;
  }

   /**
   * Get runByUserId
   * @return runByUserId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UUID getRunByUserId() {
        return runByUserId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RUN_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getRunByUserId_JsonNullable() {
    return runByUserId;
  }
  
  @JsonProperty(JSON_PROPERTY_RUN_BY_USER_ID)
  public void setRunByUserId_JsonNullable(JsonNullable<UUID> runByUserId) {
    this.runByUserId = runByUserId;
  }

  public void setRunByUserId(UUID runByUserId) {
    this.runByUserId = JsonNullable.<UUID>of(runByUserId);
  }


  public TestResultModel stoppedByUserId(UUID stoppedByUserId) {
    this.stoppedByUserId = JsonNullable.<UUID>of(stoppedByUserId);
    return this;
  }

   /**
   * Get stoppedByUserId
   * @return stoppedByUserId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UUID getStoppedByUserId() {
        return stoppedByUserId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STOPPED_BY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getStoppedByUserId_JsonNullable() {
    return stoppedByUserId;
  }
  
  @JsonProperty(JSON_PROPERTY_STOPPED_BY_USER_ID)
  public void setStoppedByUserId_JsonNullable(JsonNullable<UUID> stoppedByUserId) {
    this.stoppedByUserId = stoppedByUserId;
  }

  public void setStoppedByUserId(UUID stoppedByUserId) {
    this.stoppedByUserId = JsonNullable.<UUID>of(stoppedByUserId);
  }


  public TestResultModel testPointId(UUID testPointId) {
    this.testPointId = testPointId;
    return this;
  }

   /**
   * Get testPointId
   * @return testPointId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEST_POINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTestPointId() {
    return testPointId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_POINT_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestPointId(UUID testPointId) {
    this.testPointId = testPointId;
  }


  public TestResultModel testRunId(UUID testRunId) {
    this.testRunId = testRunId;
    return this;
  }

   /**
   * Get testRunId
   * @return testRunId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getTestRunId() {
    return testRunId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_RUN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestRunId(UUID testRunId) {
    this.testRunId = testRunId;
  }


  public TestResultModel testPoint(TestPointPutModel testPoint) {
    this.testPoint = testPoint;
    return this;
  }

   /**
   * Get testPoint
   * @return testPoint
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TEST_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TestPointPutModel getTestPoint() {
    return testPoint;
  }


  @JsonProperty(JSON_PROPERTY_TEST_POINT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestPoint(TestPointPutModel testPoint) {
    this.testPoint = testPoint;
  }


  public TestResultModel autoTest(AutoTestModel autoTest) {
    this.autoTest = autoTest;
    return this;
  }

   /**
   * Get autoTest
   * @return autoTest
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AUTO_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public AutoTestModel getAutoTest() {
    return autoTest;
  }


  @JsonProperty(JSON_PROPERTY_AUTO_TEST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAutoTest(AutoTestModel autoTest) {
    this.autoTest = autoTest;
  }


  public TestResultModel autoTestStepResults(List<AttachmentModelAutoTestStepResultsModel> autoTestStepResults) {
    this.autoTestStepResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(autoTestStepResults);
    return this;
  }

  public TestResultModel addAutoTestStepResultsItem(AttachmentModelAutoTestStepResultsModel autoTestStepResultsItem) {
    if (this.autoTestStepResults == null || !this.autoTestStepResults.isPresent()) {
      this.autoTestStepResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(new ArrayList<>());
    }
    try {
      this.autoTestStepResults.get().add(autoTestStepResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get autoTestStepResults
   * @return autoTestStepResults
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AttachmentModelAutoTestStepResultsModel> getAutoTestStepResults() {
        return autoTestStepResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST_STEP_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> getAutoTestStepResults_JsonNullable() {
    return autoTestStepResults;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_STEP_RESULTS)
  public void setAutoTestStepResults_JsonNullable(JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> autoTestStepResults) {
    this.autoTestStepResults = autoTestStepResults;
  }

  public void setAutoTestStepResults(List<AttachmentModelAutoTestStepResultsModel> autoTestStepResults) {
    this.autoTestStepResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(autoTestStepResults);
  }


  public TestResultModel setupResults(List<AttachmentModelAutoTestStepResultsModel> setupResults) {
    this.setupResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(setupResults);
    return this;
  }

  public TestResultModel addSetupResultsItem(AttachmentModelAutoTestStepResultsModel setupResultsItem) {
    if (this.setupResults == null || !this.setupResults.isPresent()) {
      this.setupResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(new ArrayList<>());
    }
    try {
      this.setupResults.get().add(setupResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get setupResults
   * @return setupResults
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AttachmentModelAutoTestStepResultsModel> getSetupResults() {
        return setupResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SETUP_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> getSetupResults_JsonNullable() {
    return setupResults;
  }
  
  @JsonProperty(JSON_PROPERTY_SETUP_RESULTS)
  public void setSetupResults_JsonNullable(JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> setupResults) {
    this.setupResults = setupResults;
  }

  public void setSetupResults(List<AttachmentModelAutoTestStepResultsModel> setupResults) {
    this.setupResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(setupResults);
  }


  public TestResultModel teardownResults(List<AttachmentModelAutoTestStepResultsModel> teardownResults) {
    this.teardownResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(teardownResults);
    return this;
  }

  public TestResultModel addTeardownResultsItem(AttachmentModelAutoTestStepResultsModel teardownResultsItem) {
    if (this.teardownResults == null || !this.teardownResults.isPresent()) {
      this.teardownResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(new ArrayList<>());
    }
    try {
      this.teardownResults.get().add(teardownResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get teardownResults
   * @return teardownResults
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AttachmentModelAutoTestStepResultsModel> getTeardownResults() {
        return teardownResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEARDOWN_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> getTeardownResults_JsonNullable() {
    return teardownResults;
  }
  
  @JsonProperty(JSON_PROPERTY_TEARDOWN_RESULTS)
  public void setTeardownResults_JsonNullable(JsonNullable<List<AttachmentModelAutoTestStepResultsModel>> teardownResults) {
    this.teardownResults = teardownResults;
  }

  public void setTeardownResults(List<AttachmentModelAutoTestStepResultsModel> teardownResults) {
    this.teardownResults = JsonNullable.<List<AttachmentModelAutoTestStepResultsModel>>of(teardownResults);
  }


  public TestResultModel workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
    return this;
  }

   /**
   * Get workItemVersionId
   * @return workItemVersionId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getWorkItemVersionId() {
    return workItemVersionId;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }


  public TestResultModel workItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = JsonNullable.<Integer>of(workItemVersionNumber);
    return this;
  }

   /**
   * Get workItemVersionNumber
   * @return workItemVersionNumber
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Integer getWorkItemVersionNumber() {
        return workItemVersionNumber.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Integer> getWorkItemVersionNumber_JsonNullable() {
    return workItemVersionNumber;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_NUMBER)
  public void setWorkItemVersionNumber_JsonNullable(JsonNullable<Integer> workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
  }

  public void setWorkItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = JsonNullable.<Integer>of(workItemVersionNumber);
  }


  public TestResultModel parameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
    return this;
  }

  public TestResultModel putParametersItem(String key, String parametersItem) {
    if (this.parameters == null || !this.parameters.isPresent()) {
      this.parameters = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.parameters.get().put(key, parametersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Map<String, String> getParameters() {
        return parameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getParameters_JsonNullable() {
    return parameters;
  }
  
  @JsonProperty(JSON_PROPERTY_PARAMETERS)
  public void setParameters_JsonNullable(JsonNullable<Map<String, String>> parameters) {
    this.parameters = parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = JsonNullable.<Map<String, String>>of(parameters);
  }


  public TestResultModel properties(Map<String, String> properties) {
    this.properties = JsonNullable.<Map<String, String>>of(properties);
    return this;
  }

  public TestResultModel putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null || !this.properties.isPresent()) {
      this.properties = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.properties.get().put(key, propertiesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Map<String, String> getProperties() {
        return properties.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getProperties_JsonNullable() {
    return properties;
  }
  
  @JsonProperty(JSON_PROPERTY_PROPERTIES)
  public void setProperties_JsonNullable(JsonNullable<Map<String, String>> properties) {
    this.properties = properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = JsonNullable.<Map<String, String>>of(properties);
  }


  public TestResultModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestResultModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = JsonNullable.<OffsetDateTime>of(createdDate);
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getCreatedDate() {
        return createdDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreatedDate_JsonNullable() {
    return createdDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  public void setCreatedDate_JsonNullable(JsonNullable<OffsetDateTime> createdDate) {
    this.createdDate = createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = JsonNullable.<OffsetDateTime>of(createdDate);
  }


  public TestResultModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public TestResultModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public TestResultModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public TestResultModel stepComments(List<StepCommentModel> stepComments) {
    this.stepComments = JsonNullable.<List<StepCommentModel>>of(stepComments);
    return this;
  }

  public TestResultModel addStepCommentsItem(StepCommentModel stepCommentsItem) {
    if (this.stepComments == null || !this.stepComments.isPresent()) {
      this.stepComments = JsonNullable.<List<StepCommentModel>>of(new ArrayList<>());
    }
    try {
      this.stepComments.get().add(stepCommentsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get stepComments
   * @return stepComments
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<StepCommentModel> getStepComments() {
        return stepComments.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STEP_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StepCommentModel>> getStepComments_JsonNullable() {
    return stepComments;
  }
  
  @JsonProperty(JSON_PROPERTY_STEP_COMMENTS)
  public void setStepComments_JsonNullable(JsonNullable<List<StepCommentModel>> stepComments) {
    this.stepComments = stepComments;
  }

  public void setStepComments(List<StepCommentModel> stepComments) {
    this.stepComments = JsonNullable.<List<StepCommentModel>>of(stepComments);
  }


  public TestResultModel failureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = JsonNullable.<List<UUID>>of(failureClassIds);
    return this;
  }

  public TestResultModel addFailureClassIdsItem(UUID failureClassIdsItem) {
    if (this.failureClassIds == null || !this.failureClassIds.isPresent()) {
      this.failureClassIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.failureClassIds.get().add(failureClassIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get failureClassIds
   * @return failureClassIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<UUID> getFailureClassIds() {
        return failureClassIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getFailureClassIds_JsonNullable() {
    return failureClassIds;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_IDS)
  public void setFailureClassIds_JsonNullable(JsonNullable<List<UUID>> failureClassIds) {
    this.failureClassIds = failureClassIds;
  }

  public void setFailureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = JsonNullable.<List<UUID>>of(failureClassIds);
  }


  public TestResultModel outcome(String outcome) {
    this.outcome = JsonNullable.<String>of(outcome);
    return this;
  }

   /**
   * Get outcome
   * @return outcome
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getOutcome() {
        return outcome.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTCOME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getOutcome_JsonNullable() {
    return outcome;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTCOME)
  public void setOutcome_JsonNullable(JsonNullable<String> outcome) {
    this.outcome = outcome;
  }

  public void setOutcome(String outcome) {
    this.outcome = JsonNullable.<String>of(outcome);
  }


  public TestResultModel comment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getComment() {
        return comment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getComment_JsonNullable() {
    return comment;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMENT)
  public void setComment_JsonNullable(JsonNullable<String> comment) {
    this.comment = comment;
  }

  public void setComment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
  }


  public TestResultModel links(List<LinkModel> links) {
    this.links = JsonNullable.<List<LinkModel>>of(links);
    return this;
  }

  public TestResultModel addLinksItem(LinkModel linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<List<LinkModel>>of(new ArrayList<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<LinkModel> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<LinkModel>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<List<LinkModel>> links) {
    this.links = links;
  }

  public void setLinks(List<LinkModel> links) {
    this.links = JsonNullable.<List<LinkModel>>of(links);
  }


  public TestResultModel stepResults(List<StepResultModel> stepResults) {
    this.stepResults = JsonNullable.<List<StepResultModel>>of(stepResults);
    return this;
  }

  public TestResultModel addStepResultsItem(StepResultModel stepResultsItem) {
    if (this.stepResults == null || !this.stepResults.isPresent()) {
      this.stepResults = JsonNullable.<List<StepResultModel>>of(new ArrayList<>());
    }
    try {
      this.stepResults.get().add(stepResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get stepResults
   * @return stepResults
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<StepResultModel> getStepResults() {
        return stepResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STEP_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<StepResultModel>> getStepResults_JsonNullable() {
    return stepResults;
  }
  
  @JsonProperty(JSON_PROPERTY_STEP_RESULTS)
  public void setStepResults_JsonNullable(JsonNullable<List<StepResultModel>> stepResults) {
    this.stepResults = stepResults;
  }

  public void setStepResults(List<StepResultModel> stepResults) {
    this.stepResults = JsonNullable.<List<StepResultModel>>of(stepResults);
  }


  public TestResultModel attachments(List<AttachmentModel> attachments) {
    this.attachments = JsonNullable.<List<AttachmentModel>>of(attachments);
    return this;
  }

  public TestResultModel addAttachmentsItem(AttachmentModel attachmentsItem) {
    if (this.attachments == null || !this.attachments.isPresent()) {
      this.attachments = JsonNullable.<List<AttachmentModel>>of(new ArrayList<>());
    }
    try {
      this.attachments.get().add(attachmentsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public List<AttachmentModel> getAttachments() {
        return attachments.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<AttachmentModel>> getAttachments_JsonNullable() {
    return attachments;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  public void setAttachments_JsonNullable(JsonNullable<List<AttachmentModel>> attachments) {
    this.attachments = attachments;
  }

  public void setAttachments(List<AttachmentModel> attachments) {
    this.attachments = JsonNullable.<List<AttachmentModel>>of(attachments);
  }


  /**
   * Return true if this TestResultModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultModel testResultModel = (TestResultModel) o;
    return equalsNullable(this.autoTestId, testResultModel.autoTestId) &&
        Objects.equals(this.configurationId, testResultModel.configurationId) &&
        equalsNullable(this.startedOn, testResultModel.startedOn) &&
        equalsNullable(this.completedOn, testResultModel.completedOn) &&
        equalsNullable(this.durationInMs, testResultModel.durationInMs) &&
        equalsNullable(this.traces, testResultModel.traces) &&
        equalsNullable(this.failureType, testResultModel.failureType) &&
        equalsNullable(this.message, testResultModel.message) &&
        equalsNullable(this.runByUserId, testResultModel.runByUserId) &&
        equalsNullable(this.stoppedByUserId, testResultModel.stoppedByUserId) &&
        Objects.equals(this.testPointId, testResultModel.testPointId) &&
        Objects.equals(this.testRunId, testResultModel.testRunId) &&
        Objects.equals(this.testPoint, testResultModel.testPoint) &&
        Objects.equals(this.autoTest, testResultModel.autoTest) &&
        equalsNullable(this.autoTestStepResults, testResultModel.autoTestStepResults) &&
        equalsNullable(this.setupResults, testResultModel.setupResults) &&
        equalsNullable(this.teardownResults, testResultModel.teardownResults) &&
        Objects.equals(this.workItemVersionId, testResultModel.workItemVersionId) &&
        equalsNullable(this.workItemVersionNumber, testResultModel.workItemVersionNumber) &&
        equalsNullable(this.parameters, testResultModel.parameters) &&
        equalsNullable(this.properties, testResultModel.properties) &&
        Objects.equals(this.id, testResultModel.id) &&
        equalsNullable(this.createdDate, testResultModel.createdDate) &&
        equalsNullable(this.modifiedDate, testResultModel.modifiedDate) &&
        Objects.equals(this.createdById, testResultModel.createdById) &&
        equalsNullable(this.modifiedById, testResultModel.modifiedById) &&
        equalsNullable(this.stepComments, testResultModel.stepComments) &&
        equalsNullable(this.failureClassIds, testResultModel.failureClassIds) &&
        equalsNullable(this.outcome, testResultModel.outcome) &&
        equalsNullable(this.comment, testResultModel.comment) &&
        equalsNullable(this.links, testResultModel.links) &&
        equalsNullable(this.stepResults, testResultModel.stepResults) &&
        equalsNullable(this.attachments, testResultModel.attachments);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(autoTestId), configurationId, hashCodeNullable(startedOn), hashCodeNullable(completedOn), hashCodeNullable(durationInMs), hashCodeNullable(traces), hashCodeNullable(failureType), hashCodeNullable(message), hashCodeNullable(runByUserId), hashCodeNullable(stoppedByUserId), testPointId, testRunId, testPoint, autoTest, hashCodeNullable(autoTestStepResults), hashCodeNullable(setupResults), hashCodeNullable(teardownResults), workItemVersionId, hashCodeNullable(workItemVersionNumber), hashCodeNullable(parameters), hashCodeNullable(properties), id, hashCodeNullable(createdDate), hashCodeNullable(modifiedDate), createdById, hashCodeNullable(modifiedById), hashCodeNullable(stepComments), hashCodeNullable(failureClassIds), hashCodeNullable(outcome), hashCodeNullable(comment), hashCodeNullable(links), hashCodeNullable(stepResults), hashCodeNullable(attachments));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultModel {\n");
    sb.append("    autoTestId: ").append(toIndentedString(autoTestId)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    durationInMs: ").append(toIndentedString(durationInMs)).append("\n");
    sb.append("    traces: ").append(toIndentedString(traces)).append("\n");
    sb.append("    failureType: ").append(toIndentedString(failureType)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    runByUserId: ").append(toIndentedString(runByUserId)).append("\n");
    sb.append("    stoppedByUserId: ").append(toIndentedString(stoppedByUserId)).append("\n");
    sb.append("    testPointId: ").append(toIndentedString(testPointId)).append("\n");
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    testPoint: ").append(toIndentedString(testPoint)).append("\n");
    sb.append("    autoTest: ").append(toIndentedString(autoTest)).append("\n");
    sb.append("    autoTestStepResults: ").append(toIndentedString(autoTestStepResults)).append("\n");
    sb.append("    setupResults: ").append(toIndentedString(setupResults)).append("\n");
    sb.append("    teardownResults: ").append(toIndentedString(teardownResults)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    workItemVersionNumber: ").append(toIndentedString(workItemVersionNumber)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    stepComments: ").append(toIndentedString(stepComments)).append("\n");
    sb.append("    failureClassIds: ").append(toIndentedString(failureClassIds)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    stepResults: ").append(toIndentedString(stepResults)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

