/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.DateTimeRangeSelectorModel;
import ru.testit.client.model.FailureCategoryModel;
import ru.testit.client.model.Int64RangeSelectorModel;
import ru.testit.client.model.TestResultOutcome;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestResultsFilterApiModel
 */
@JsonPropertyOrder({
  TestResultsFilterApiModel.JSON_PROPERTY_CONFIGURATION_IDS,
  TestResultsFilterApiModel.JSON_PROPERTY_OUTCOMES,
  TestResultsFilterApiModel.JSON_PROPERTY_STATUS_CODES,
  TestResultsFilterApiModel.JSON_PROPERTY_FAILURE_CATEGORIES,
  TestResultsFilterApiModel.JSON_PROPERTY_NAMESPACE,
  TestResultsFilterApiModel.JSON_PROPERTY_CLASS_NAME,
  TestResultsFilterApiModel.JSON_PROPERTY_AUTO_TEST_GLOBAL_IDS,
  TestResultsFilterApiModel.JSON_PROPERTY_NAME,
  TestResultsFilterApiModel.JSON_PROPERTY_CREATED_DATE,
  TestResultsFilterApiModel.JSON_PROPERTY_MODIFIED_DATE,
  TestResultsFilterApiModel.JSON_PROPERTY_STARTED_ON,
  TestResultsFilterApiModel.JSON_PROPERTY_COMPLETED_ON,
  TestResultsFilterApiModel.JSON_PROPERTY_DURATION,
  TestResultsFilterApiModel.JSON_PROPERTY_RESULT_REASONS,
  TestResultsFilterApiModel.JSON_PROPERTY_TEST_RUN_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestResultsFilterApiModel {
  public static final String JSON_PROPERTY_CONFIGURATION_IDS = "configurationIds";
  private JsonNullable<List<UUID>> configurationIds = JsonNullable.<List<UUID>>undefined();

  public static final String JSON_PROPERTY_OUTCOMES = "outcomes";
  @Deprecated
  private JsonNullable<List<TestResultOutcome>> outcomes = JsonNullable.<List<TestResultOutcome>>undefined();

  public static final String JSON_PROPERTY_STATUS_CODES = "statusCodes";
  private JsonNullable<List<String>> statusCodes = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_FAILURE_CATEGORIES = "failureCategories";
  private JsonNullable<List<FailureCategoryModel>> failureCategories = JsonNullable.<List<FailureCategoryModel>>undefined();

  public static final String JSON_PROPERTY_NAMESPACE = "namespace";
  private JsonNullable<String> namespace = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CLASS_NAME = "className";
  private JsonNullable<String> className = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_AUTO_TEST_GLOBAL_IDS = "autoTestGlobalIds";
  private JsonNullable<List<Long>> autoTestGlobalIds = JsonNullable.<List<Long>>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private JsonNullable<DateTimeRangeSelectorModel> createdDate = JsonNullable.<DateTimeRangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<DateTimeRangeSelectorModel> modifiedDate = JsonNullable.<DateTimeRangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_STARTED_ON = "startedOn";
  private JsonNullable<DateTimeRangeSelectorModel> startedOn = JsonNullable.<DateTimeRangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_COMPLETED_ON = "completedOn";
  private JsonNullable<DateTimeRangeSelectorModel> completedOn = JsonNullable.<DateTimeRangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_DURATION = "duration";
  private JsonNullable<Int64RangeSelectorModel> duration = JsonNullable.<Int64RangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_RESULT_REASONS = "resultReasons";
  private JsonNullable<List<String>> resultReasons = JsonNullable.<List<String>>undefined();

  public static final String JSON_PROPERTY_TEST_RUN_IDS = "testRunIds";
  private JsonNullable<List<UUID>> testRunIds = JsonNullable.<List<UUID>>undefined();

  public TestResultsFilterApiModel() { 
  }

  public TestResultsFilterApiModel configurationIds(List<UUID> configurationIds) {
    this.configurationIds = JsonNullable.<List<UUID>>of(configurationIds);
    return this;
  }

  public TestResultsFilterApiModel addConfigurationIdsItem(UUID configurationIdsItem) {
    if (this.configurationIds == null || !this.configurationIds.isPresent()) {
      this.configurationIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.configurationIds.get().add(configurationIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies a test result configuration IDs to search for
   * @return configurationIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<UUID> getConfigurationIds() {
        return configurationIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CONFIGURATION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getConfigurationIds_JsonNullable() {
    return configurationIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CONFIGURATION_IDS)
  public void setConfigurationIds_JsonNullable(JsonNullable<List<UUID>> configurationIds) {
    this.configurationIds = configurationIds;
  }

  public void setConfigurationIds(List<UUID> configurationIds) {
    this.configurationIds = JsonNullable.<List<UUID>>of(configurationIds);
  }


  @Deprecated
  public TestResultsFilterApiModel outcomes(List<TestResultOutcome> outcomes) {
    this.outcomes = JsonNullable.<List<TestResultOutcome>>of(outcomes);
    return this;
  }

  public TestResultsFilterApiModel addOutcomesItem(TestResultOutcome outcomesItem) {
    if (this.outcomes == null || !this.outcomes.isPresent()) {
      this.outcomes = JsonNullable.<List<TestResultOutcome>>of(new ArrayList<>());
    }
    try {
      this.outcomes.get().add(outcomesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies a test result outcomes to search for
   * @return outcomes
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<TestResultOutcome> getOutcomes() {
        return outcomes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_OUTCOMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TestResultOutcome>> getOutcomes_JsonNullable() {
    return outcomes;
  }
  
  @JsonProperty(JSON_PROPERTY_OUTCOMES)
  public void setOutcomes_JsonNullable(JsonNullable<List<TestResultOutcome>> outcomes) {
    this.outcomes = outcomes;
  }

  @Deprecated
  public void setOutcomes(List<TestResultOutcome> outcomes) {
    this.outcomes = JsonNullable.<List<TestResultOutcome>>of(outcomes);
  }


  public TestResultsFilterApiModel statusCodes(List<String> statusCodes) {
    this.statusCodes = JsonNullable.<List<String>>of(statusCodes);
    return this;
  }

  public TestResultsFilterApiModel addStatusCodesItem(String statusCodesItem) {
    if (this.statusCodes == null || !this.statusCodes.isPresent()) {
      this.statusCodes = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.statusCodes.get().add(statusCodesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies a test result status codes to search for
   * @return statusCodes
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<String> getStatusCodes() {
        return statusCodes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATUS_CODES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getStatusCodes_JsonNullable() {
    return statusCodes;
  }
  
  @JsonProperty(JSON_PROPERTY_STATUS_CODES)
  public void setStatusCodes_JsonNullable(JsonNullable<List<String>> statusCodes) {
    this.statusCodes = statusCodes;
  }

  public void setStatusCodes(List<String> statusCodes) {
    this.statusCodes = JsonNullable.<List<String>>of(statusCodes);
  }


  public TestResultsFilterApiModel failureCategories(List<FailureCategoryModel> failureCategories) {
    this.failureCategories = JsonNullable.<List<FailureCategoryModel>>of(failureCategories);
    return this;
  }

  public TestResultsFilterApiModel addFailureCategoriesItem(FailureCategoryModel failureCategoriesItem) {
    if (this.failureCategories == null || !this.failureCategories.isPresent()) {
      this.failureCategories = JsonNullable.<List<FailureCategoryModel>>of(new ArrayList<>());
    }
    try {
      this.failureCategories.get().add(failureCategoriesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies a test result failure categories to search for
   * @return failureCategories
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<FailureCategoryModel> getFailureCategories() {
        return failureCategories.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<FailureCategoryModel>> getFailureCategories_JsonNullable() {
    return failureCategories;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORIES)
  public void setFailureCategories_JsonNullable(JsonNullable<List<FailureCategoryModel>> failureCategories) {
    this.failureCategories = failureCategories;
  }

  public void setFailureCategories(List<FailureCategoryModel> failureCategories) {
    this.failureCategories = JsonNullable.<List<FailureCategoryModel>>of(failureCategories);
  }


  public TestResultsFilterApiModel namespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
    return this;
  }

  /**
   * Specifies a test result namespace to search for
   * @return namespace
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getNamespace() {
        return namespace.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNamespace_JsonNullable() {
    return namespace;
  }
  
  @JsonProperty(JSON_PROPERTY_NAMESPACE)
  public void setNamespace_JsonNullable(JsonNullable<String> namespace) {
    this.namespace = namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = JsonNullable.<String>of(namespace);
  }


  public TestResultsFilterApiModel className(String className) {
    this.className = JsonNullable.<String>of(className);
    return this;
  }

  /**
   * Specifies a test result class name to search for
   * @return className
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getClassName() {
        return className.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getClassName_JsonNullable() {
    return className;
  }
  
  @JsonProperty(JSON_PROPERTY_CLASS_NAME)
  public void setClassName_JsonNullable(JsonNullable<String> className) {
    this.className = className;
  }

  public void setClassName(String className) {
    this.className = JsonNullable.<String>of(className);
  }


  public TestResultsFilterApiModel autoTestGlobalIds(List<Long> autoTestGlobalIds) {
    this.autoTestGlobalIds = JsonNullable.<List<Long>>of(autoTestGlobalIds);
    return this;
  }

  public TestResultsFilterApiModel addAutoTestGlobalIdsItem(Long autoTestGlobalIdsItem) {
    if (this.autoTestGlobalIds == null || !this.autoTestGlobalIds.isPresent()) {
      this.autoTestGlobalIds = JsonNullable.<List<Long>>of(new ArrayList<>());
    }
    try {
      this.autoTestGlobalIds.get().add(autoTestGlobalIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies an autotest global IDs to search results for
   * @return autoTestGlobalIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<Long> getAutoTestGlobalIds() {
        return autoTestGlobalIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST_GLOBAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<Long>> getAutoTestGlobalIds_JsonNullable() {
    return autoTestGlobalIds;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_GLOBAL_IDS)
  public void setAutoTestGlobalIds_JsonNullable(JsonNullable<List<Long>> autoTestGlobalIds) {
    this.autoTestGlobalIds = autoTestGlobalIds;
  }

  public void setAutoTestGlobalIds(List<Long> autoTestGlobalIds) {
    this.autoTestGlobalIds = JsonNullable.<List<Long>>of(autoTestGlobalIds);
  }


  public TestResultsFilterApiModel name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Specifies an autotest name to search results for
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public TestResultsFilterApiModel createdDate(DateTimeRangeSelectorModel createdDate) {
    this.createdDate = JsonNullable.<DateTimeRangeSelectorModel>of(createdDate);
    return this;
  }

  /**
   * Specifies a test result creation date and time range to search for
   * @return createdDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public DateTimeRangeSelectorModel getCreatedDate() {
        return createdDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateTimeRangeSelectorModel> getCreatedDate_JsonNullable() {
    return createdDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  public void setCreatedDate_JsonNullable(JsonNullable<DateTimeRangeSelectorModel> createdDate) {
    this.createdDate = createdDate;
  }

  public void setCreatedDate(DateTimeRangeSelectorModel createdDate) {
    this.createdDate = JsonNullable.<DateTimeRangeSelectorModel>of(createdDate);
  }


  public TestResultsFilterApiModel modifiedDate(DateTimeRangeSelectorModel modifiedDate) {
    this.modifiedDate = JsonNullable.<DateTimeRangeSelectorModel>of(modifiedDate);
    return this;
  }

  /**
   * Specifies a test result modified date and time range to search for
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public DateTimeRangeSelectorModel getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateTimeRangeSelectorModel> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<DateTimeRangeSelectorModel> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(DateTimeRangeSelectorModel modifiedDate) {
    this.modifiedDate = JsonNullable.<DateTimeRangeSelectorModel>of(modifiedDate);
  }


  public TestResultsFilterApiModel startedOn(DateTimeRangeSelectorModel startedOn) {
    this.startedOn = JsonNullable.<DateTimeRangeSelectorModel>of(startedOn);
    return this;
  }

  /**
   * Specifies a test result started on date and time range to search for
   * @return startedOn
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public DateTimeRangeSelectorModel getStartedOn() {
        return startedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateTimeRangeSelectorModel> getStartedOn_JsonNullable() {
    return startedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  public void setStartedOn_JsonNullable(JsonNullable<DateTimeRangeSelectorModel> startedOn) {
    this.startedOn = startedOn;
  }

  public void setStartedOn(DateTimeRangeSelectorModel startedOn) {
    this.startedOn = JsonNullable.<DateTimeRangeSelectorModel>of(startedOn);
  }


  public TestResultsFilterApiModel completedOn(DateTimeRangeSelectorModel completedOn) {
    this.completedOn = JsonNullable.<DateTimeRangeSelectorModel>of(completedOn);
    return this;
  }

  /**
   * Specifies a test result completed on date and time range to search for
   * @return completedOn
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public DateTimeRangeSelectorModel getCompletedOn() {
        return completedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateTimeRangeSelectorModel> getCompletedOn_JsonNullable() {
    return completedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  public void setCompletedOn_JsonNullable(JsonNullable<DateTimeRangeSelectorModel> completedOn) {
    this.completedOn = completedOn;
  }

  public void setCompletedOn(DateTimeRangeSelectorModel completedOn) {
    this.completedOn = JsonNullable.<DateTimeRangeSelectorModel>of(completedOn);
  }


  public TestResultsFilterApiModel duration(Int64RangeSelectorModel duration) {
    this.duration = JsonNullable.<Int64RangeSelectorModel>of(duration);
    return this;
  }

  /**
   * Specifies a test result duration range to search for
   * @return duration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Int64RangeSelectorModel getDuration() {
        return duration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Int64RangeSelectorModel> getDuration_JsonNullable() {
    return duration;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION)
  public void setDuration_JsonNullable(JsonNullable<Int64RangeSelectorModel> duration) {
    this.duration = duration;
  }

  public void setDuration(Int64RangeSelectorModel duration) {
    this.duration = JsonNullable.<Int64RangeSelectorModel>of(duration);
  }


  public TestResultsFilterApiModel resultReasons(List<String> resultReasons) {
    this.resultReasons = JsonNullable.<List<String>>of(resultReasons);
    return this;
  }

  public TestResultsFilterApiModel addResultReasonsItem(String resultReasonsItem) {
    if (this.resultReasons == null || !this.resultReasons.isPresent()) {
      this.resultReasons = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.resultReasons.get().add(resultReasonsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies result reasons for searching test results
   * @return resultReasons
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<String> getResultReasons() {
        return resultReasons.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_REASONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getResultReasons_JsonNullable() {
    return resultReasons;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_REASONS)
  public void setResultReasons_JsonNullable(JsonNullable<List<String>> resultReasons) {
    this.resultReasons = resultReasons;
  }

  public void setResultReasons(List<String> resultReasons) {
    this.resultReasons = JsonNullable.<List<String>>of(resultReasons);
  }


  public TestResultsFilterApiModel testRunIds(List<UUID> testRunIds) {
    this.testRunIds = JsonNullable.<List<UUID>>of(testRunIds);
    return this;
  }

  public TestResultsFilterApiModel addTestRunIdsItem(UUID testRunIdsItem) {
    if (this.testRunIds == null || !this.testRunIds.isPresent()) {
      this.testRunIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.testRunIds.get().add(testRunIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies a test result test run IDs to search for
   * @return testRunIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<UUID> getTestRunIds() {
        return testRunIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RUN_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getTestRunIds_JsonNullable() {
    return testRunIds;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RUN_IDS)
  public void setTestRunIds_JsonNullable(JsonNullable<List<UUID>> testRunIds) {
    this.testRunIds = testRunIds;
  }

  public void setTestRunIds(List<UUID> testRunIds) {
    this.testRunIds = JsonNullable.<List<UUID>>of(testRunIds);
  }


  /**
   * Return true if this TestResultsFilterApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultsFilterApiModel testResultsFilterApiModel = (TestResultsFilterApiModel) o;
    return equalsNullable(this.configurationIds, testResultsFilterApiModel.configurationIds) &&
        equalsNullable(this.outcomes, testResultsFilterApiModel.outcomes) &&
        equalsNullable(this.statusCodes, testResultsFilterApiModel.statusCodes) &&
        equalsNullable(this.failureCategories, testResultsFilterApiModel.failureCategories) &&
        equalsNullable(this.namespace, testResultsFilterApiModel.namespace) &&
        equalsNullable(this.className, testResultsFilterApiModel.className) &&
        equalsNullable(this.autoTestGlobalIds, testResultsFilterApiModel.autoTestGlobalIds) &&
        equalsNullable(this.name, testResultsFilterApiModel.name) &&
        equalsNullable(this.createdDate, testResultsFilterApiModel.createdDate) &&
        equalsNullable(this.modifiedDate, testResultsFilterApiModel.modifiedDate) &&
        equalsNullable(this.startedOn, testResultsFilterApiModel.startedOn) &&
        equalsNullable(this.completedOn, testResultsFilterApiModel.completedOn) &&
        equalsNullable(this.duration, testResultsFilterApiModel.duration) &&
        equalsNullable(this.resultReasons, testResultsFilterApiModel.resultReasons) &&
        equalsNullable(this.testRunIds, testResultsFilterApiModel.testRunIds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(configurationIds), hashCodeNullable(outcomes), hashCodeNullable(statusCodes), hashCodeNullable(failureCategories), hashCodeNullable(namespace), hashCodeNullable(className), hashCodeNullable(autoTestGlobalIds), hashCodeNullable(name), hashCodeNullable(createdDate), hashCodeNullable(modifiedDate), hashCodeNullable(startedOn), hashCodeNullable(completedOn), hashCodeNullable(duration), hashCodeNullable(resultReasons), hashCodeNullable(testRunIds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultsFilterApiModel {\n");
    sb.append("    configurationIds: ").append(toIndentedString(configurationIds)).append("\n");
    sb.append("    outcomes: ").append(toIndentedString(outcomes)).append("\n");
    sb.append("    statusCodes: ").append(toIndentedString(statusCodes)).append("\n");
    sb.append("    failureCategories: ").append(toIndentedString(failureCategories)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    className: ").append(toIndentedString(className)).append("\n");
    sb.append("    autoTestGlobalIds: ").append(toIndentedString(autoTestGlobalIds)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    resultReasons: ").append(toIndentedString(resultReasons)).append("\n");
    sb.append("    testRunIds: ").append(toIndentedString(testRunIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

