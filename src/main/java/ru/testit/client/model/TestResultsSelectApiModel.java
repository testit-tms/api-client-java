/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import ru.testit.client.model.TestResultsExtractionApiModel;
import ru.testit.client.model.TestResultsFilterApiModel;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestResultsSelectApiModel
 */
@JsonPropertyOrder({
  TestResultsSelectApiModel.JSON_PROPERTY_FILTER,
  TestResultsSelectApiModel.JSON_PROPERTY_EXTRACTION_MODEL
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestResultsSelectApiModel {
  public static final String JSON_PROPERTY_FILTER = "filter";
  private TestResultsFilterApiModel filter;

  public static final String JSON_PROPERTY_EXTRACTION_MODEL = "extractionModel";
  private TestResultsExtractionApiModel extractionModel;

  public TestResultsSelectApiModel() { 
  }

  public TestResultsSelectApiModel filter(TestResultsFilterApiModel filter) {
    this.filter = filter;
    return this;
  }

  /**
   * Test result filters
   * @return filter
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestResultsFilterApiModel getFilter() {
    return filter;
  }


  @JsonProperty(JSON_PROPERTY_FILTER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFilter(TestResultsFilterApiModel filter) {
    this.filter = filter;
  }


  public TestResultsSelectApiModel extractionModel(TestResultsExtractionApiModel extractionModel) {
    this.extractionModel = extractionModel;
    return this;
  }

  /**
   * Test results extraction model
   * @return extractionModel
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXTRACTION_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestResultsExtractionApiModel getExtractionModel() {
    return extractionModel;
  }


  @JsonProperty(JSON_PROPERTY_EXTRACTION_MODEL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExtractionModel(TestResultsExtractionApiModel extractionModel) {
    this.extractionModel = extractionModel;
  }


  /**
   * Return true if this TestResultsSelectApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultsSelectApiModel testResultsSelectApiModel = (TestResultsSelectApiModel) o;
    return Objects.equals(this.filter, testResultsSelectApiModel.filter) &&
        Objects.equals(this.extractionModel, testResultsSelectApiModel.extractionModel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(filter, extractionModel);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultsSelectApiModel {\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    extractionModel: ").append(toIndentedString(extractionModel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

