/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import ru.testit.client.model.TestResultsStatisticsFailureCategoriesApiResult;
import ru.testit.client.model.TestResultsStatisticsStatusesApiResult;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestResultsStatisticsApiResult
 */
@JsonPropertyOrder({
  TestResultsStatisticsApiResult.JSON_PROPERTY_STATUSES,
  TestResultsStatisticsApiResult.JSON_PROPERTY_FAILURE_CATEGORIES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestResultsStatisticsApiResult {
  public static final String JSON_PROPERTY_STATUSES = "statuses";
  private TestResultsStatisticsStatusesApiResult statuses;

  public static final String JSON_PROPERTY_FAILURE_CATEGORIES = "failureCategories";
  private TestResultsStatisticsFailureCategoriesApiResult failureCategories;

  public TestResultsStatisticsApiResult() { 
  }

  @JsonCreator
  public TestResultsStatisticsApiResult(
    @JsonProperty(JSON_PROPERTY_STATUSES) TestResultsStatisticsStatusesApiResult statuses, 
    @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORIES) TestResultsStatisticsFailureCategoriesApiResult failureCategories
  ) {
    this();
    this.statuses = statuses;
    this.failureCategories = failureCategories;
  }

  /**
   * Test results counts aggregated by outcome
   * @return statuses
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUSES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestResultsStatisticsStatusesApiResult getStatuses() {
    return statuses;
  }




  /**
   * Test results counts aggregated by result failure categories
   * @return failureCategories
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORIES)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestResultsStatisticsFailureCategoriesApiResult getFailureCategories() {
    return failureCategories;
  }




  /**
   * Return true if this TestResultsStatisticsApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultsStatisticsApiResult testResultsStatisticsApiResult = (TestResultsStatisticsApiResult) o;
    return Objects.equals(this.statuses, testResultsStatisticsApiResult.statuses) &&
        Objects.equals(this.failureCategories, testResultsStatisticsApiResult.failureCategories);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statuses, failureCategories);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultsStatisticsApiResult {\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    failureCategories: ").append(toIndentedString(failureCategories)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

