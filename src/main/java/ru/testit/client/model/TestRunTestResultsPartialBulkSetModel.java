/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.LinkPostModel;
import ru.testit.client.model.TestRunTestResultsSelectModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestRunTestResultsPartialBulkSetModel
 */
@JsonPropertyOrder({
  TestRunTestResultsPartialBulkSetModel.JSON_PROPERTY_SELECTOR,
  TestRunTestResultsPartialBulkSetModel.JSON_PROPERTY_RESULT_REASON_IDS,
  TestRunTestResultsPartialBulkSetModel.JSON_PROPERTY_LINKS,
  TestRunTestResultsPartialBulkSetModel.JSON_PROPERTY_COMMENT,
  TestRunTestResultsPartialBulkSetModel.JSON_PROPERTY_ATTACHMENT_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TestRunTestResultsPartialBulkSetModel {
  public static final String JSON_PROPERTY_SELECTOR = "selector";
  private TestRunTestResultsSelectModel selector;

  public static final String JSON_PROPERTY_RESULT_REASON_IDS = "resultReasonIds";
  private JsonNullable<Set<UUID>> resultReasonIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<Set<LinkPostModel>> links = JsonNullable.<Set<LinkPostModel>>undefined();

  public static final String JSON_PROPERTY_COMMENT = "comment";
  private JsonNullable<String> comment = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_ATTACHMENT_IDS = "attachmentIds";
  private JsonNullable<Set<UUID>> attachmentIds = JsonNullable.<Set<UUID>>undefined();

  public TestRunTestResultsPartialBulkSetModel() { 
  }

  public TestRunTestResultsPartialBulkSetModel selector(TestRunTestResultsSelectModel selector) {
    this.selector = selector;
    return this;
  }

   /**
   * Get selector
   * @return selector
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SELECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TestRunTestResultsSelectModel getSelector() {
    return selector;
  }


  @JsonProperty(JSON_PROPERTY_SELECTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSelector(TestRunTestResultsSelectModel selector) {
    this.selector = selector;
  }


  public TestRunTestResultsPartialBulkSetModel resultReasonIds(Set<UUID> resultReasonIds) {
    this.resultReasonIds = JsonNullable.<Set<UUID>>of(resultReasonIds);
    return this;
  }

  public TestRunTestResultsPartialBulkSetModel addResultReasonIdsItem(UUID resultReasonIdsItem) {
    if (this.resultReasonIds == null || !this.resultReasonIds.isPresent()) {
      this.resultReasonIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.resultReasonIds.get().add(resultReasonIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get resultReasonIds
   * @return resultReasonIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getResultReasonIds() {
        return resultReasonIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_RESULT_REASON_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getResultReasonIds_JsonNullable() {
    return resultReasonIds;
  }
  
  @JsonProperty(JSON_PROPERTY_RESULT_REASON_IDS)
  public void setResultReasonIds_JsonNullable(JsonNullable<Set<UUID>> resultReasonIds) {
    this.resultReasonIds = resultReasonIds;
  }

  public void setResultReasonIds(Set<UUID> resultReasonIds) {
    this.resultReasonIds = JsonNullable.<Set<UUID>>of(resultReasonIds);
  }


  public TestRunTestResultsPartialBulkSetModel links(Set<LinkPostModel> links) {
    this.links = JsonNullable.<Set<LinkPostModel>>of(links);
    return this;
  }

  public TestRunTestResultsPartialBulkSetModel addLinksItem(LinkPostModel linksItem) {
    if (this.links == null || !this.links.isPresent()) {
      this.links = JsonNullable.<Set<LinkPostModel>>of(new LinkedHashSet<>());
    }
    try {
      this.links.get().add(linksItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<LinkPostModel> getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<LinkPostModel>> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<Set<LinkPostModel>> links) {
    this.links = links;
  }

  public void setLinks(Set<LinkPostModel> links) {
    this.links = JsonNullable.<Set<LinkPostModel>>of(links);
  }


  public TestRunTestResultsPartialBulkSetModel comment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public String getComment() {
        return comment.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMMENT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getComment_JsonNullable() {
    return comment;
  }
  
  @JsonProperty(JSON_PROPERTY_COMMENT)
  public void setComment_JsonNullable(JsonNullable<String> comment) {
    this.comment = comment;
  }

  public void setComment(String comment) {
    this.comment = JsonNullable.<String>of(comment);
  }


  public TestRunTestResultsPartialBulkSetModel attachmentIds(Set<UUID> attachmentIds) {
    this.attachmentIds = JsonNullable.<Set<UUID>>of(attachmentIds);
    return this;
  }

  public TestRunTestResultsPartialBulkSetModel addAttachmentIdsItem(UUID attachmentIdsItem) {
    if (this.attachmentIds == null || !this.attachmentIds.isPresent()) {
      this.attachmentIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.attachmentIds.get().add(attachmentIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

   /**
   * Get attachmentIds
   * @return attachmentIds
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Set<UUID> getAttachmentIds() {
        return attachmentIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTACHMENT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getAttachmentIds_JsonNullable() {
    return attachmentIds;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTACHMENT_IDS)
  public void setAttachmentIds_JsonNullable(JsonNullable<Set<UUID>> attachmentIds) {
    this.attachmentIds = attachmentIds;
  }

  public void setAttachmentIds(Set<UUID> attachmentIds) {
    this.attachmentIds = JsonNullable.<Set<UUID>>of(attachmentIds);
  }


  /**
   * Return true if this TestRunTestResultsPartialBulkSetModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestRunTestResultsPartialBulkSetModel testRunTestResultsPartialBulkSetModel = (TestRunTestResultsPartialBulkSetModel) o;
    return Objects.equals(this.selector, testRunTestResultsPartialBulkSetModel.selector) &&
        equalsNullable(this.resultReasonIds, testRunTestResultsPartialBulkSetModel.resultReasonIds) &&
        equalsNullable(this.links, testRunTestResultsPartialBulkSetModel.links) &&
        equalsNullable(this.comment, testRunTestResultsPartialBulkSetModel.comment) &&
        equalsNullable(this.attachmentIds, testRunTestResultsPartialBulkSetModel.attachmentIds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(selector, hashCodeNullable(resultReasonIds), hashCodeNullable(links), hashCodeNullable(comment), hashCodeNullable(attachmentIds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestRunTestResultsPartialBulkSetModel {\n");
    sb.append("    selector: ").append(toIndentedString(selector)).append("\n");
    sb.append("    resultReasonIds: ").append(toIndentedString(resultReasonIds)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    attachmentIds: ").append(toIndentedString(attachmentIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

