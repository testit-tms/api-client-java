/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.AttachmentApiResult;
import ru.testit.client.model.LinkApiResult;
import ru.testit.client.model.NamedEntityApiModel;
import ru.testit.client.model.TestResultV2GetModel;
import ru.testit.client.model.TestRunState;
import ru.testit.client.model.TestStatusApiResult;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestRunV2ApiResult
 */
@JsonPropertyOrder({
  TestRunV2ApiResult.JSON_PROPERTY_ID,
  TestRunV2ApiResult.JSON_PROPERTY_NAME,
  TestRunV2ApiResult.JSON_PROPERTY_STATE_NAME,
  TestRunV2ApiResult.JSON_PROPERTY_STATUS,
  TestRunV2ApiResult.JSON_PROPERTY_PROJECT_ID,
  TestRunV2ApiResult.JSON_PROPERTY_CREATED_DATE,
  TestRunV2ApiResult.JSON_PROPERTY_CREATED_BY_ID,
  TestRunV2ApiResult.JSON_PROPERTY_ATTACHMENTS,
  TestRunV2ApiResult.JSON_PROPERTY_LINKS,
  TestRunV2ApiResult.JSON_PROPERTY_WEBHOOKS,
  TestRunV2ApiResult.JSON_PROPERTY_RUN_COUNT,
  TestRunV2ApiResult.JSON_PROPERTY_DESCRIPTION,
  TestRunV2ApiResult.JSON_PROPERTY_LAUNCH_SOURCE,
  TestRunV2ApiResult.JSON_PROPERTY_STARTED_ON,
  TestRunV2ApiResult.JSON_PROPERTY_COMPLETED_ON,
  TestRunV2ApiResult.JSON_PROPERTY_TEST_PLAN_ID,
  TestRunV2ApiResult.JSON_PROPERTY_TEST_RESULTS,
  TestRunV2ApiResult.JSON_PROPERTY_MODIFIED_DATE,
  TestRunV2ApiResult.JSON_PROPERTY_MODIFIED_BY_ID,
  TestRunV2ApiResult.JSON_PROPERTY_CREATED_BY_USER_NAME,
  TestRunV2ApiResult.JSON_PROPERTY_CUSTOM_PARAMETERS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestRunV2ApiResult {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_STATE_NAME = "stateName";
  @Deprecated
  private TestRunState stateName;

  public static final String JSON_PROPERTY_STATUS = "status";
  private TestStatusApiResult status;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private OffsetDateTime createdDate;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_ATTACHMENTS = "attachments";
  private List<AttachmentApiResult> attachments = new ArrayList<>();

  public static final String JSON_PROPERTY_LINKS = "links";
  private List<LinkApiResult> links = new ArrayList<>();

  public static final String JSON_PROPERTY_WEBHOOKS = "webhooks";
  private List<NamedEntityApiModel> webhooks = new ArrayList<>();

  public static final String JSON_PROPERTY_RUN_COUNT = "runCount";
  private Integer runCount;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private JsonNullable<String> description = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_LAUNCH_SOURCE = "launchSource";
  private JsonNullable<String> launchSource = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_STARTED_ON = "startedOn";
  private JsonNullable<OffsetDateTime> startedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_COMPLETED_ON = "completedOn";
  private JsonNullable<OffsetDateTime> completedOn = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_TEST_PLAN_ID = "testPlanId";
  private JsonNullable<UUID> testPlanId = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_TEST_RESULTS = "testResults";
  private JsonNullable<List<TestResultV2GetModel>> testResults = JsonNullable.<List<TestResultV2GetModel>>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_USER_NAME = "createdByUserName";
  private JsonNullable<String> createdByUserName = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_CUSTOM_PARAMETERS = "customParameters";
  private JsonNullable<Map<String, String>> customParameters = JsonNullable.<Map<String, String>>undefined();

  public TestRunV2ApiResult() { 
  }

  public TestRunV2ApiResult id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Test run unique identifier
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public TestRunV2ApiResult name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Test run name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  @Deprecated
  public TestRunV2ApiResult stateName(TestRunState stateName) {
    this.stateName = stateName;
    return this;
  }

  /**
   * Test run state
   * @return stateName
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestRunState getStateName() {
    return stateName;
  }


  @Deprecated
  @JsonProperty(JSON_PROPERTY_STATE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStateName(TestRunState stateName) {
    this.stateName = stateName;
  }


  public TestRunV2ApiResult status(TestStatusApiResult status) {
    this.status = status;
    return this;
  }

  /**
   * Test run status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TestStatusApiResult getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(TestStatusApiResult status) {
    this.status = status;
  }


  public TestRunV2ApiResult projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Project unique identifier                This property is used to link test run with project.
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public TestRunV2ApiResult createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Date and time of test run creation
   * @return createdDate
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public TestRunV2ApiResult createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Unique identifier of user who created test run
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public TestRunV2ApiResult attachments(List<AttachmentApiResult> attachments) {
    this.attachments = attachments;
    return this;
  }

  public TestRunV2ApiResult addAttachmentsItem(AttachmentApiResult attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * Collection of attachments related to the test run
   * @return attachments
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<AttachmentApiResult> getAttachments() {
    return attachments;
  }


  @JsonProperty(JSON_PROPERTY_ATTACHMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAttachments(List<AttachmentApiResult> attachments) {
    this.attachments = attachments;
  }


  public TestRunV2ApiResult links(List<LinkApiResult> links) {
    this.links = links;
    return this;
  }

  public TestRunV2ApiResult addLinksItem(LinkApiResult linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Collection of links related to the test run
   * @return links
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<LinkApiResult> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLinks(List<LinkApiResult> links) {
    this.links = links;
  }


  public TestRunV2ApiResult webhooks(List<NamedEntityApiModel> webhooks) {
    this.webhooks = webhooks;
    return this;
  }

  public TestRunV2ApiResult addWebhooksItem(NamedEntityApiModel webhooksItem) {
    if (this.webhooks == null) {
      this.webhooks = new ArrayList<>();
    }
    this.webhooks.add(webhooksItem);
    return this;
  }

  /**
   * Enabled webhooks
   * @return webhooks
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<NamedEntityApiModel> getWebhooks() {
    return webhooks;
  }


  @JsonProperty(JSON_PROPERTY_WEBHOOKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWebhooks(List<NamedEntityApiModel> webhooks) {
    this.webhooks = webhooks;
  }


  public TestRunV2ApiResult runCount(Integer runCount) {
    this.runCount = runCount;
    return this;
  }

  /**
   * Run count
   * @return runCount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_RUN_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getRunCount() {
    return runCount;
  }


  @JsonProperty(JSON_PROPERTY_RUN_COUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setRunCount(Integer runCount) {
    this.runCount = runCount;
  }


  public TestRunV2ApiResult description(String description) {
    this.description = JsonNullable.<String>of(description);
    return this;
  }

  /**
   * Test run description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getDescription() {
        return description.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getDescription_JsonNullable() {
    return description;
  }
  
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  public void setDescription_JsonNullable(JsonNullable<String> description) {
    this.description = description;
  }

  public void setDescription(String description) {
    this.description = JsonNullable.<String>of(description);
  }


  public TestRunV2ApiResult launchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
    return this;
  }

  /**
   * Test run launch source                Once launch source is specified it cannot be updated.
   * @return launchSource
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getLaunchSource() {
        return launchSource.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getLaunchSource_JsonNullable() {
    return launchSource;
  }
  
  @JsonProperty(JSON_PROPERTY_LAUNCH_SOURCE)
  public void setLaunchSource_JsonNullable(JsonNullable<String> launchSource) {
    this.launchSource = launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = JsonNullable.<String>of(launchSource);
  }


  public TestRunV2ApiResult startedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
    return this;
  }

  /**
   * Date and time of test run start
   * @return startedOn
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getStartedOn() {
        return startedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getStartedOn_JsonNullable() {
    return startedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_STARTED_ON)
  public void setStartedOn_JsonNullable(JsonNullable<OffsetDateTime> startedOn) {
    this.startedOn = startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = JsonNullable.<OffsetDateTime>of(startedOn);
  }


  public TestRunV2ApiResult completedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
    return this;
  }

  /**
   * Date and time of test run end
   * @return completedOn
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getCompletedOn() {
        return completedOn.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCompletedOn_JsonNullable() {
    return completedOn;
  }
  
  @JsonProperty(JSON_PROPERTY_COMPLETED_ON)
  public void setCompletedOn_JsonNullable(JsonNullable<OffsetDateTime> completedOn) {
    this.completedOn = completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = JsonNullable.<OffsetDateTime>of(completedOn);
  }


  public TestRunV2ApiResult testPlanId(UUID testPlanId) {
    this.testPlanId = JsonNullable.<UUID>of(testPlanId);
    return this;
  }

  /**
   * Test plan unique identifier                This property is used to link test run with test plan.
   * @return testPlanId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getTestPlanId() {
        return testPlanId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_PLAN_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getTestPlanId_JsonNullable() {
    return testPlanId;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_PLAN_ID)
  public void setTestPlanId_JsonNullable(JsonNullable<UUID> testPlanId) {
    this.testPlanId = testPlanId;
  }

  public void setTestPlanId(UUID testPlanId) {
    this.testPlanId = JsonNullable.<UUID>of(testPlanId);
  }


  public TestRunV2ApiResult testResults(List<TestResultV2GetModel> testResults) {
    this.testResults = JsonNullable.<List<TestResultV2GetModel>>of(testResults);
    return this;
  }

  public TestRunV2ApiResult addTestResultsItem(TestResultV2GetModel testResultsItem) {
    if (this.testResults == null || !this.testResults.isPresent()) {
      this.testResults = JsonNullable.<List<TestResultV2GetModel>>of(new ArrayList<>());
    }
    try {
      this.testResults.get().add(testResultsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Enumeration of test results related to test run
   * @return testResults
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<TestResultV2GetModel> getTestResults() {
        return testResults.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TEST_RESULTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<TestResultV2GetModel>> getTestResults_JsonNullable() {
    return testResults;
  }
  
  @JsonProperty(JSON_PROPERTY_TEST_RESULTS)
  public void setTestResults_JsonNullable(JsonNullable<List<TestResultV2GetModel>> testResults) {
    this.testResults = testResults;
  }

  public void setTestResults(List<TestResultV2GetModel> testResults) {
    this.testResults = JsonNullable.<List<TestResultV2GetModel>>of(testResults);
  }


  public TestRunV2ApiResult modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Date and time of last test run  modification
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public TestRunV2ApiResult modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Unique identifier of user who applied last test run  modification
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public TestRunV2ApiResult createdByUserName(String createdByUserName) {
    this.createdByUserName = JsonNullable.<String>of(createdByUserName);
    return this;
  }

  /**
   * Username of user who created test run
   * @return createdByUserName
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getCreatedByUserName() {
        return createdByUserName.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_BY_USER_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getCreatedByUserName_JsonNullable() {
    return createdByUserName;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_BY_USER_NAME)
  public void setCreatedByUserName_JsonNullable(JsonNullable<String> createdByUserName) {
    this.createdByUserName = createdByUserName;
  }

  public void setCreatedByUserName(String createdByUserName) {
    this.createdByUserName = JsonNullable.<String>of(createdByUserName);
  }


  public TestRunV2ApiResult customParameters(Map<String, String> customParameters) {
    this.customParameters = JsonNullable.<Map<String, String>>of(customParameters);
    return this;
  }

  public TestRunV2ApiResult putCustomParametersItem(String key, String customParametersItem) {
    if (this.customParameters == null || !this.customParameters.isPresent()) {
      this.customParameters = JsonNullable.<Map<String, String>>of(new HashMap<>());
    }
    try {
      this.customParameters.get().put(key, customParametersItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Customers test run parameters
   * @return customParameters
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, String> getCustomParameters() {
        return customParameters.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CUSTOM_PARAMETERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, String>> getCustomParameters_JsonNullable() {
    return customParameters;
  }
  
  @JsonProperty(JSON_PROPERTY_CUSTOM_PARAMETERS)
  public void setCustomParameters_JsonNullable(JsonNullable<Map<String, String>> customParameters) {
    this.customParameters = customParameters;
  }

  public void setCustomParameters(Map<String, String> customParameters) {
    this.customParameters = JsonNullable.<Map<String, String>>of(customParameters);
  }


  /**
   * Return true if this TestRunV2ApiResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestRunV2ApiResult testRunV2ApiResult = (TestRunV2ApiResult) o;
    return Objects.equals(this.id, testRunV2ApiResult.id) &&
        Objects.equals(this.name, testRunV2ApiResult.name) &&
        Objects.equals(this.stateName, testRunV2ApiResult.stateName) &&
        Objects.equals(this.status, testRunV2ApiResult.status) &&
        Objects.equals(this.projectId, testRunV2ApiResult.projectId) &&
        Objects.equals(this.createdDate, testRunV2ApiResult.createdDate) &&
        Objects.equals(this.createdById, testRunV2ApiResult.createdById) &&
        Objects.equals(this.attachments, testRunV2ApiResult.attachments) &&
        Objects.equals(this.links, testRunV2ApiResult.links) &&
        Objects.equals(this.webhooks, testRunV2ApiResult.webhooks) &&
        Objects.equals(this.runCount, testRunV2ApiResult.runCount) &&
        equalsNullable(this.description, testRunV2ApiResult.description) &&
        equalsNullable(this.launchSource, testRunV2ApiResult.launchSource) &&
        equalsNullable(this.startedOn, testRunV2ApiResult.startedOn) &&
        equalsNullable(this.completedOn, testRunV2ApiResult.completedOn) &&
        equalsNullable(this.testPlanId, testRunV2ApiResult.testPlanId) &&
        equalsNullable(this.testResults, testRunV2ApiResult.testResults) &&
        equalsNullable(this.modifiedDate, testRunV2ApiResult.modifiedDate) &&
        equalsNullable(this.modifiedById, testRunV2ApiResult.modifiedById) &&
        equalsNullable(this.createdByUserName, testRunV2ApiResult.createdByUserName) &&
        equalsNullable(this.customParameters, testRunV2ApiResult.customParameters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, stateName, status, projectId, createdDate, createdById, attachments, links, webhooks, runCount, hashCodeNullable(description), hashCodeNullable(launchSource), hashCodeNullable(startedOn), hashCodeNullable(completedOn), hashCodeNullable(testPlanId), hashCodeNullable(testResults), hashCodeNullable(modifiedDate), hashCodeNullable(modifiedById), hashCodeNullable(createdByUserName), hashCodeNullable(customParameters));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestRunV2ApiResult {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    webhooks: ").append(toIndentedString(webhooks)).append("\n");
    sb.append("    runCount: ").append(toIndentedString(runCount)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    testPlanId: ").append(toIndentedString(testPlanId)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    createdByUserName: ").append(toIndentedString(createdByUserName)).append("\n");
    sb.append("    customParameters: ").append(toIndentedString(customParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

