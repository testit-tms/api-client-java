/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.DateTimeRangeSelectorModel;
import ru.testit.client.model.Int32RangeSelectorModel;
import ru.testit.client.model.Int64RangeSelectorModel;
import ru.testit.client.model.WorkItemEntityTypes;
import ru.testit.client.model.WorkItemLinkFilterModel;
import ru.testit.client.model.WorkItemPriorityModel;
import ru.testit.client.model.WorkItemSourceTypeModel;
import ru.testit.client.model.WorkItemStates;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * TestSuiteWorkItemsSearchModel
 */
@JsonPropertyOrder({
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_TAG_NAMES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_ENTITY_TYPES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_NAME_OR_ID,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_INCLUDE_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_EXCLUDE_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_PROJECT_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_LINKS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_NAME,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_GLOBAL_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_ATTRIBUTES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_IS_DELETED,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_SECTION_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_CREATED_BY_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_MODIFIED_BY_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_STATES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_PRIORITIES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_SOURCE_TYPES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_TYPES,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_CREATED_DATE,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_MODIFIED_DATE,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_DURATION,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_MEDIAN_DURATION,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_IS_AUTOMATED,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_TAGS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_AUTO_TEST_IDS,
  TestSuiteWorkItemsSearchModel.JSON_PROPERTY_WORK_ITEM_VERSION_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class TestSuiteWorkItemsSearchModel {
  public static final String JSON_PROPERTY_TAG_NAMES = "tagNames";
  @Deprecated
  private JsonNullable<Set<String>> tagNames = JsonNullable.<Set<String>>undefined();

  public static final String JSON_PROPERTY_ENTITY_TYPES = "entityTypes";
  @Deprecated
  private JsonNullable<Set<WorkItemEntityTypes>> entityTypes = JsonNullable.<Set<WorkItemEntityTypes>>undefined();

  public static final String JSON_PROPERTY_NAME_OR_ID = "nameOrId";
  private JsonNullable<String> nameOrId = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_INCLUDE_IDS = "includeIds";
  private JsonNullable<Set<UUID>> includeIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_EXCLUDE_IDS = "excludeIds";
  private JsonNullable<Set<UUID>> excludeIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_PROJECT_IDS = "projectIds";
  private JsonNullable<Set<UUID>> projectIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_LINKS = "links";
  private JsonNullable<WorkItemLinkFilterModel> links = JsonNullable.<WorkItemLinkFilterModel>undefined();

  public static final String JSON_PROPERTY_NAME = "name";
  private JsonNullable<String> name = JsonNullable.<String>undefined();

  public static final String JSON_PROPERTY_IDS = "ids";
  private JsonNullable<Set<UUID>> ids = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_GLOBAL_IDS = "globalIds";
  private JsonNullable<Set<Long>> globalIds = JsonNullable.<Set<Long>>undefined();

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private JsonNullable<Map<String, Set<String>>> attributes = JsonNullable.<Map<String, Set<String>>>undefined();

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private JsonNullable<Boolean> isDeleted = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_SECTION_IDS = "sectionIds";
  private JsonNullable<Set<UUID>> sectionIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_CREATED_BY_IDS = "createdByIds";
  private JsonNullable<Set<UUID>> createdByIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_IDS = "modifiedByIds";
  private JsonNullable<Set<UUID>> modifiedByIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_STATES = "states";
  private JsonNullable<Set<WorkItemStates>> states = JsonNullable.<Set<WorkItemStates>>undefined();

  public static final String JSON_PROPERTY_PRIORITIES = "priorities";
  private JsonNullable<Set<WorkItemPriorityModel>> priorities = JsonNullable.<Set<WorkItemPriorityModel>>undefined();

  public static final String JSON_PROPERTY_SOURCE_TYPES = "sourceTypes";
  private JsonNullable<Set<WorkItemSourceTypeModel>> sourceTypes = JsonNullable.<Set<WorkItemSourceTypeModel>>undefined();

  public static final String JSON_PROPERTY_TYPES = "types";
  private JsonNullable<Set<WorkItemEntityTypes>> types = JsonNullable.<Set<WorkItemEntityTypes>>undefined();

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private JsonNullable<DateTimeRangeSelectorModel> createdDate = JsonNullable.<DateTimeRangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<DateTimeRangeSelectorModel> modifiedDate = JsonNullable.<DateTimeRangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_DURATION = "duration";
  private JsonNullable<Int32RangeSelectorModel> duration = JsonNullable.<Int32RangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_MEDIAN_DURATION = "medianDuration";
  private JsonNullable<Int64RangeSelectorModel> medianDuration = JsonNullable.<Int64RangeSelectorModel>undefined();

  public static final String JSON_PROPERTY_IS_AUTOMATED = "isAutomated";
  private JsonNullable<Boolean> isAutomated = JsonNullable.<Boolean>undefined();

  public static final String JSON_PROPERTY_TAGS = "tags";
  private JsonNullable<Set<String>> tags = JsonNullable.<Set<String>>undefined();

  public static final String JSON_PROPERTY_AUTO_TEST_IDS = "autoTestIds";
  private JsonNullable<Set<UUID>> autoTestIds = JsonNullable.<Set<UUID>>undefined();

  public static final String JSON_PROPERTY_WORK_ITEM_VERSION_IDS = "workItemVersionIds";
  private JsonNullable<List<UUID>> workItemVersionIds = JsonNullable.<List<UUID>>undefined();

  public TestSuiteWorkItemsSearchModel() { 
  }

  @Deprecated
  public TestSuiteWorkItemsSearchModel tagNames(Set<String> tagNames) {
    this.tagNames = JsonNullable.<Set<String>>of(tagNames);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addTagNamesItem(String tagNamesItem) {
    if (this.tagNames == null || !this.tagNames.isPresent()) {
      this.tagNames = JsonNullable.<Set<String>>of(new LinkedHashSet<>());
    }
    try {
      this.tagNames.get().add(tagNamesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of tags
   * @return tagNames
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<String> getTagNames() {
        return tagNames.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAG_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<String>> getTagNames_JsonNullable() {
    return tagNames;
  }
  
  @JsonProperty(JSON_PROPERTY_TAG_NAMES)
  public void setTagNames_JsonNullable(JsonNullable<Set<String>> tagNames) {
    this.tagNames = tagNames;
  }

  @Deprecated
  public void setTagNames(Set<String> tagNames) {
    this.tagNames = JsonNullable.<Set<String>>of(tagNames);
  }


  @Deprecated
  public TestSuiteWorkItemsSearchModel entityTypes(Set<WorkItemEntityTypes> entityTypes) {
    this.entityTypes = JsonNullable.<Set<WorkItemEntityTypes>>of(entityTypes);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addEntityTypesItem(WorkItemEntityTypes entityTypesItem) {
    if (this.entityTypes == null || !this.entityTypes.isPresent()) {
      this.entityTypes = JsonNullable.<Set<WorkItemEntityTypes>>of(new LinkedHashSet<>());
    }
    try {
      this.entityTypes.get().add(entityTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of types of work item    Allowed values: &#x60;TestCases&#x60;, &#x60;CheckLists&#x60;, &#x60;SharedSteps&#x60;
   * @return entityTypes
   * @deprecated
   */
  @Deprecated
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<WorkItemEntityTypes> getEntityTypes() {
        return entityTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ENTITY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<WorkItemEntityTypes>> getEntityTypes_JsonNullable() {
    return entityTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPES)
  public void setEntityTypes_JsonNullable(JsonNullable<Set<WorkItemEntityTypes>> entityTypes) {
    this.entityTypes = entityTypes;
  }

  @Deprecated
  public void setEntityTypes(Set<WorkItemEntityTypes> entityTypes) {
    this.entityTypes = JsonNullable.<Set<WorkItemEntityTypes>>of(entityTypes);
  }


  public TestSuiteWorkItemsSearchModel nameOrId(String nameOrId) {
    this.nameOrId = JsonNullable.<String>of(nameOrId);
    return this;
  }

  /**
   * Name or identifier (UUID) of work item
   * @return nameOrId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getNameOrId() {
        return nameOrId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME_OR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getNameOrId_JsonNullable() {
    return nameOrId;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME_OR_ID)
  public void setNameOrId_JsonNullable(JsonNullable<String> nameOrId) {
    this.nameOrId = nameOrId;
  }

  public void setNameOrId(String nameOrId) {
    this.nameOrId = JsonNullable.<String>of(nameOrId);
  }


  public TestSuiteWorkItemsSearchModel includeIds(Set<UUID> includeIds) {
    this.includeIds = JsonNullable.<Set<UUID>>of(includeIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addIncludeIdsItem(UUID includeIdsItem) {
    if (this.includeIds == null || !this.includeIds.isPresent()) {
      this.includeIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.includeIds.get().add(includeIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of identifiers of work items which need to be included in result regardless of filtering
   * @return includeIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getIncludeIds() {
        return includeIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_INCLUDE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getIncludeIds_JsonNullable() {
    return includeIds;
  }
  
  @JsonProperty(JSON_PROPERTY_INCLUDE_IDS)
  public void setIncludeIds_JsonNullable(JsonNullable<Set<UUID>> includeIds) {
    this.includeIds = includeIds;
  }

  public void setIncludeIds(Set<UUID> includeIds) {
    this.includeIds = JsonNullable.<Set<UUID>>of(includeIds);
  }


  public TestSuiteWorkItemsSearchModel excludeIds(Set<UUID> excludeIds) {
    this.excludeIds = JsonNullable.<Set<UUID>>of(excludeIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addExcludeIdsItem(UUID excludeIdsItem) {
    if (this.excludeIds == null || !this.excludeIds.isPresent()) {
      this.excludeIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.excludeIds.get().add(excludeIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of identifiers of work items which need to be excluded from result regardless of filtering
   * @return excludeIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getExcludeIds() {
        return excludeIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_EXCLUDE_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getExcludeIds_JsonNullable() {
    return excludeIds;
  }
  
  @JsonProperty(JSON_PROPERTY_EXCLUDE_IDS)
  public void setExcludeIds_JsonNullable(JsonNullable<Set<UUID>> excludeIds) {
    this.excludeIds = excludeIds;
  }

  public void setExcludeIds(Set<UUID> excludeIds) {
    this.excludeIds = JsonNullable.<Set<UUID>>of(excludeIds);
  }


  public TestSuiteWorkItemsSearchModel projectIds(Set<UUID> projectIds) {
    this.projectIds = JsonNullable.<Set<UUID>>of(projectIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addProjectIdsItem(UUID projectIdsItem) {
    if (this.projectIds == null || !this.projectIds.isPresent()) {
      this.projectIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.projectIds.get().add(projectIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of project identifiers
   * @return projectIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getProjectIds() {
        return projectIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROJECT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getProjectIds_JsonNullable() {
    return projectIds;
  }
  
  @JsonProperty(JSON_PROPERTY_PROJECT_IDS)
  public void setProjectIds_JsonNullable(JsonNullable<Set<UUID>> projectIds) {
    this.projectIds = projectIds;
  }

  public void setProjectIds(Set<UUID> projectIds) {
    this.projectIds = JsonNullable.<Set<UUID>>of(projectIds);
  }


  public TestSuiteWorkItemsSearchModel links(WorkItemLinkFilterModel links) {
    this.links = JsonNullable.<WorkItemLinkFilterModel>of(links);
    return this;
  }

  /**
   * Specifies a work item filter by its links
   * @return links
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public WorkItemLinkFilterModel getLinks() {
        return links.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<WorkItemLinkFilterModel> getLinks_JsonNullable() {
    return links;
  }
  
  @JsonProperty(JSON_PROPERTY_LINKS)
  public void setLinks_JsonNullable(JsonNullable<WorkItemLinkFilterModel> links) {
    this.links = links;
  }

  public void setLinks(WorkItemLinkFilterModel links) {
    this.links = JsonNullable.<WorkItemLinkFilterModel>of(links);
  }


  public TestSuiteWorkItemsSearchModel name(String name) {
    this.name = JsonNullable.<String>of(name);
    return this;
  }

  /**
   * Name of work item
   * @return name
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public String getName() {
        return name.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<String> getName_JsonNullable() {
    return name;
  }
  
  @JsonProperty(JSON_PROPERTY_NAME)
  public void setName_JsonNullable(JsonNullable<String> name) {
    this.name = name;
  }

  public void setName(String name) {
    this.name = JsonNullable.<String>of(name);
  }


  public TestSuiteWorkItemsSearchModel ids(Set<UUID> ids) {
    this.ids = JsonNullable.<Set<UUID>>of(ids);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addIdsItem(UUID idsItem) {
    if (this.ids == null || !this.ids.isPresent()) {
      this.ids = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.ids.get().add(idsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Specifies a work item unique IDs to search for
   * @return ids
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getIds() {
        return ids.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getIds_JsonNullable() {
    return ids;
  }
  
  @JsonProperty(JSON_PROPERTY_IDS)
  public void setIds_JsonNullable(JsonNullable<Set<UUID>> ids) {
    this.ids = ids;
  }

  public void setIds(Set<UUID> ids) {
    this.ids = JsonNullable.<Set<UUID>>of(ids);
  }


  public TestSuiteWorkItemsSearchModel globalIds(Set<Long> globalIds) {
    this.globalIds = JsonNullable.<Set<Long>>of(globalIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addGlobalIdsItem(Long globalIdsItem) {
    if (this.globalIds == null || !this.globalIds.isPresent()) {
      this.globalIds = JsonNullable.<Set<Long>>of(new LinkedHashSet<>());
    }
    try {
      this.globalIds.get().add(globalIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of global (integer) identifiers
   * @return globalIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<Long> getGlobalIds() {
        return globalIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_GLOBAL_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<Long>> getGlobalIds_JsonNullable() {
    return globalIds;
  }
  
  @JsonProperty(JSON_PROPERTY_GLOBAL_IDS)
  public void setGlobalIds_JsonNullable(JsonNullable<Set<Long>> globalIds) {
    this.globalIds = globalIds;
  }

  public void setGlobalIds(Set<Long> globalIds) {
    this.globalIds = JsonNullable.<Set<Long>>of(globalIds);
  }


  public TestSuiteWorkItemsSearchModel attributes(Map<String, Set<String>> attributes) {
    this.attributes = JsonNullable.<Map<String, Set<String>>>of(attributes);
    return this;
  }

  public TestSuiteWorkItemsSearchModel putAttributesItem(String key, Set<String> attributesItem) {
    if (this.attributes == null || !this.attributes.isPresent()) {
      this.attributes = JsonNullable.<Map<String, Set<String>>>of(new HashMap<>());
    }
    try {
      this.attributes.get().put(key, attributesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Custom attributes of work item
   * @return attributes
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, Set<String>> getAttributes() {
        return attributes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Set<String>>> getAttributes_JsonNullable() {
    return attributes;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  public void setAttributes_JsonNullable(JsonNullable<Map<String, Set<String>>> attributes) {
    this.attributes = attributes;
  }

  public void setAttributes(Map<String, Set<String>> attributes) {
    this.attributes = JsonNullable.<Map<String, Set<String>>>of(attributes);
  }


  public TestSuiteWorkItemsSearchModel isDeleted(Boolean isDeleted) {
    this.isDeleted = JsonNullable.<Boolean>of(isDeleted);
    return this;
  }

  /**
   * Is result must consist of only actual/deleted work items
   * @return isDeleted
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Boolean getIsDeleted() {
        return isDeleted.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsDeleted_JsonNullable() {
    return isDeleted;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  public void setIsDeleted_JsonNullable(JsonNullable<Boolean> isDeleted) {
    this.isDeleted = isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = JsonNullable.<Boolean>of(isDeleted);
  }


  public TestSuiteWorkItemsSearchModel sectionIds(Set<UUID> sectionIds) {
    this.sectionIds = JsonNullable.<Set<UUID>>of(sectionIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addSectionIdsItem(UUID sectionIdsItem) {
    if (this.sectionIds == null || !this.sectionIds.isPresent()) {
      this.sectionIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.sectionIds.get().add(sectionIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of section identifiers
   * @return sectionIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getSectionIds() {
        return sectionIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SECTION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getSectionIds_JsonNullable() {
    return sectionIds;
  }
  
  @JsonProperty(JSON_PROPERTY_SECTION_IDS)
  public void setSectionIds_JsonNullable(JsonNullable<Set<UUID>> sectionIds) {
    this.sectionIds = sectionIds;
  }

  public void setSectionIds(Set<UUID> sectionIds) {
    this.sectionIds = JsonNullable.<Set<UUID>>of(sectionIds);
  }


  public TestSuiteWorkItemsSearchModel createdByIds(Set<UUID> createdByIds) {
    this.createdByIds = JsonNullable.<Set<UUID>>of(createdByIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addCreatedByIdsItem(UUID createdByIdsItem) {
    if (this.createdByIds == null || !this.createdByIds.isPresent()) {
      this.createdByIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.createdByIds.get().add(createdByIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of identifiers of users who created work item
   * @return createdByIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getCreatedByIds() {
        return createdByIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_BY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getCreatedByIds_JsonNullable() {
    return createdByIds;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_BY_IDS)
  public void setCreatedByIds_JsonNullable(JsonNullable<Set<UUID>> createdByIds) {
    this.createdByIds = createdByIds;
  }

  public void setCreatedByIds(Set<UUID> createdByIds) {
    this.createdByIds = JsonNullable.<Set<UUID>>of(createdByIds);
  }


  public TestSuiteWorkItemsSearchModel modifiedByIds(Set<UUID> modifiedByIds) {
    this.modifiedByIds = JsonNullable.<Set<UUID>>of(modifiedByIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addModifiedByIdsItem(UUID modifiedByIdsItem) {
    if (this.modifiedByIds == null || !this.modifiedByIds.isPresent()) {
      this.modifiedByIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.modifiedByIds.get().add(modifiedByIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of identifiers of users who applied last modification to work item
   * @return modifiedByIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getModifiedByIds() {
        return modifiedByIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getModifiedByIds_JsonNullable() {
    return modifiedByIds;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_IDS)
  public void setModifiedByIds_JsonNullable(JsonNullable<Set<UUID>> modifiedByIds) {
    this.modifiedByIds = modifiedByIds;
  }

  public void setModifiedByIds(Set<UUID> modifiedByIds) {
    this.modifiedByIds = JsonNullable.<Set<UUID>>of(modifiedByIds);
  }


  public TestSuiteWorkItemsSearchModel states(Set<WorkItemStates> states) {
    this.states = JsonNullable.<Set<WorkItemStates>>of(states);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addStatesItem(WorkItemStates statesItem) {
    if (this.states == null || !this.states.isPresent()) {
      this.states = JsonNullable.<Set<WorkItemStates>>of(new LinkedHashSet<>());
    }
    try {
      this.states.get().add(statesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of states of work item
   * @return states
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<WorkItemStates> getStates() {
        return states.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_STATES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<WorkItemStates>> getStates_JsonNullable() {
    return states;
  }
  
  @JsonProperty(JSON_PROPERTY_STATES)
  public void setStates_JsonNullable(JsonNullable<Set<WorkItemStates>> states) {
    this.states = states;
  }

  public void setStates(Set<WorkItemStates> states) {
    this.states = JsonNullable.<Set<WorkItemStates>>of(states);
  }


  public TestSuiteWorkItemsSearchModel priorities(Set<WorkItemPriorityModel> priorities) {
    this.priorities = JsonNullable.<Set<WorkItemPriorityModel>>of(priorities);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addPrioritiesItem(WorkItemPriorityModel prioritiesItem) {
    if (this.priorities == null || !this.priorities.isPresent()) {
      this.priorities = JsonNullable.<Set<WorkItemPriorityModel>>of(new LinkedHashSet<>());
    }
    try {
      this.priorities.get().add(prioritiesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of priorities of work item
   * @return priorities
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<WorkItemPriorityModel> getPriorities() {
        return priorities.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PRIORITIES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<WorkItemPriorityModel>> getPriorities_JsonNullable() {
    return priorities;
  }
  
  @JsonProperty(JSON_PROPERTY_PRIORITIES)
  public void setPriorities_JsonNullable(JsonNullable<Set<WorkItemPriorityModel>> priorities) {
    this.priorities = priorities;
  }

  public void setPriorities(Set<WorkItemPriorityModel> priorities) {
    this.priorities = JsonNullable.<Set<WorkItemPriorityModel>>of(priorities);
  }


  public TestSuiteWorkItemsSearchModel sourceTypes(Set<WorkItemSourceTypeModel> sourceTypes) {
    this.sourceTypes = JsonNullable.<Set<WorkItemSourceTypeModel>>of(sourceTypes);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addSourceTypesItem(WorkItemSourceTypeModel sourceTypesItem) {
    if (this.sourceTypes == null || !this.sourceTypes.isPresent()) {
      this.sourceTypes = JsonNullable.<Set<WorkItemSourceTypeModel>>of(new LinkedHashSet<>());
    }
    try {
      this.sourceTypes.get().add(sourceTypesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of priorities of work item
   * @return sourceTypes
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<WorkItemSourceTypeModel> getSourceTypes() {
        return sourceTypes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_SOURCE_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<WorkItemSourceTypeModel>> getSourceTypes_JsonNullable() {
    return sourceTypes;
  }
  
  @JsonProperty(JSON_PROPERTY_SOURCE_TYPES)
  public void setSourceTypes_JsonNullable(JsonNullable<Set<WorkItemSourceTypeModel>> sourceTypes) {
    this.sourceTypes = sourceTypes;
  }

  public void setSourceTypes(Set<WorkItemSourceTypeModel> sourceTypes) {
    this.sourceTypes = JsonNullable.<Set<WorkItemSourceTypeModel>>of(sourceTypes);
  }


  public TestSuiteWorkItemsSearchModel types(Set<WorkItemEntityTypes> types) {
    this.types = JsonNullable.<Set<WorkItemEntityTypes>>of(types);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addTypesItem(WorkItemEntityTypes typesItem) {
    if (this.types == null || !this.types.isPresent()) {
      this.types = JsonNullable.<Set<WorkItemEntityTypes>>of(new LinkedHashSet<>());
    }
    try {
      this.types.get().add(typesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of types of work item
   * @return types
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<WorkItemEntityTypes> getTypes() {
        return types.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<WorkItemEntityTypes>> getTypes_JsonNullable() {
    return types;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPES)
  public void setTypes_JsonNullable(JsonNullable<Set<WorkItemEntityTypes>> types) {
    this.types = types;
  }

  public void setTypes(Set<WorkItemEntityTypes> types) {
    this.types = JsonNullable.<Set<WorkItemEntityTypes>>of(types);
  }


  public TestSuiteWorkItemsSearchModel createdDate(DateTimeRangeSelectorModel createdDate) {
    this.createdDate = JsonNullable.<DateTimeRangeSelectorModel>of(createdDate);
    return this;
  }

  /**
   * Specifies a work item range of creation date to search for
   * @return createdDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public DateTimeRangeSelectorModel getCreatedDate() {
        return createdDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateTimeRangeSelectorModel> getCreatedDate_JsonNullable() {
    return createdDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  public void setCreatedDate_JsonNullable(JsonNullable<DateTimeRangeSelectorModel> createdDate) {
    this.createdDate = createdDate;
  }

  public void setCreatedDate(DateTimeRangeSelectorModel createdDate) {
    this.createdDate = JsonNullable.<DateTimeRangeSelectorModel>of(createdDate);
  }


  public TestSuiteWorkItemsSearchModel modifiedDate(DateTimeRangeSelectorModel modifiedDate) {
    this.modifiedDate = JsonNullable.<DateTimeRangeSelectorModel>of(modifiedDate);
    return this;
  }

  /**
   * Specifies a work item range of last modification date to search for
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public DateTimeRangeSelectorModel getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<DateTimeRangeSelectorModel> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<DateTimeRangeSelectorModel> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(DateTimeRangeSelectorModel modifiedDate) {
    this.modifiedDate = JsonNullable.<DateTimeRangeSelectorModel>of(modifiedDate);
  }


  public TestSuiteWorkItemsSearchModel duration(Int32RangeSelectorModel duration) {
    this.duration = JsonNullable.<Int32RangeSelectorModel>of(duration);
    return this;
  }

  /**
   * Specifies a work item duration range to search for
   * @return duration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Int32RangeSelectorModel getDuration() {
        return duration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Int32RangeSelectorModel> getDuration_JsonNullable() {
    return duration;
  }
  
  @JsonProperty(JSON_PROPERTY_DURATION)
  public void setDuration_JsonNullable(JsonNullable<Int32RangeSelectorModel> duration) {
    this.duration = duration;
  }

  public void setDuration(Int32RangeSelectorModel duration) {
    this.duration = JsonNullable.<Int32RangeSelectorModel>of(duration);
  }


  public TestSuiteWorkItemsSearchModel medianDuration(Int64RangeSelectorModel medianDuration) {
    this.medianDuration = JsonNullable.<Int64RangeSelectorModel>of(medianDuration);
    return this;
  }

  /**
   * Specifies a work item median duration range to search for
   * @return medianDuration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Int64RangeSelectorModel getMedianDuration() {
        return medianDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEDIAN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Int64RangeSelectorModel> getMedianDuration_JsonNullable() {
    return medianDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_MEDIAN_DURATION)
  public void setMedianDuration_JsonNullable(JsonNullable<Int64RangeSelectorModel> medianDuration) {
    this.medianDuration = medianDuration;
  }

  public void setMedianDuration(Int64RangeSelectorModel medianDuration) {
    this.medianDuration = JsonNullable.<Int64RangeSelectorModel>of(medianDuration);
  }


  public TestSuiteWorkItemsSearchModel isAutomated(Boolean isAutomated) {
    this.isAutomated = JsonNullable.<Boolean>of(isAutomated);
    return this;
  }

  /**
   * Is result must consist of only manual/automated work items
   * @return isAutomated
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Boolean getIsAutomated() {
        return isAutomated.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Boolean> getIsAutomated_JsonNullable() {
    return isAutomated;
  }
  
  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  public void setIsAutomated_JsonNullable(JsonNullable<Boolean> isAutomated) {
    this.isAutomated = isAutomated;
  }

  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = JsonNullable.<Boolean>of(isAutomated);
  }


  public TestSuiteWorkItemsSearchModel tags(Set<String> tags) {
    this.tags = JsonNullable.<Set<String>>of(tags);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addTagsItem(String tagsItem) {
    if (this.tags == null || !this.tags.isPresent()) {
      this.tags = JsonNullable.<Set<String>>of(new LinkedHashSet<>());
    }
    try {
      this.tags.get().add(tagsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of tags
   * @return tags
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<String> getTags() {
        return tags.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<String>> getTags_JsonNullable() {
    return tags;
  }
  
  @JsonProperty(JSON_PROPERTY_TAGS)
  public void setTags_JsonNullable(JsonNullable<Set<String>> tags) {
    this.tags = tags;
  }

  public void setTags(Set<String> tags) {
    this.tags = JsonNullable.<Set<String>>of(tags);
  }


  public TestSuiteWorkItemsSearchModel autoTestIds(Set<UUID> autoTestIds) {
    this.autoTestIds = JsonNullable.<Set<UUID>>of(autoTestIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addAutoTestIdsItem(UUID autoTestIdsItem) {
    if (this.autoTestIds == null || !this.autoTestIds.isPresent()) {
      this.autoTestIds = JsonNullable.<Set<UUID>>of(new LinkedHashSet<>());
    }
    try {
      this.autoTestIds.get().add(autoTestIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of identifiers of linked autotests
   * @return autoTestIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Set<UUID> getAutoTestIds() {
        return autoTestIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_AUTO_TEST_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Set<UUID>> getAutoTestIds_JsonNullable() {
    return autoTestIds;
  }
  
  @JsonProperty(JSON_PROPERTY_AUTO_TEST_IDS)
  public void setAutoTestIds_JsonNullable(JsonNullable<Set<UUID>> autoTestIds) {
    this.autoTestIds = autoTestIds;
  }

  public void setAutoTestIds(Set<UUID> autoTestIds) {
    this.autoTestIds = JsonNullable.<Set<UUID>>of(autoTestIds);
  }


  public TestSuiteWorkItemsSearchModel workItemVersionIds(List<UUID> workItemVersionIds) {
    this.workItemVersionIds = JsonNullable.<List<UUID>>of(workItemVersionIds);
    return this;
  }

  public TestSuiteWorkItemsSearchModel addWorkItemVersionIdsItem(UUID workItemVersionIdsItem) {
    if (this.workItemVersionIds == null || !this.workItemVersionIds.isPresent()) {
      this.workItemVersionIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.workItemVersionIds.get().add(workItemVersionIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Collection of identifiers work items versions.
   * @return workItemVersionIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<UUID> getWorkItemVersionIds() {
        return workItemVersionIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getWorkItemVersionIds_JsonNullable() {
    return workItemVersionIds;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_VERSION_IDS)
  public void setWorkItemVersionIds_JsonNullable(JsonNullable<List<UUID>> workItemVersionIds) {
    this.workItemVersionIds = workItemVersionIds;
  }

  public void setWorkItemVersionIds(List<UUID> workItemVersionIds) {
    this.workItemVersionIds = JsonNullable.<List<UUID>>of(workItemVersionIds);
  }


  /**
   * Return true if this TestSuiteWorkItemsSearchModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestSuiteWorkItemsSearchModel testSuiteWorkItemsSearchModel = (TestSuiteWorkItemsSearchModel) o;
    return equalsNullable(this.tagNames, testSuiteWorkItemsSearchModel.tagNames) &&
        equalsNullable(this.entityTypes, testSuiteWorkItemsSearchModel.entityTypes) &&
        equalsNullable(this.nameOrId, testSuiteWorkItemsSearchModel.nameOrId) &&
        equalsNullable(this.includeIds, testSuiteWorkItemsSearchModel.includeIds) &&
        equalsNullable(this.excludeIds, testSuiteWorkItemsSearchModel.excludeIds) &&
        equalsNullable(this.projectIds, testSuiteWorkItemsSearchModel.projectIds) &&
        equalsNullable(this.links, testSuiteWorkItemsSearchModel.links) &&
        equalsNullable(this.name, testSuiteWorkItemsSearchModel.name) &&
        equalsNullable(this.ids, testSuiteWorkItemsSearchModel.ids) &&
        equalsNullable(this.globalIds, testSuiteWorkItemsSearchModel.globalIds) &&
        equalsNullable(this.attributes, testSuiteWorkItemsSearchModel.attributes) &&
        equalsNullable(this.isDeleted, testSuiteWorkItemsSearchModel.isDeleted) &&
        equalsNullable(this.sectionIds, testSuiteWorkItemsSearchModel.sectionIds) &&
        equalsNullable(this.createdByIds, testSuiteWorkItemsSearchModel.createdByIds) &&
        equalsNullable(this.modifiedByIds, testSuiteWorkItemsSearchModel.modifiedByIds) &&
        equalsNullable(this.states, testSuiteWorkItemsSearchModel.states) &&
        equalsNullable(this.priorities, testSuiteWorkItemsSearchModel.priorities) &&
        equalsNullable(this.sourceTypes, testSuiteWorkItemsSearchModel.sourceTypes) &&
        equalsNullable(this.types, testSuiteWorkItemsSearchModel.types) &&
        equalsNullable(this.createdDate, testSuiteWorkItemsSearchModel.createdDate) &&
        equalsNullable(this.modifiedDate, testSuiteWorkItemsSearchModel.modifiedDate) &&
        equalsNullable(this.duration, testSuiteWorkItemsSearchModel.duration) &&
        equalsNullable(this.medianDuration, testSuiteWorkItemsSearchModel.medianDuration) &&
        equalsNullable(this.isAutomated, testSuiteWorkItemsSearchModel.isAutomated) &&
        equalsNullable(this.tags, testSuiteWorkItemsSearchModel.tags) &&
        equalsNullable(this.autoTestIds, testSuiteWorkItemsSearchModel.autoTestIds) &&
        equalsNullable(this.workItemVersionIds, testSuiteWorkItemsSearchModel.workItemVersionIds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(hashCodeNullable(tagNames), hashCodeNullable(entityTypes), hashCodeNullable(nameOrId), hashCodeNullable(includeIds), hashCodeNullable(excludeIds), hashCodeNullable(projectIds), hashCodeNullable(links), hashCodeNullable(name), hashCodeNullable(ids), hashCodeNullable(globalIds), hashCodeNullable(attributes), hashCodeNullable(isDeleted), hashCodeNullable(sectionIds), hashCodeNullable(createdByIds), hashCodeNullable(modifiedByIds), hashCodeNullable(states), hashCodeNullable(priorities), hashCodeNullable(sourceTypes), hashCodeNullable(types), hashCodeNullable(createdDate), hashCodeNullable(modifiedDate), hashCodeNullable(duration), hashCodeNullable(medianDuration), hashCodeNullable(isAutomated), hashCodeNullable(tags), hashCodeNullable(autoTestIds), hashCodeNullable(workItemVersionIds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestSuiteWorkItemsSearchModel {\n");
    sb.append("    tagNames: ").append(toIndentedString(tagNames)).append("\n");
    sb.append("    entityTypes: ").append(toIndentedString(entityTypes)).append("\n");
    sb.append("    nameOrId: ").append(toIndentedString(nameOrId)).append("\n");
    sb.append("    includeIds: ").append(toIndentedString(includeIds)).append("\n");
    sb.append("    excludeIds: ").append(toIndentedString(excludeIds)).append("\n");
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    globalIds: ").append(toIndentedString(globalIds)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    sectionIds: ").append(toIndentedString(sectionIds)).append("\n");
    sb.append("    createdByIds: ").append(toIndentedString(createdByIds)).append("\n");
    sb.append("    modifiedByIds: ").append(toIndentedString(modifiedByIds)).append("\n");
    sb.append("    states: ").append(toIndentedString(states)).append("\n");
    sb.append("    priorities: ").append(toIndentedString(priorities)).append("\n");
    sb.append("    sourceTypes: ").append(toIndentedString(sourceTypes)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    medianDuration: ").append(toIndentedString(medianDuration)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    autoTestIds: ").append(toIndentedString(autoTestIds)).append("\n");
    sb.append("    workItemVersionIds: ").append(toIndentedString(workItemVersionIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

