/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.FailureCategory;
import ru.testit.client.model.UpdateFailureClassRegexApiModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * UpdateAutoTestResultReasonProjectApiModel
 */
@JsonPropertyOrder({
  UpdateAutoTestResultReasonProjectApiModel.JSON_PROPERTY_ID,
  UpdateAutoTestResultReasonProjectApiModel.JSON_PROPERTY_NAME,
  UpdateAutoTestResultReasonProjectApiModel.JSON_PROPERTY_FAILURE_CATEGORY,
  UpdateAutoTestResultReasonProjectApiModel.JSON_PROPERTY_FAILURE_CLASS_REGEXES,
  UpdateAutoTestResultReasonProjectApiModel.JSON_PROPERTY_PROJECT_IDS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class UpdateAutoTestResultReasonProjectApiModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_FAILURE_CATEGORY = "failureCategory";
  private FailureCategory failureCategory;

  public static final String JSON_PROPERTY_FAILURE_CLASS_REGEXES = "failureClassRegexes";
  private JsonNullable<List<UpdateFailureClassRegexApiModel>> failureClassRegexes = JsonNullable.<List<UpdateFailureClassRegexApiModel>>undefined();

  public static final String JSON_PROPERTY_PROJECT_IDS = "projectIds";
  private JsonNullable<List<UUID>> projectIds = JsonNullable.<List<UUID>>undefined();

  public UpdateAutoTestResultReasonProjectApiModel() { 
  }

  public UpdateAutoTestResultReasonProjectApiModel id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Failure category identifier
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public UpdateAutoTestResultReasonProjectApiModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Failure category name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public UpdateAutoTestResultReasonProjectApiModel failureCategory(FailureCategory failureCategory) {
    this.failureCategory = failureCategory;
    return this;
  }

  /**
   * Category type
   * @return failureCategory
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FailureCategory getFailureCategory() {
    return failureCategory;
  }


  @JsonProperty(JSON_PROPERTY_FAILURE_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailureCategory(FailureCategory failureCategory) {
    this.failureCategory = failureCategory;
  }


  public UpdateAutoTestResultReasonProjectApiModel failureClassRegexes(List<UpdateFailureClassRegexApiModel> failureClassRegexes) {
    this.failureClassRegexes = JsonNullable.<List<UpdateFailureClassRegexApiModel>>of(failureClassRegexes);
    return this;
  }

  public UpdateAutoTestResultReasonProjectApiModel addFailureClassRegexesItem(UpdateFailureClassRegexApiModel failureClassRegexesItem) {
    if (this.failureClassRegexes == null || !this.failureClassRegexes.isPresent()) {
      this.failureClassRegexes = JsonNullable.<List<UpdateFailureClassRegexApiModel>>of(new ArrayList<>());
    }
    try {
      this.failureClassRegexes.get().add(failureClassRegexesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Failure category regexes
   * @return failureClassRegexes
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<UpdateFailureClassRegexApiModel> getFailureClassRegexes() {
        return failureClassRegexes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_REGEXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UpdateFailureClassRegexApiModel>> getFailureClassRegexes_JsonNullable() {
    return failureClassRegexes;
  }
  
  @JsonProperty(JSON_PROPERTY_FAILURE_CLASS_REGEXES)
  public void setFailureClassRegexes_JsonNullable(JsonNullable<List<UpdateFailureClassRegexApiModel>> failureClassRegexes) {
    this.failureClassRegexes = failureClassRegexes;
  }

  public void setFailureClassRegexes(List<UpdateFailureClassRegexApiModel> failureClassRegexes) {
    this.failureClassRegexes = JsonNullable.<List<UpdateFailureClassRegexApiModel>>of(failureClassRegexes);
  }


  public UpdateAutoTestResultReasonProjectApiModel projectIds(List<UUID> projectIds) {
    this.projectIds = JsonNullable.<List<UUID>>of(projectIds);
    return this;
  }

  public UpdateAutoTestResultReasonProjectApiModel addProjectIdsItem(UUID projectIdsItem) {
    if (this.projectIds == null || !this.projectIds.isPresent()) {
      this.projectIds = JsonNullable.<List<UUID>>of(new ArrayList<>());
    }
    try {
      this.projectIds.get().add(projectIdsItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Projects identifiers
   * @return projectIds
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<UUID> getProjectIds() {
        return projectIds.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_PROJECT_IDS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<UUID>> getProjectIds_JsonNullable() {
    return projectIds;
  }
  
  @JsonProperty(JSON_PROPERTY_PROJECT_IDS)
  public void setProjectIds_JsonNullable(JsonNullable<List<UUID>> projectIds) {
    this.projectIds = projectIds;
  }

  public void setProjectIds(List<UUID> projectIds) {
    this.projectIds = JsonNullable.<List<UUID>>of(projectIds);
  }


  /**
   * Return true if this UpdateAutoTestResultReasonProjectApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAutoTestResultReasonProjectApiModel updateAutoTestResultReasonProjectApiModel = (UpdateAutoTestResultReasonProjectApiModel) o;
    return Objects.equals(this.id, updateAutoTestResultReasonProjectApiModel.id) &&
        Objects.equals(this.name, updateAutoTestResultReasonProjectApiModel.name) &&
        Objects.equals(this.failureCategory, updateAutoTestResultReasonProjectApiModel.failureCategory) &&
        equalsNullable(this.failureClassRegexes, updateAutoTestResultReasonProjectApiModel.failureClassRegexes) &&
        equalsNullable(this.projectIds, updateAutoTestResultReasonProjectApiModel.projectIds);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, failureCategory, hashCodeNullable(failureClassRegexes), hashCodeNullable(projectIds));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAutoTestResultReasonProjectApiModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    failureCategory: ").append(toIndentedString(failureCategory)).append("\n");
    sb.append("    failureClassRegexes: ").append(toIndentedString(failureClassRegexes)).append("\n");
    sb.append("    projectIds: ").append(toIndentedString(projectIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

