/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * UserRankModel
 */
@JsonPropertyOrder({
  UserRankModel.JSON_PROPERTY_SCORE,
  UserRankModel.JSON_PROPERTY_WORK_ITEMS_CREATED,
  UserRankModel.JSON_PROPERTY_PASSED_TEST_POINTS,
  UserRankModel.JSON_PROPERTY_FAILED_TEST_POINTS,
  UserRankModel.JSON_PROPERTY_SKIPPED_TEST_POINTS,
  UserRankModel.JSON_PROPERTY_BLOCKED_TEST_POINTS,
  UserRankModel.JSON_PROPERTY_LEVEL_AVATAR_ENABLED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class UserRankModel {
  public static final String JSON_PROPERTY_SCORE = "score";
  private Integer score;

  public static final String JSON_PROPERTY_WORK_ITEMS_CREATED = "workItemsCreated";
  private Integer workItemsCreated;

  public static final String JSON_PROPERTY_PASSED_TEST_POINTS = "passedTestPoints";
  private Integer passedTestPoints;

  public static final String JSON_PROPERTY_FAILED_TEST_POINTS = "failedTestPoints";
  private Integer failedTestPoints;

  public static final String JSON_PROPERTY_SKIPPED_TEST_POINTS = "skippedTestPoints";
  private Integer skippedTestPoints;

  public static final String JSON_PROPERTY_BLOCKED_TEST_POINTS = "blockedTestPoints";
  private Integer blockedTestPoints;

  public static final String JSON_PROPERTY_LEVEL_AVATAR_ENABLED = "levelAvatarEnabled";
  private Boolean levelAvatarEnabled;

  public UserRankModel() { 
  }

  public UserRankModel score(Integer score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getScore() {
    return score;
  }


  @JsonProperty(JSON_PROPERTY_SCORE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setScore(Integer score) {
    this.score = score;
  }


  public UserRankModel workItemsCreated(Integer workItemsCreated) {
    this.workItemsCreated = workItemsCreated;
    return this;
  }

  /**
   * Get workItemsCreated
   * @return workItemsCreated
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEMS_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWorkItemsCreated() {
    return workItemsCreated;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEMS_CREATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItemsCreated(Integer workItemsCreated) {
    this.workItemsCreated = workItemsCreated;
  }


  public UserRankModel passedTestPoints(Integer passedTestPoints) {
    this.passedTestPoints = passedTestPoints;
    return this;
  }

  /**
   * Get passedTestPoints
   * @return passedTestPoints
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PASSED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getPassedTestPoints() {
    return passedTestPoints;
  }


  @JsonProperty(JSON_PROPERTY_PASSED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPassedTestPoints(Integer passedTestPoints) {
    this.passedTestPoints = passedTestPoints;
  }


  public UserRankModel failedTestPoints(Integer failedTestPoints) {
    this.failedTestPoints = failedTestPoints;
    return this;
  }

  /**
   * Get failedTestPoints
   * @return failedTestPoints
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_FAILED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getFailedTestPoints() {
    return failedTestPoints;
  }


  @JsonProperty(JSON_PROPERTY_FAILED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFailedTestPoints(Integer failedTestPoints) {
    this.failedTestPoints = failedTestPoints;
  }


  public UserRankModel skippedTestPoints(Integer skippedTestPoints) {
    this.skippedTestPoints = skippedTestPoints;
    return this;
  }

  /**
   * Get skippedTestPoints
   * @return skippedTestPoints
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SKIPPED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getSkippedTestPoints() {
    return skippedTestPoints;
  }


  @JsonProperty(JSON_PROPERTY_SKIPPED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSkippedTestPoints(Integer skippedTestPoints) {
    this.skippedTestPoints = skippedTestPoints;
  }


  public UserRankModel blockedTestPoints(Integer blockedTestPoints) {
    this.blockedTestPoints = blockedTestPoints;
    return this;
  }

  /**
   * Get blockedTestPoints
   * @return blockedTestPoints
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BLOCKED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getBlockedTestPoints() {
    return blockedTestPoints;
  }


  @JsonProperty(JSON_PROPERTY_BLOCKED_TEST_POINTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBlockedTestPoints(Integer blockedTestPoints) {
    this.blockedTestPoints = blockedTestPoints;
  }


  public UserRankModel levelAvatarEnabled(Boolean levelAvatarEnabled) {
    this.levelAvatarEnabled = levelAvatarEnabled;
    return this;
  }

  /**
   * Get levelAvatarEnabled
   * @return levelAvatarEnabled
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LEVEL_AVATAR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getLevelAvatarEnabled() {
    return levelAvatarEnabled;
  }


  @JsonProperty(JSON_PROPERTY_LEVEL_AVATAR_ENABLED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLevelAvatarEnabled(Boolean levelAvatarEnabled) {
    this.levelAvatarEnabled = levelAvatarEnabled;
  }


  /**
   * Return true if this UserRankModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserRankModel userRankModel = (UserRankModel) o;
    return Objects.equals(this.score, userRankModel.score) &&
        Objects.equals(this.workItemsCreated, userRankModel.workItemsCreated) &&
        Objects.equals(this.passedTestPoints, userRankModel.passedTestPoints) &&
        Objects.equals(this.failedTestPoints, userRankModel.failedTestPoints) &&
        Objects.equals(this.skippedTestPoints, userRankModel.skippedTestPoints) &&
        Objects.equals(this.blockedTestPoints, userRankModel.blockedTestPoints) &&
        Objects.equals(this.levelAvatarEnabled, userRankModel.levelAvatarEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(score, workItemsCreated, passedTestPoints, failedTestPoints, skippedTestPoints, blockedTestPoints, levelAvatarEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserRankModel {\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    workItemsCreated: ").append(toIndentedString(workItemsCreated)).append("\n");
    sb.append("    passedTestPoints: ").append(toIndentedString(passedTestPoints)).append("\n");
    sb.append("    failedTestPoints: ").append(toIndentedString(failedTestPoints)).append("\n");
    sb.append("    skippedTestPoints: ").append(toIndentedString(skippedTestPoints)).append("\n");
    sb.append("    blockedTestPoints: ").append(toIndentedString(blockedTestPoints)).append("\n");
    sb.append("    levelAvatarEnabled: ").append(toIndentedString(levelAvatarEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

