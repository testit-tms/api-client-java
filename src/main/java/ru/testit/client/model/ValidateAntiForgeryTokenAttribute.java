/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * ValidateAntiForgeryTokenAttribute
 */
@JsonPropertyOrder({
  ValidateAntiForgeryTokenAttribute.JSON_PROPERTY_ORDER,
  ValidateAntiForgeryTokenAttribute.JSON_PROPERTY_IS_REUSABLE,
  ValidateAntiForgeryTokenAttribute.JSON_PROPERTY_TYPE_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class ValidateAntiForgeryTokenAttribute {
  public static final String JSON_PROPERTY_ORDER = "order";
  private Integer order;

  public static final String JSON_PROPERTY_IS_REUSABLE = "isReusable";
  private Boolean isReusable;

  public static final String JSON_PROPERTY_TYPE_ID = "typeId";
  private JsonNullable<Object> typeId = JsonNullable.<Object>of(null);

  public ValidateAntiForgeryTokenAttribute() { 
  }

  @JsonCreator
  public ValidateAntiForgeryTokenAttribute(
    @JsonProperty(JSON_PROPERTY_IS_REUSABLE) Boolean isReusable, 
    @JsonProperty(JSON_PROPERTY_TYPE_ID) Object typeId
  ) {
    this();
    this.isReusable = isReusable;
    this.typeId = JsonNullable.of(typeId);
  }

  public ValidateAntiForgeryTokenAttribute order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getOrder() {
    return order;
  }


  @JsonProperty(JSON_PROPERTY_ORDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setOrder(Integer order) {
    this.order = order;
  }


   /**
   * Get isReusable
   * @return isReusable
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_IS_REUSABLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsReusable() {
    return isReusable;
  }




   /**
   * Get typeId
   * @return typeId
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonIgnore

  public Object getTypeId() {
    
    if (typeId == null) {
      typeId = JsonNullable.<Object>of(null);
    }
    return typeId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TYPE_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Object> getTypeId_JsonNullable() {
    return typeId;
  }
  
  @JsonProperty(JSON_PROPERTY_TYPE_ID)
  private void setTypeId_JsonNullable(JsonNullable<Object> typeId) {
    this.typeId = typeId;
  }



  /**
   * Return true if this ValidateAntiForgeryTokenAttribute object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ValidateAntiForgeryTokenAttribute validateAntiForgeryTokenAttribute = (ValidateAntiForgeryTokenAttribute) o;
    return Objects.equals(this.order, validateAntiForgeryTokenAttribute.order) &&
        Objects.equals(this.isReusable, validateAntiForgeryTokenAttribute.isReusable) &&
        equalsNullable(this.typeId, validateAntiForgeryTokenAttribute.typeId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, isReusable, hashCodeNullable(typeId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ValidateAntiForgeryTokenAttribute {\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    isReusable: ").append(toIndentedString(isReusable)).append("\n");
    sb.append("    typeId: ").append(toIndentedString(typeId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

