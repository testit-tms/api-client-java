/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * WorkItemChangedAttributeViewModel
 */
@JsonPropertyOrder({
  WorkItemChangedAttributeViewModel.JSON_PROPERTY_TYPE,
  WorkItemChangedAttributeViewModel.JSON_PROPERTY_OLD_ATTRIBUTE_NAME,
  WorkItemChangedAttributeViewModel.JSON_PROPERTY_NEW_ATTRIBUTE_NAME,
  WorkItemChangedAttributeViewModel.JSON_PROPERTY_OLD_VALUE,
  WorkItemChangedAttributeViewModel.JSON_PROPERTY_NEW_VALUE
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class WorkItemChangedAttributeViewModel {
  public static final String JSON_PROPERTY_TYPE = "type";
  private String type;

  public static final String JSON_PROPERTY_OLD_ATTRIBUTE_NAME = "oldAttributeName";
  private String oldAttributeName;

  public static final String JSON_PROPERTY_NEW_ATTRIBUTE_NAME = "newAttributeName";
  private String newAttributeName;

  public static final String JSON_PROPERTY_OLD_VALUE = "oldValue";
  private Object oldValue = null;

  public static final String JSON_PROPERTY_NEW_VALUE = "newValue";
  private Object newValue = null;

  public WorkItemChangedAttributeViewModel() { 
  }

  public WorkItemChangedAttributeViewModel type(String type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(String type) {
    this.type = type;
  }


  public WorkItemChangedAttributeViewModel oldAttributeName(String oldAttributeName) {
    this.oldAttributeName = oldAttributeName;
    return this;
  }

  /**
   * Get oldAttributeName
   * @return oldAttributeName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_OLD_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getOldAttributeName() {
    return oldAttributeName;
  }


  @JsonProperty(JSON_PROPERTY_OLD_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOldAttributeName(String oldAttributeName) {
    this.oldAttributeName = oldAttributeName;
  }


  public WorkItemChangedAttributeViewModel newAttributeName(String newAttributeName) {
    this.newAttributeName = newAttributeName;
    return this;
  }

  /**
   * Get newAttributeName
   * @return newAttributeName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NEW_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getNewAttributeName() {
    return newAttributeName;
  }


  @JsonProperty(JSON_PROPERTY_NEW_ATTRIBUTE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewAttributeName(String newAttributeName) {
    this.newAttributeName = newAttributeName;
  }


  public WorkItemChangedAttributeViewModel oldValue(Object oldValue) {
    this.oldValue = oldValue;
    return this;
  }

  /**
   * Get oldValue
   * @return oldValue
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OLD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getOldValue() {
    return oldValue;
  }


  @JsonProperty(JSON_PROPERTY_OLD_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setOldValue(Object oldValue) {
    this.oldValue = oldValue;
  }


  public WorkItemChangedAttributeViewModel newValue(Object newValue) {
    this.newValue = newValue;
    return this;
  }

  /**
   * Get newValue
   * @return newValue
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NEW_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Object getNewValue() {
    return newValue;
  }


  @JsonProperty(JSON_PROPERTY_NEW_VALUE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNewValue(Object newValue) {
    this.newValue = newValue;
  }


  /**
   * Return true if this WorkItemChangedAttributeViewModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemChangedAttributeViewModel workItemChangedAttributeViewModel = (WorkItemChangedAttributeViewModel) o;
    return Objects.equals(this.type, workItemChangedAttributeViewModel.type) &&
        Objects.equals(this.oldAttributeName, workItemChangedAttributeViewModel.oldAttributeName) &&
        Objects.equals(this.newAttributeName, workItemChangedAttributeViewModel.newAttributeName) &&
        Objects.equals(this.oldValue, workItemChangedAttributeViewModel.oldValue) &&
        Objects.equals(this.newValue, workItemChangedAttributeViewModel.newValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, oldAttributeName, newAttributeName, oldValue, newValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemChangedAttributeViewModel {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    oldAttributeName: ").append(toIndentedString(oldAttributeName)).append("\n");
    sb.append("    newAttributeName: ").append(toIndentedString(newAttributeName)).append("\n");
    sb.append("    oldValue: ").append(toIndentedString(oldValue)).append("\n");
    sb.append("    newValue: ").append(toIndentedString(newValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

