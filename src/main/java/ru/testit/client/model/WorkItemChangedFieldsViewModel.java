/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.StringChangedFieldWithDiffsViewModel;
import ru.testit.client.model.WorkItemChangedAttributeViewModel;
import ru.testit.client.model.WorkItemChangedFieldsViewModelAttachments;
import ru.testit.client.model.WorkItemChangedFieldsViewModelAutoTests;
import ru.testit.client.model.WorkItemChangedFieldsViewModelDuration;
import ru.testit.client.model.WorkItemChangedFieldsViewModelGlobalId;
import ru.testit.client.model.WorkItemChangedFieldsViewModelIsDeleted;
import ru.testit.client.model.WorkItemChangedFieldsViewModelLinks;
import ru.testit.client.model.WorkItemChangedFieldsViewModelProjectId;
import ru.testit.client.model.WorkItemChangedFieldsViewModelState;
import ru.testit.client.model.WorkItemChangedFieldsViewModelSteps;
import ru.testit.client.model.WorkItemChangedFieldsViewModelTags;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import ru.testit.client.invoker.JSON;

/**
 * WorkItemChangedFieldsViewModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkItemChangedFieldsViewModel {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private StringChangedFieldWithDiffsViewModel name;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private WorkItemChangedFieldsViewModelIsDeleted isDeleted;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private WorkItemChangedFieldsViewModelProjectId projectId;

  public static final String SERIALIZED_NAME_IS_AUTOMATED = "isAutomated";
  @SerializedName(SERIALIZED_NAME_IS_AUTOMATED)
  private WorkItemChangedFieldsViewModelIsDeleted isAutomated;

  public static final String SERIALIZED_NAME_SECTION_ID = "sectionId";
  @SerializedName(SERIALIZED_NAME_SECTION_ID)
  private WorkItemChangedFieldsViewModelProjectId sectionId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private StringChangedFieldWithDiffsViewModel description;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private WorkItemChangedFieldsViewModelState state;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private WorkItemChangedFieldsViewModelState priority;

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private WorkItemChangedFieldsViewModelDuration duration;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, WorkItemChangedAttributeViewModel> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_STEPS = "steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private WorkItemChangedFieldsViewModelSteps steps;

  public static final String SERIALIZED_NAME_PRECONDITION_STEPS = "preconditionSteps";
  @SerializedName(SERIALIZED_NAME_PRECONDITION_STEPS)
  private WorkItemChangedFieldsViewModelSteps preconditionSteps;

  public static final String SERIALIZED_NAME_POSTCONDITION_STEPS = "postconditionSteps";
  @SerializedName(SERIALIZED_NAME_POSTCONDITION_STEPS)
  private WorkItemChangedFieldsViewModelSteps postconditionSteps;

  public static final String SERIALIZED_NAME_AUTO_TESTS = "autoTests";
  @SerializedName(SERIALIZED_NAME_AUTO_TESTS)
  private WorkItemChangedFieldsViewModelAutoTests autoTests;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private WorkItemChangedFieldsViewModelAttachments attachments;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private WorkItemChangedFieldsViewModelTags tags;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private WorkItemChangedFieldsViewModelLinks links;

  public static final String SERIALIZED_NAME_GLOBAL_ID = "globalId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_ID)
  private WorkItemChangedFieldsViewModelGlobalId globalId;

  public static final String SERIALIZED_NAME_VERSION_NUMBER = "versionNumber";
  @SerializedName(SERIALIZED_NAME_VERSION_NUMBER)
  private WorkItemChangedFieldsViewModelDuration versionNumber;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_NAME = "entityTypeName";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_NAME)
  private WorkItemChangedFieldsViewModelState entityTypeName;

  public WorkItemChangedFieldsViewModel() {
  }

  public WorkItemChangedFieldsViewModel name(StringChangedFieldWithDiffsViewModel name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public StringChangedFieldWithDiffsViewModel getName() {
    return name;
  }


  public void setName(StringChangedFieldWithDiffsViewModel name) {
    this.name = name;
  }


  public WorkItemChangedFieldsViewModel isDeleted(WorkItemChangedFieldsViewModelIsDeleted isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelIsDeleted getIsDeleted() {
    return isDeleted;
  }


  public void setIsDeleted(WorkItemChangedFieldsViewModelIsDeleted isDeleted) {
    this.isDeleted = isDeleted;
  }


  public WorkItemChangedFieldsViewModel projectId(WorkItemChangedFieldsViewModelProjectId projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelProjectId getProjectId() {
    return projectId;
  }


  public void setProjectId(WorkItemChangedFieldsViewModelProjectId projectId) {
    this.projectId = projectId;
  }


  public WorkItemChangedFieldsViewModel isAutomated(WorkItemChangedFieldsViewModelIsDeleted isAutomated) {
    
    this.isAutomated = isAutomated;
    return this;
  }

   /**
   * Get isAutomated
   * @return isAutomated
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelIsDeleted getIsAutomated() {
    return isAutomated;
  }


  public void setIsAutomated(WorkItemChangedFieldsViewModelIsDeleted isAutomated) {
    this.isAutomated = isAutomated;
  }


  public WorkItemChangedFieldsViewModel sectionId(WorkItemChangedFieldsViewModelProjectId sectionId) {
    
    this.sectionId = sectionId;
    return this;
  }

   /**
   * Get sectionId
   * @return sectionId
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelProjectId getSectionId() {
    return sectionId;
  }


  public void setSectionId(WorkItemChangedFieldsViewModelProjectId sectionId) {
    this.sectionId = sectionId;
  }


  public WorkItemChangedFieldsViewModel description(StringChangedFieldWithDiffsViewModel description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  public StringChangedFieldWithDiffsViewModel getDescription() {
    return description;
  }


  public void setDescription(StringChangedFieldWithDiffsViewModel description) {
    this.description = description;
  }


  public WorkItemChangedFieldsViewModel state(WorkItemChangedFieldsViewModelState state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelState getState() {
    return state;
  }


  public void setState(WorkItemChangedFieldsViewModelState state) {
    this.state = state;
  }


  public WorkItemChangedFieldsViewModel priority(WorkItemChangedFieldsViewModelState priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelState getPriority() {
    return priority;
  }


  public void setPriority(WorkItemChangedFieldsViewModelState priority) {
    this.priority = priority;
  }


  public WorkItemChangedFieldsViewModel duration(WorkItemChangedFieldsViewModelDuration duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelDuration getDuration() {
    return duration;
  }


  public void setDuration(WorkItemChangedFieldsViewModelDuration duration) {
    this.duration = duration;
  }


  public WorkItemChangedFieldsViewModel attributes(Map<String, WorkItemChangedAttributeViewModel> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public WorkItemChangedFieldsViewModel putAttributesItem(String key, WorkItemChangedAttributeViewModel attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nonnull
  public Map<String, WorkItemChangedAttributeViewModel> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, WorkItemChangedAttributeViewModel> attributes) {
    this.attributes = attributes;
  }


  public WorkItemChangedFieldsViewModel steps(WorkItemChangedFieldsViewModelSteps steps) {
    
    this.steps = steps;
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelSteps getSteps() {
    return steps;
  }


  public void setSteps(WorkItemChangedFieldsViewModelSteps steps) {
    this.steps = steps;
  }


  public WorkItemChangedFieldsViewModel preconditionSteps(WorkItemChangedFieldsViewModelSteps preconditionSteps) {
    
    this.preconditionSteps = preconditionSteps;
    return this;
  }

   /**
   * Get preconditionSteps
   * @return preconditionSteps
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelSteps getPreconditionSteps() {
    return preconditionSteps;
  }


  public void setPreconditionSteps(WorkItemChangedFieldsViewModelSteps preconditionSteps) {
    this.preconditionSteps = preconditionSteps;
  }


  public WorkItemChangedFieldsViewModel postconditionSteps(WorkItemChangedFieldsViewModelSteps postconditionSteps) {
    
    this.postconditionSteps = postconditionSteps;
    return this;
  }

   /**
   * Get postconditionSteps
   * @return postconditionSteps
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelSteps getPostconditionSteps() {
    return postconditionSteps;
  }


  public void setPostconditionSteps(WorkItemChangedFieldsViewModelSteps postconditionSteps) {
    this.postconditionSteps = postconditionSteps;
  }


  public WorkItemChangedFieldsViewModel autoTests(WorkItemChangedFieldsViewModelAutoTests autoTests) {
    
    this.autoTests = autoTests;
    return this;
  }

   /**
   * Get autoTests
   * @return autoTests
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelAutoTests getAutoTests() {
    return autoTests;
  }


  public void setAutoTests(WorkItemChangedFieldsViewModelAutoTests autoTests) {
    this.autoTests = autoTests;
  }


  public WorkItemChangedFieldsViewModel attachments(WorkItemChangedFieldsViewModelAttachments attachments) {
    
    this.attachments = attachments;
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelAttachments getAttachments() {
    return attachments;
  }


  public void setAttachments(WorkItemChangedFieldsViewModelAttachments attachments) {
    this.attachments = attachments;
  }


  public WorkItemChangedFieldsViewModel tags(WorkItemChangedFieldsViewModelTags tags) {
    
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelTags getTags() {
    return tags;
  }


  public void setTags(WorkItemChangedFieldsViewModelTags tags) {
    this.tags = tags;
  }


  public WorkItemChangedFieldsViewModel links(WorkItemChangedFieldsViewModelLinks links) {
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelLinks getLinks() {
    return links;
  }


  public void setLinks(WorkItemChangedFieldsViewModelLinks links) {
    this.links = links;
  }


  public WorkItemChangedFieldsViewModel globalId(WorkItemChangedFieldsViewModelGlobalId globalId) {
    
    this.globalId = globalId;
    return this;
  }

   /**
   * Get globalId
   * @return globalId
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelGlobalId getGlobalId() {
    return globalId;
  }


  public void setGlobalId(WorkItemChangedFieldsViewModelGlobalId globalId) {
    this.globalId = globalId;
  }


  public WorkItemChangedFieldsViewModel versionNumber(WorkItemChangedFieldsViewModelDuration versionNumber) {
    
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * Get versionNumber
   * @return versionNumber
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelDuration getVersionNumber() {
    return versionNumber;
  }


  public void setVersionNumber(WorkItemChangedFieldsViewModelDuration versionNumber) {
    this.versionNumber = versionNumber;
  }


  public WorkItemChangedFieldsViewModel entityTypeName(WorkItemChangedFieldsViewModelState entityTypeName) {
    
    this.entityTypeName = entityTypeName;
    return this;
  }

   /**
   * Get entityTypeName
   * @return entityTypeName
  **/
  @javax.annotation.Nonnull
  public WorkItemChangedFieldsViewModelState getEntityTypeName() {
    return entityTypeName;
  }


  public void setEntityTypeName(WorkItemChangedFieldsViewModelState entityTypeName) {
    this.entityTypeName = entityTypeName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemChangedFieldsViewModel workItemChangedFieldsViewModel = (WorkItemChangedFieldsViewModel) o;
    return Objects.equals(this.name, workItemChangedFieldsViewModel.name) &&
        Objects.equals(this.isDeleted, workItemChangedFieldsViewModel.isDeleted) &&
        Objects.equals(this.projectId, workItemChangedFieldsViewModel.projectId) &&
        Objects.equals(this.isAutomated, workItemChangedFieldsViewModel.isAutomated) &&
        Objects.equals(this.sectionId, workItemChangedFieldsViewModel.sectionId) &&
        Objects.equals(this.description, workItemChangedFieldsViewModel.description) &&
        Objects.equals(this.state, workItemChangedFieldsViewModel.state) &&
        Objects.equals(this.priority, workItemChangedFieldsViewModel.priority) &&
        Objects.equals(this.duration, workItemChangedFieldsViewModel.duration) &&
        Objects.equals(this.attributes, workItemChangedFieldsViewModel.attributes) &&
        Objects.equals(this.steps, workItemChangedFieldsViewModel.steps) &&
        Objects.equals(this.preconditionSteps, workItemChangedFieldsViewModel.preconditionSteps) &&
        Objects.equals(this.postconditionSteps, workItemChangedFieldsViewModel.postconditionSteps) &&
        Objects.equals(this.autoTests, workItemChangedFieldsViewModel.autoTests) &&
        Objects.equals(this.attachments, workItemChangedFieldsViewModel.attachments) &&
        Objects.equals(this.tags, workItemChangedFieldsViewModel.tags) &&
        Objects.equals(this.links, workItemChangedFieldsViewModel.links) &&
        Objects.equals(this.globalId, workItemChangedFieldsViewModel.globalId) &&
        Objects.equals(this.versionNumber, workItemChangedFieldsViewModel.versionNumber) &&
        Objects.equals(this.entityTypeName, workItemChangedFieldsViewModel.entityTypeName);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, isDeleted, projectId, isAutomated, sectionId, description, state, priority, duration, attributes, steps, preconditionSteps, postconditionSteps, autoTests, attachments, tags, links, globalId, versionNumber, entityTypeName);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemChangedFieldsViewModel {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    preconditionSteps: ").append(toIndentedString(preconditionSteps)).append("\n");
    sb.append("    postconditionSteps: ").append(toIndentedString(postconditionSteps)).append("\n");
    sb.append("    autoTests: ").append(toIndentedString(autoTests)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    entityTypeName: ").append(toIndentedString(entityTypeName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("isDeleted");
    openapiFields.add("projectId");
    openapiFields.add("isAutomated");
    openapiFields.add("sectionId");
    openapiFields.add("description");
    openapiFields.add("state");
    openapiFields.add("priority");
    openapiFields.add("duration");
    openapiFields.add("attributes");
    openapiFields.add("steps");
    openapiFields.add("preconditionSteps");
    openapiFields.add("postconditionSteps");
    openapiFields.add("autoTests");
    openapiFields.add("attachments");
    openapiFields.add("tags");
    openapiFields.add("links");
    openapiFields.add("globalId");
    openapiFields.add("versionNumber");
    openapiFields.add("entityTypeName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("isDeleted");
    openapiRequiredFields.add("projectId");
    openapiRequiredFields.add("isAutomated");
    openapiRequiredFields.add("sectionId");
    openapiRequiredFields.add("state");
    openapiRequiredFields.add("priority");
    openapiRequiredFields.add("duration");
    openapiRequiredFields.add("attributes");
    openapiRequiredFields.add("steps");
    openapiRequiredFields.add("preconditionSteps");
    openapiRequiredFields.add("postconditionSteps");
    openapiRequiredFields.add("autoTests");
    openapiRequiredFields.add("attachments");
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("links");
    openapiRequiredFields.add("globalId");
    openapiRequiredFields.add("versionNumber");
    openapiRequiredFields.add("entityTypeName");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkItemChangedFieldsViewModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkItemChangedFieldsViewModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkItemChangedFieldsViewModel is not found in the empty JSON string", WorkItemChangedFieldsViewModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WorkItemChangedFieldsViewModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkItemChangedFieldsViewModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WorkItemChangedFieldsViewModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        StringChangedFieldWithDiffsViewModel.validateJsonObject(jsonObj.getAsJsonObject("name"));
      }
      // validate the required field `isDeleted`
      WorkItemChangedFieldsViewModelIsDeleted.validateJsonObject(jsonObj.getAsJsonObject("isDeleted"));
      // validate the required field `projectId`
      WorkItemChangedFieldsViewModelProjectId.validateJsonObject(jsonObj.getAsJsonObject("projectId"));
      // validate the required field `isAutomated`
      WorkItemChangedFieldsViewModelIsDeleted.validateJsonObject(jsonObj.getAsJsonObject("isAutomated"));
      // validate the required field `sectionId`
      WorkItemChangedFieldsViewModelProjectId.validateJsonObject(jsonObj.getAsJsonObject("sectionId"));
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        StringChangedFieldWithDiffsViewModel.validateJsonObject(jsonObj.getAsJsonObject("description"));
      }
      // validate the required field `state`
      WorkItemChangedFieldsViewModelState.validateJsonObject(jsonObj.getAsJsonObject("state"));
      // validate the required field `priority`
      WorkItemChangedFieldsViewModelState.validateJsonObject(jsonObj.getAsJsonObject("priority"));
      // validate the required field `duration`
      WorkItemChangedFieldsViewModelDuration.validateJsonObject(jsonObj.getAsJsonObject("duration"));
      // validate the required field `steps`
      WorkItemChangedFieldsViewModelSteps.validateJsonObject(jsonObj.getAsJsonObject("steps"));
      // validate the required field `preconditionSteps`
      WorkItemChangedFieldsViewModelSteps.validateJsonObject(jsonObj.getAsJsonObject("preconditionSteps"));
      // validate the required field `postconditionSteps`
      WorkItemChangedFieldsViewModelSteps.validateJsonObject(jsonObj.getAsJsonObject("postconditionSteps"));
      // validate the required field `autoTests`
      WorkItemChangedFieldsViewModelAutoTests.validateJsonObject(jsonObj.getAsJsonObject("autoTests"));
      // validate the required field `attachments`
      WorkItemChangedFieldsViewModelAttachments.validateJsonObject(jsonObj.getAsJsonObject("attachments"));
      // validate the required field `tags`
      WorkItemChangedFieldsViewModelTags.validateJsonObject(jsonObj.getAsJsonObject("tags"));
      // validate the required field `links`
      WorkItemChangedFieldsViewModelLinks.validateJsonObject(jsonObj.getAsJsonObject("links"));
      // validate the required field `globalId`
      WorkItemChangedFieldsViewModelGlobalId.validateJsonObject(jsonObj.getAsJsonObject("globalId"));
      // validate the required field `versionNumber`
      WorkItemChangedFieldsViewModelDuration.validateJsonObject(jsonObj.getAsJsonObject("versionNumber"));
      // validate the required field `entityTypeName`
      WorkItemChangedFieldsViewModelState.validateJsonObject(jsonObj.getAsJsonObject("entityTypeName"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkItemChangedFieldsViewModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkItemChangedFieldsViewModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkItemChangedFieldsViewModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkItemChangedFieldsViewModel.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkItemChangedFieldsViewModel>() {
           @Override
           public void write(JsonWriter out, WorkItemChangedFieldsViewModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkItemChangedFieldsViewModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkItemChangedFieldsViewModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkItemChangedFieldsViewModel
  * @throws IOException if the JSON string is invalid with respect to WorkItemChangedFieldsViewModel
  */
  public static WorkItemChangedFieldsViewModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkItemChangedFieldsViewModel.class);
  }

 /**
  * Convert an instance of WorkItemChangedFieldsViewModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

