/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.LinkedHashSet;
import java.util.List;
import java.util.Set;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * Rules for different level entities inclusion/exclusion
 */
@ApiModel(description = "Rules for different level entities inclusion/exclusion")
@JsonPropertyOrder({
  WorkItemExtractionModel.JSON_PROPERTY_INCLUDE_WORK_ITEMS,
  WorkItemExtractionModel.JSON_PROPERTY_INCLUDE_SECTIONS,
  WorkItemExtractionModel.JSON_PROPERTY_INCLUDE_PROJECTS,
  WorkItemExtractionModel.JSON_PROPERTY_EXCLUDE_WORK_ITEMS,
  WorkItemExtractionModel.JSON_PROPERTY_EXCLUDE_SECTIONS,
  WorkItemExtractionModel.JSON_PROPERTY_EXCLUDE_PROJECTS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkItemExtractionModel {
  public static final String JSON_PROPERTY_INCLUDE_WORK_ITEMS = "includeWorkItems";
  private Set<UUID> includeWorkItems = null;

  public static final String JSON_PROPERTY_INCLUDE_SECTIONS = "includeSections";
  private Set<UUID> includeSections = null;

  public static final String JSON_PROPERTY_INCLUDE_PROJECTS = "includeProjects";
  private Set<UUID> includeProjects = null;

  public static final String JSON_PROPERTY_EXCLUDE_WORK_ITEMS = "excludeWorkItems";
  private Set<UUID> excludeWorkItems = null;

  public static final String JSON_PROPERTY_EXCLUDE_SECTIONS = "excludeSections";
  private Set<UUID> excludeSections = null;

  public static final String JSON_PROPERTY_EXCLUDE_PROJECTS = "excludeProjects";
  private Set<UUID> excludeProjects = null;

  public WorkItemExtractionModel() { 
  }

  public WorkItemExtractionModel includeWorkItems(Set<UUID> includeWorkItems) {
    this.includeWorkItems = includeWorkItems;
    return this;
  }

  public WorkItemExtractionModel addIncludeWorkItemsItem(UUID includeWorkItemsItem) {
    if (this.includeWorkItems == null) {
      this.includeWorkItems = new LinkedHashSet<>();
    }
    this.includeWorkItems.add(includeWorkItemsItem);
    return this;
  }

   /**
   * Identifiers of work items to be included
   * @return includeWorkItems
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of work items to be included")
  @JsonProperty(JSON_PROPERTY_INCLUDE_WORK_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getIncludeWorkItems() {
    return includeWorkItems;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_INCLUDE_WORK_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeWorkItems(Set<UUID> includeWorkItems) {
    this.includeWorkItems = includeWorkItems;
  }


  public WorkItemExtractionModel includeSections(Set<UUID> includeSections) {
    this.includeSections = includeSections;
    return this;
  }

  public WorkItemExtractionModel addIncludeSectionsItem(UUID includeSectionsItem) {
    if (this.includeSections == null) {
      this.includeSections = new LinkedHashSet<>();
    }
    this.includeSections.add(includeSectionsItem);
    return this;
  }

   /**
   * Identifiers of sections to be included
   * @return includeSections
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of sections to be included")
  @JsonProperty(JSON_PROPERTY_INCLUDE_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getIncludeSections() {
    return includeSections;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_INCLUDE_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeSections(Set<UUID> includeSections) {
    this.includeSections = includeSections;
  }


  public WorkItemExtractionModel includeProjects(Set<UUID> includeProjects) {
    this.includeProjects = includeProjects;
    return this;
  }

  public WorkItemExtractionModel addIncludeProjectsItem(UUID includeProjectsItem) {
    if (this.includeProjects == null) {
      this.includeProjects = new LinkedHashSet<>();
    }
    this.includeProjects.add(includeProjectsItem);
    return this;
  }

   /**
   * Identifiers of projects to be included
   * @return includeProjects
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of projects to be included")
  @JsonProperty(JSON_PROPERTY_INCLUDE_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getIncludeProjects() {
    return includeProjects;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_INCLUDE_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIncludeProjects(Set<UUID> includeProjects) {
    this.includeProjects = includeProjects;
  }


  public WorkItemExtractionModel excludeWorkItems(Set<UUID> excludeWorkItems) {
    this.excludeWorkItems = excludeWorkItems;
    return this;
  }

  public WorkItemExtractionModel addExcludeWorkItemsItem(UUID excludeWorkItemsItem) {
    if (this.excludeWorkItems == null) {
      this.excludeWorkItems = new LinkedHashSet<>();
    }
    this.excludeWorkItems.add(excludeWorkItemsItem);
    return this;
  }

   /**
   * Identifiers of work items to be excluded
   * @return excludeWorkItems
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of work items to be excluded")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_WORK_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getExcludeWorkItems() {
    return excludeWorkItems;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXCLUDE_WORK_ITEMS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeWorkItems(Set<UUID> excludeWorkItems) {
    this.excludeWorkItems = excludeWorkItems;
  }


  public WorkItemExtractionModel excludeSections(Set<UUID> excludeSections) {
    this.excludeSections = excludeSections;
    return this;
  }

  public WorkItemExtractionModel addExcludeSectionsItem(UUID excludeSectionsItem) {
    if (this.excludeSections == null) {
      this.excludeSections = new LinkedHashSet<>();
    }
    this.excludeSections.add(excludeSectionsItem);
    return this;
  }

   /**
   * Identifiers of sections to be excluded
   * @return excludeSections
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of sections to be excluded")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getExcludeSections() {
    return excludeSections;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXCLUDE_SECTIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeSections(Set<UUID> excludeSections) {
    this.excludeSections = excludeSections;
  }


  public WorkItemExtractionModel excludeProjects(Set<UUID> excludeProjects) {
    this.excludeProjects = excludeProjects;
    return this;
  }

  public WorkItemExtractionModel addExcludeProjectsItem(UUID excludeProjectsItem) {
    if (this.excludeProjects == null) {
      this.excludeProjects = new LinkedHashSet<>();
    }
    this.excludeProjects.add(excludeProjectsItem);
    return this;
  }

   /**
   * Identifiers of projects to be excluded
   * @return excludeProjects
  **/
  @jakarta.annotation.Nullable
  @ApiModelProperty(value = "Identifiers of projects to be excluded")
  @JsonProperty(JSON_PROPERTY_EXCLUDE_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Set<UUID> getExcludeProjects() {
    return excludeProjects;
  }


  @JsonDeserialize(as = LinkedHashSet.class)
  @JsonProperty(JSON_PROPERTY_EXCLUDE_PROJECTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setExcludeProjects(Set<UUID> excludeProjects) {
    this.excludeProjects = excludeProjects;
  }


  /**
   * Return true if this WorkItemExtractionModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemExtractionModel workItemExtractionModel = (WorkItemExtractionModel) o;
    return Objects.equals(this.includeWorkItems, workItemExtractionModel.includeWorkItems) &&
        Objects.equals(this.includeSections, workItemExtractionModel.includeSections) &&
        Objects.equals(this.includeProjects, workItemExtractionModel.includeProjects) &&
        Objects.equals(this.excludeWorkItems, workItemExtractionModel.excludeWorkItems) &&
        Objects.equals(this.excludeSections, workItemExtractionModel.excludeSections) &&
        Objects.equals(this.excludeProjects, workItemExtractionModel.excludeProjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeWorkItems, includeSections, includeProjects, excludeWorkItems, excludeSections, excludeProjects);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemExtractionModel {\n");
    sb.append("    includeWorkItems: ").append(toIndentedString(includeWorkItems)).append("\n");
    sb.append("    includeSections: ").append(toIndentedString(includeSections)).append("\n");
    sb.append("    includeProjects: ").append(toIndentedString(includeProjects)).append("\n");
    sb.append("    excludeWorkItems: ").append(toIndentedString(excludeWorkItems)).append("\n");
    sb.append("    excludeSections: ").append(toIndentedString(excludeSections)).append("\n");
    sb.append("    excludeProjects: ").append(toIndentedString(excludeProjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

