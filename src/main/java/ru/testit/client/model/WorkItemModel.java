/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.invoker.JSON;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;
import java.util.Map.Entry;

/**
 * WorkItemModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkItemModel {
  public static final String SERIALIZED_NAME_VERSION_ID = "versionId";
  @SerializedName(SERIALIZED_NAME_VERSION_ID)
  private UUID versionId;

  public static final String SERIALIZED_NAME_MEDIAN_DURATION = "medianDuration";
  @SerializedName(SERIALIZED_NAME_MEDIAN_DURATION)
  private Long medianDuration;

  public static final String SERIALIZED_NAME_IS_DELETED = "isDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_PROJECT_ID = "projectId";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private UUID projectId;

  public static final String SERIALIZED_NAME_ENTITY_TYPE_NAME = "entityTypeName";
  @SerializedName(SERIALIZED_NAME_ENTITY_TYPE_NAME)
  private WorkItemEntityTypes entityTypeName;

  public static final String SERIALIZED_NAME_IS_AUTOMATED = "isAutomated";
  @SerializedName(SERIALIZED_NAME_IS_AUTOMATED)
  private Boolean isAutomated;

  public static final String SERIALIZED_NAME_AUTO_TESTS = "autoTests";
  @SerializedName(SERIALIZED_NAME_AUTO_TESTS)
  private List<AutoTestModel> autoTests = null;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<AttachmentModel> attachments = null;

  public static final String SERIALIZED_NAME_SECTION_PRECONDITION_STEPS = "sectionPreconditionSteps";
  @SerializedName(SERIALIZED_NAME_SECTION_PRECONDITION_STEPS)
  private List<StepModel> sectionPreconditionSteps = null;

  public static final String SERIALIZED_NAME_SECTION_POSTCONDITION_STEPS = "sectionPostconditionSteps";
  @SerializedName(SERIALIZED_NAME_SECTION_POSTCONDITION_STEPS)
  private List<StepModel> sectionPostconditionSteps = null;

  public static final String SERIALIZED_NAME_VERSION_NUMBER = "versionNumber";
  @SerializedName(SERIALIZED_NAME_VERSION_NUMBER)
  private Integer versionNumber;

  public static final String SERIALIZED_NAME_ITERATIONS = "iterations";
  @SerializedName(SERIALIZED_NAME_ITERATIONS)
  private List<IterationModel> iterations = null;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_CREATED_BY_ID = "createdById";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_ID)
  private UUID createdById;

  public static final String SERIALIZED_NAME_MODIFIED_BY_ID = "modifiedById";
  @SerializedName(SERIALIZED_NAME_MODIFIED_BY_ID)
  private UUID modifiedById;

  public static final String SERIALIZED_NAME_GLOBAL_ID = "globalId";
  @SerializedName(SERIALIZED_NAME_GLOBAL_ID)
  private Long globalId;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_SECTION_ID = "sectionId";
  @SerializedName(SERIALIZED_NAME_SECTION_ID)
  private UUID sectionId;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private WorkItemStates state;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private WorkItemPriorityModel priority;

  public static final String SERIALIZED_NAME_STEPS = "steps";
  @SerializedName(SERIALIZED_NAME_STEPS)
  private List<StepModel> steps = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRECONDITION_STEPS = "preconditionSteps";
  @SerializedName(SERIALIZED_NAME_PRECONDITION_STEPS)
  private List<StepModel> preconditionSteps = new ArrayList<>();

  public static final String SERIALIZED_NAME_POSTCONDITION_STEPS = "postconditionSteps";
  @SerializedName(SERIALIZED_NAME_POSTCONDITION_STEPS)
  private List<StepModel> postconditionSteps = new ArrayList<>();

  public static final String SERIALIZED_NAME_DURATION = "duration";
  @SerializedName(SERIALIZED_NAME_DURATION)
  private Integer duration;

  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private Map<String, Object> attributes = new HashMap<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<TagShortModel> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<LinkModel> links = new ArrayList<>();

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public WorkItemModel() {
  }

  public WorkItemModel versionId(UUID versionId) {
    
    this.versionId = versionId;
    return this;
  }

   /**
   * used for versioning changes in workitem
   * @return versionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "da46bde3-b022-44d3-8b4f-28783aca8944", value = "used for versioning changes in workitem")

  public UUID getVersionId() {
    return versionId;
  }


  public void setVersionId(UUID versionId) {
    this.versionId = versionId;
  }


  public WorkItemModel medianDuration(Long medianDuration) {
    
    this.medianDuration = medianDuration;
    return this;
  }

   /**
   * used for getting a median duration of all autotests related to this workitem
   * @return medianDuration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10000", value = "used for getting a median duration of all autotests related to this workitem")

  public Long getMedianDuration() {
    return medianDuration;
  }


  public void setMedianDuration(Long medianDuration) {
    this.medianDuration = medianDuration;
  }


  public WorkItemModel isDeleted(Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public WorkItemModel projectId(UUID projectId) {
    
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "da46bde3-b022-44d3-8b4f-28783aca8944", value = "")

  public UUID getProjectId() {
    return projectId;
  }


  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public WorkItemModel entityTypeName(WorkItemEntityTypes entityTypeName) {
    
    this.entityTypeName = entityTypeName;
    return this;
  }

   /**
   * Get entityTypeName
   * @return entityTypeName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public WorkItemEntityTypes getEntityTypeName() {
    return entityTypeName;
  }


  public void setEntityTypeName(WorkItemEntityTypes entityTypeName) {
    this.entityTypeName = entityTypeName;
  }


  public WorkItemModel isAutomated(Boolean isAutomated) {
    
    this.isAutomated = isAutomated;
    return this;
  }

   /**
   * Get isAutomated
   * @return isAutomated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "true", value = "")

  public Boolean getIsAutomated() {
    return isAutomated;
  }


  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }


  public WorkItemModel autoTests(List<AutoTestModel> autoTests) {
    
    this.autoTests = autoTests;
    return this;
  }

  public WorkItemModel addAutoTestsItem(AutoTestModel autoTestsItem) {
    if (this.autoTests == null) {
      this.autoTests = new ArrayList<>();
    }
    this.autoTests.add(autoTestsItem);
    return this;
  }

   /**
   * Get autoTests
   * @return autoTests
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AutoTestModel> getAutoTests() {
    return autoTests;
  }


  public void setAutoTests(List<AutoTestModel> autoTests) {
    this.autoTests = autoTests;
  }


  public WorkItemModel attachments(List<AttachmentModel> attachments) {
    
    this.attachments = attachments;
    return this;
  }

  public WorkItemModel addAttachmentsItem(AttachmentModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<AttachmentModel> getAttachments() {
    return attachments;
  }


  public void setAttachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
  }


  public WorkItemModel sectionPreconditionSteps(List<StepModel> sectionPreconditionSteps) {
    
    this.sectionPreconditionSteps = sectionPreconditionSteps;
    return this;
  }

  public WorkItemModel addSectionPreconditionStepsItem(StepModel sectionPreconditionStepsItem) {
    if (this.sectionPreconditionSteps == null) {
      this.sectionPreconditionSteps = new ArrayList<>();
    }
    this.sectionPreconditionSteps.add(sectionPreconditionStepsItem);
    return this;
  }

   /**
   * Get sectionPreconditionSteps
   * @return sectionPreconditionSteps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StepModel> getSectionPreconditionSteps() {
    return sectionPreconditionSteps;
  }


  public void setSectionPreconditionSteps(List<StepModel> sectionPreconditionSteps) {
    this.sectionPreconditionSteps = sectionPreconditionSteps;
  }


  public WorkItemModel sectionPostconditionSteps(List<StepModel> sectionPostconditionSteps) {
    
    this.sectionPostconditionSteps = sectionPostconditionSteps;
    return this;
  }

  public WorkItemModel addSectionPostconditionStepsItem(StepModel sectionPostconditionStepsItem) {
    if (this.sectionPostconditionSteps == null) {
      this.sectionPostconditionSteps = new ArrayList<>();
    }
    this.sectionPostconditionSteps.add(sectionPostconditionStepsItem);
    return this;
  }

   /**
   * Get sectionPostconditionSteps
   * @return sectionPostconditionSteps
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StepModel> getSectionPostconditionSteps() {
    return sectionPostconditionSteps;
  }


  public void setSectionPostconditionSteps(List<StepModel> sectionPostconditionSteps) {
    this.sectionPostconditionSteps = sectionPostconditionSteps;
  }


  public WorkItemModel versionNumber(Integer versionNumber) {
    
    this.versionNumber = versionNumber;
    return this;
  }

   /**
   * used for define chronology of workitem state in each version
   * @return versionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10", value = "used for define chronology of workitem state in each version")

  public Integer getVersionNumber() {
    return versionNumber;
  }


  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }


  public WorkItemModel iterations(List<IterationModel> iterations) {
    
    this.iterations = iterations;
    return this;
  }

  public WorkItemModel addIterationsItem(IterationModel iterationsItem) {
    if (this.iterations == null) {
      this.iterations = new ArrayList<>();
    }
    this.iterations.add(iterationsItem);
    return this;
  }

   /**
   * Get iterations
   * @return iterations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<IterationModel> getIterations() {
    return iterations;
  }


  public void setIterations(List<IterationModel> iterations) {
    this.iterations = iterations;
  }


  public WorkItemModel createdDate(OffsetDateTime createdDate) {
    
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-01-17T16:49:51.791323Z", value = "")

  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }


  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public WorkItemModel modifiedDate(OffsetDateTime modifiedDate) {
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2023-01-17T16:49:51.791323Z", value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }


  public WorkItemModel createdById(UUID createdById) {
    
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "da46bde3-b022-44d3-8b4f-28783aca8944", value = "")

  public UUID getCreatedById() {
    return createdById;
  }


  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public WorkItemModel modifiedById(UUID modifiedById) {
    
    this.modifiedById = modifiedById;
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "da46bde3-b022-44d3-8b4f-28783aca8944", value = "")

  public UUID getModifiedById() {
    return modifiedById;
  }


  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
  }


  public WorkItemModel globalId(Long globalId) {
    
    this.globalId = globalId;
    return this;
  }

   /**
   * Get globalId
   * @return globalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1000", value = "")

  public Long getGlobalId() {
    return globalId;
  }


  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }


  public WorkItemModel id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "da46bde3-b022-44d3-8b4f-28783aca8944", value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public WorkItemModel sectionId(UUID sectionId) {
    
    this.sectionId = sectionId;
    return this;
  }

   /**
   * Get sectionId
   * @return sectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "da46bde3-b022-44d3-8b4f-28783aca8944", value = "")

  public UUID getSectionId() {
    return sectionId;
  }


  public void setSectionId(UUID sectionId) {
    this.sectionId = sectionId;
  }


  public WorkItemModel description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "This is a basic test template", value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public WorkItemModel state(WorkItemStates state) {
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public WorkItemStates getState() {
    return state;
  }


  public void setState(WorkItemStates state) {
    this.state = state;
  }


  public WorkItemModel priority(WorkItemPriorityModel priority) {
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public WorkItemPriorityModel getPriority() {
    return priority;
  }


  public void setPriority(WorkItemPriorityModel priority) {
    this.priority = priority;
  }


  public WorkItemModel steps(List<StepModel> steps) {
    
    this.steps = steps;
    return this;
  }

  public WorkItemModel addStepsItem(StepModel stepsItem) {
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<StepModel> getSteps() {
    return steps;
  }


  public void setSteps(List<StepModel> steps) {
    this.steps = steps;
  }


  public WorkItemModel preconditionSteps(List<StepModel> preconditionSteps) {
    
    this.preconditionSteps = preconditionSteps;
    return this;
  }

  public WorkItemModel addPreconditionStepsItem(StepModel preconditionStepsItem) {
    this.preconditionSteps.add(preconditionStepsItem);
    return this;
  }

   /**
   * Get preconditionSteps
   * @return preconditionSteps
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<StepModel> getPreconditionSteps() {
    return preconditionSteps;
  }


  public void setPreconditionSteps(List<StepModel> preconditionSteps) {
    this.preconditionSteps = preconditionSteps;
  }


  public WorkItemModel postconditionSteps(List<StepModel> postconditionSteps) {
    
    this.postconditionSteps = postconditionSteps;
    return this;
  }

  public WorkItemModel addPostconditionStepsItem(StepModel postconditionStepsItem) {
    this.postconditionSteps.add(postconditionStepsItem);
    return this;
  }

   /**
   * Get postconditionSteps
   * @return postconditionSteps
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<StepModel> getPostconditionSteps() {
    return postconditionSteps;
  }


  public void setPostconditionSteps(List<StepModel> postconditionSteps) {
    this.postconditionSteps = postconditionSteps;
  }


  public WorkItemModel duration(Integer duration) {
    
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * minimum: 0
   * maximum: 86400
   * @return duration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "10000", value = "")

  public Integer getDuration() {
    return duration;
  }


  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public WorkItemModel attributes(Map<String, Object> attributes) {
    
    this.attributes = attributes;
    return this;
  }

  public WorkItemModel putAttributesItem(String key, Object attributesItem) {
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Map<String, Object> getAttributes() {
    return attributes;
  }


  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  public WorkItemModel tags(List<TagShortModel> tags) {
    
    this.tags = tags;
    return this;
  }

  public WorkItemModel addTagsItem(TagShortModel tagsItem) {
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<TagShortModel> getTags() {
    return tags;
  }


  public void setTags(List<TagShortModel> tags) {
    this.tags = tags;
  }


  public WorkItemModel links(List<LinkModel> links) {
    
    this.links = links;
    return this;
  }

  public WorkItemModel addLinksItem(LinkModel linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public List<LinkModel> getLinks() {
    return links;
  }


  public void setLinks(List<LinkModel> links) {
    this.links = links;
  }


  public WorkItemModel name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "Basic template", required = true, value = "")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemModel workItemModel = (WorkItemModel) o;
    return Objects.equals(this.versionId, workItemModel.versionId) &&
        Objects.equals(this.medianDuration, workItemModel.medianDuration) &&
        Objects.equals(this.isDeleted, workItemModel.isDeleted) &&
        Objects.equals(this.projectId, workItemModel.projectId) &&
        Objects.equals(this.entityTypeName, workItemModel.entityTypeName) &&
        Objects.equals(this.isAutomated, workItemModel.isAutomated) &&
        Objects.equals(this.autoTests, workItemModel.autoTests) &&
        Objects.equals(this.attachments, workItemModel.attachments) &&
        Objects.equals(this.sectionPreconditionSteps, workItemModel.sectionPreconditionSteps) &&
        Objects.equals(this.sectionPostconditionSteps, workItemModel.sectionPostconditionSteps) &&
        Objects.equals(this.versionNumber, workItemModel.versionNumber) &&
        Objects.equals(this.iterations, workItemModel.iterations) &&
        Objects.equals(this.createdDate, workItemModel.createdDate) &&
        Objects.equals(this.modifiedDate, workItemModel.modifiedDate) &&
        Objects.equals(this.createdById, workItemModel.createdById) &&
        Objects.equals(this.modifiedById, workItemModel.modifiedById) &&
        Objects.equals(this.globalId, workItemModel.globalId) &&
        Objects.equals(this.id, workItemModel.id) &&
        Objects.equals(this.sectionId, workItemModel.sectionId) &&
        Objects.equals(this.description, workItemModel.description) &&
        Objects.equals(this.state, workItemModel.state) &&
        Objects.equals(this.priority, workItemModel.priority) &&
        Objects.equals(this.steps, workItemModel.steps) &&
        Objects.equals(this.preconditionSteps, workItemModel.preconditionSteps) &&
        Objects.equals(this.postconditionSteps, workItemModel.postconditionSteps) &&
        Objects.equals(this.duration, workItemModel.duration) &&
        Objects.equals(this.attributes, workItemModel.attributes) &&
        Objects.equals(this.tags, workItemModel.tags) &&
        Objects.equals(this.links, workItemModel.links) &&
        Objects.equals(this.name, workItemModel.name);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionId, medianDuration, isDeleted, projectId, entityTypeName, isAutomated, autoTests, attachments, sectionPreconditionSteps, sectionPostconditionSteps, versionNumber, iterations, createdDate, modifiedDate, createdById, modifiedById, globalId, id, sectionId, description, state, priority, steps, preconditionSteps, postconditionSteps, duration, attributes, tags, links, name);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemModel {\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    medianDuration: ").append(toIndentedString(medianDuration)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    entityTypeName: ").append(toIndentedString(entityTypeName)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    autoTests: ").append(toIndentedString(autoTests)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    sectionPreconditionSteps: ").append(toIndentedString(sectionPreconditionSteps)).append("\n");
    sb.append("    sectionPostconditionSteps: ").append(toIndentedString(sectionPostconditionSteps)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    iterations: ").append(toIndentedString(iterations)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    preconditionSteps: ").append(toIndentedString(preconditionSteps)).append("\n");
    sb.append("    postconditionSteps: ").append(toIndentedString(postconditionSteps)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("versionId");
    openapiFields.add("medianDuration");
    openapiFields.add("isDeleted");
    openapiFields.add("projectId");
    openapiFields.add("entityTypeName");
    openapiFields.add("isAutomated");
    openapiFields.add("autoTests");
    openapiFields.add("attachments");
    openapiFields.add("sectionPreconditionSteps");
    openapiFields.add("sectionPostconditionSteps");
    openapiFields.add("versionNumber");
    openapiFields.add("iterations");
    openapiFields.add("createdDate");
    openapiFields.add("modifiedDate");
    openapiFields.add("createdById");
    openapiFields.add("modifiedById");
    openapiFields.add("globalId");
    openapiFields.add("id");
    openapiFields.add("sectionId");
    openapiFields.add("description");
    openapiFields.add("state");
    openapiFields.add("priority");
    openapiFields.add("steps");
    openapiFields.add("preconditionSteps");
    openapiFields.add("postconditionSteps");
    openapiFields.add("duration");
    openapiFields.add("attributes");
    openapiFields.add("tags");
    openapiFields.add("links");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("entityTypeName");
    openapiRequiredFields.add("state");
    openapiRequiredFields.add("priority");
    openapiRequiredFields.add("steps");
    openapiRequiredFields.add("preconditionSteps");
    openapiRequiredFields.add("postconditionSteps");
    openapiRequiredFields.add("attributes");
    openapiRequiredFields.add("tags");
    openapiRequiredFields.add("links");
    openapiRequiredFields.add("name");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkItemModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkItemModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkItemModel is not found in the empty JSON string", WorkItemModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WorkItemModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkItemModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WorkItemModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if ((jsonObj.get("versionId") != null && !jsonObj.get("versionId").isJsonNull()) && !jsonObj.get("versionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionId").toString()));
      }
      if ((jsonObj.get("projectId") != null && !jsonObj.get("projectId").isJsonNull()) && !jsonObj.get("projectId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectId").toString()));
      }
      if (jsonObj.get("autoTests") != null && !jsonObj.get("autoTests").isJsonNull()) {
        JsonArray jsonArrayautoTests = jsonObj.getAsJsonArray("autoTests");
        if (jsonArrayautoTests != null) {
          // ensure the json data is an array
          if (!jsonObj.get("autoTests").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `autoTests` to be an array in the JSON string but got `%s`", jsonObj.get("autoTests").toString()));
          }

          // validate the optional field `autoTests` (array)
          for (int i = 0; i < jsonArrayautoTests.size(); i++) {
            AutoTestModel.validateJsonObject(jsonArrayautoTests.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
        if (jsonArrayattachments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
          }

          // validate the optional field `attachments` (array)
          for (int i = 0; i < jsonArrayattachments.size(); i++) {
            AttachmentModel.validateJsonObject(jsonArrayattachments.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("sectionPreconditionSteps") != null && !jsonObj.get("sectionPreconditionSteps").isJsonNull()) {
        JsonArray jsonArraysectionPreconditionSteps = jsonObj.getAsJsonArray("sectionPreconditionSteps");
        if (jsonArraysectionPreconditionSteps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sectionPreconditionSteps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sectionPreconditionSteps` to be an array in the JSON string but got `%s`", jsonObj.get("sectionPreconditionSteps").toString()));
          }

          // validate the optional field `sectionPreconditionSteps` (array)
          for (int i = 0; i < jsonArraysectionPreconditionSteps.size(); i++) {
            StepModel.validateJsonObject(jsonArraysectionPreconditionSteps.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("sectionPostconditionSteps") != null && !jsonObj.get("sectionPostconditionSteps").isJsonNull()) {
        JsonArray jsonArraysectionPostconditionSteps = jsonObj.getAsJsonArray("sectionPostconditionSteps");
        if (jsonArraysectionPostconditionSteps != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sectionPostconditionSteps").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sectionPostconditionSteps` to be an array in the JSON string but got `%s`", jsonObj.get("sectionPostconditionSteps").toString()));
          }

          // validate the optional field `sectionPostconditionSteps` (array)
          for (int i = 0; i < jsonArraysectionPostconditionSteps.size(); i++) {
            StepModel.validateJsonObject(jsonArraysectionPostconditionSteps.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("iterations") != null && !jsonObj.get("iterations").isJsonNull()) {
        JsonArray jsonArrayiterations = jsonObj.getAsJsonArray("iterations");
        if (jsonArrayiterations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("iterations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `iterations` to be an array in the JSON string but got `%s`", jsonObj.get("iterations").toString()));
          }

          // validate the optional field `iterations` (array)
          for (int i = 0; i < jsonArrayiterations.size(); i++) {
            IterationModel.validateJsonObject(jsonArrayiterations.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("createdById") != null && !jsonObj.get("createdById").isJsonNull()) && !jsonObj.get("createdById").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdById` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdById").toString()));
      }
      if ((jsonObj.get("modifiedById") != null && !jsonObj.get("modifiedById").isJsonNull()) && !jsonObj.get("modifiedById").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `modifiedById` to be a primitive type in the JSON string but got `%s`", jsonObj.get("modifiedById").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("sectionId") != null && !jsonObj.get("sectionId").isJsonNull()) && !jsonObj.get("sectionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sectionId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // ensure the json data is an array
      if (!jsonObj.get("steps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `steps` to be an array in the JSON string but got `%s`", jsonObj.get("steps").toString()));
      }

      JsonArray jsonArraysteps = jsonObj.getAsJsonArray("steps");
      // validate the required field `steps` (array)
      for (int i = 0; i < jsonArraysteps.size(); i++) {
        StepModel.validateJsonObject(jsonArraysteps.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("preconditionSteps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `preconditionSteps` to be an array in the JSON string but got `%s`", jsonObj.get("preconditionSteps").toString()));
      }

      JsonArray jsonArraypreconditionSteps = jsonObj.getAsJsonArray("preconditionSteps");
      // validate the required field `preconditionSteps` (array)
      for (int i = 0; i < jsonArraypreconditionSteps.size(); i++) {
        StepModel.validateJsonObject(jsonArraypreconditionSteps.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("postconditionSteps").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `postconditionSteps` to be an array in the JSON string but got `%s`", jsonObj.get("postconditionSteps").toString()));
      }

      JsonArray jsonArraypostconditionSteps = jsonObj.getAsJsonArray("postconditionSteps");
      // validate the required field `postconditionSteps` (array)
      for (int i = 0; i < jsonArraypostconditionSteps.size(); i++) {
        StepModel.validateJsonObject(jsonArraypostconditionSteps.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }

      JsonArray jsonArraytags = jsonObj.getAsJsonArray("tags");
      // validate the required field `tags` (array)
      for (int i = 0; i < jsonArraytags.size(); i++) {
        TagShortModel.validateJsonObject(jsonArraytags.get(i).getAsJsonObject());
      };
      // ensure the json data is an array
      if (!jsonObj.get("links").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `links` to be an array in the JSON string but got `%s`", jsonObj.get("links").toString()));
      }

      JsonArray jsonArraylinks = jsonObj.getAsJsonArray("links");
      // validate the required field `links` (array)
      for (int i = 0; i < jsonArraylinks.size(); i++) {
        LinkModel.validateJsonObject(jsonArraylinks.get(i).getAsJsonObject());
      };
      if (!jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkItemModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkItemModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkItemModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkItemModel.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkItemModel>() {
           @Override
           public void write(JsonWriter out, WorkItemModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkItemModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkItemModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkItemModel
  * @throws IOException if the JSON string is invalid with respect to WorkItemModel
  */
  public static WorkItemModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkItemModel.class);
  }

 /**
  * Convert an instance of WorkItemModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

