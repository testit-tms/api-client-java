/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import ru.testit.client.invoker.JSON;

/**
 * WorkItemMovePostModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class WorkItemMovePostModel {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private UUID id;

  public static final String SERIALIZED_NAME_NEW_SECTION_ID = "newSectionId";
  @SerializedName(SERIALIZED_NAME_NEW_SECTION_ID)
  private UUID newSectionId;

  public static final String SERIALIZED_NAME_OLD_SECTION_ID = "oldSectionId";
  @SerializedName(SERIALIZED_NAME_OLD_SECTION_ID)
  private UUID oldSectionId;

  public static final String SERIALIZED_NAME_NEXT_WORK_ITEM_ID = "nextWorkItemId";
  @SerializedName(SERIALIZED_NAME_NEXT_WORK_ITEM_ID)
  private UUID nextWorkItemId;

  public WorkItemMovePostModel() {
  }

  public WorkItemMovePostModel id(UUID id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getId() {
    return id;
  }


  public void setId(UUID id) {
    this.id = id;
  }


  public WorkItemMovePostModel newSectionId(UUID newSectionId) {
    
    this.newSectionId = newSectionId;
    return this;
  }

   /**
   * Get newSectionId
   * @return newSectionId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public UUID getNewSectionId() {
    return newSectionId;
  }


  public void setNewSectionId(UUID newSectionId) {
    this.newSectionId = newSectionId;
  }


  public WorkItemMovePostModel oldSectionId(UUID oldSectionId) {
    
    this.oldSectionId = oldSectionId;
    return this;
  }

   /**
   * Get oldSectionId
   * @return oldSectionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getOldSectionId() {
    return oldSectionId;
  }


  public void setOldSectionId(UUID oldSectionId) {
    this.oldSectionId = oldSectionId;
  }


  public WorkItemMovePostModel nextWorkItemId(UUID nextWorkItemId) {
    
    this.nextWorkItemId = nextWorkItemId;
    return this;
  }

   /**
   * Get nextWorkItemId
   * @return nextWorkItemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UUID getNextWorkItemId() {
    return nextWorkItemId;
  }


  public void setNextWorkItemId(UUID nextWorkItemId) {
    this.nextWorkItemId = nextWorkItemId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemMovePostModel workItemMovePostModel = (WorkItemMovePostModel) o;
    return Objects.equals(this.id, workItemMovePostModel.id) &&
        Objects.equals(this.newSectionId, workItemMovePostModel.newSectionId) &&
        Objects.equals(this.oldSectionId, workItemMovePostModel.oldSectionId) &&
        Objects.equals(this.nextWorkItemId, workItemMovePostModel.nextWorkItemId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, newSectionId, oldSectionId, nextWorkItemId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemMovePostModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    newSectionId: ").append(toIndentedString(newSectionId)).append("\n");
    sb.append("    oldSectionId: ").append(toIndentedString(oldSectionId)).append("\n");
    sb.append("    nextWorkItemId: ").append(toIndentedString(nextWorkItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("newSectionId");
    openapiFields.add("oldSectionId");
    openapiFields.add("nextWorkItemId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("newSectionId");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkItemMovePostModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkItemMovePostModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkItemMovePostModel is not found in the empty JSON string", WorkItemMovePostModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!WorkItemMovePostModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `WorkItemMovePostModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : WorkItemMovePostModel.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("newSectionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newSectionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newSectionId").toString()));
      }
      if ((jsonObj.get("oldSectionId") != null && !jsonObj.get("oldSectionId").isJsonNull()) && !jsonObj.get("oldSectionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldSectionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldSectionId").toString()));
      }
      if ((jsonObj.get("nextWorkItemId") != null && !jsonObj.get("nextWorkItemId").isJsonNull()) && !jsonObj.get("nextWorkItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nextWorkItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nextWorkItemId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkItemMovePostModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkItemMovePostModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkItemMovePostModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkItemMovePostModel.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkItemMovePostModel>() {
           @Override
           public void write(JsonWriter out, WorkItemMovePostModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkItemMovePostModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkItemMovePostModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkItemMovePostModel
  * @throws IOException if the JSON string is invalid with respect to WorkItemMovePostModel
  */
  public static WorkItemMovePostModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkItemMovePostModel.class);
  }

 /**
  * Convert an instance of WorkItemMovePostModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

