/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * WorkItemPreviewStepApiModel
 */
@JsonPropertyOrder({
  WorkItemPreviewStepApiModel.JSON_PROPERTY_NUMBER,
  WorkItemPreviewStepApiModel.JSON_PROPERTY_ACTION,
  WorkItemPreviewStepApiModel.JSON_PROPERTY_EXPECTED
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class WorkItemPreviewStepApiModel {
  public static final String JSON_PROPERTY_NUMBER = "number";
  private Integer number;

  public static final String JSON_PROPERTY_ACTION = "action";
  private String action;

  public static final String JSON_PROPERTY_EXPECTED = "expected";
  private String expected;

  public WorkItemPreviewStepApiModel() { 
  }

  public WorkItemPreviewStepApiModel number(Integer number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getNumber() {
    return number;
  }


  @JsonProperty(JSON_PROPERTY_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setNumber(Integer number) {
    this.number = number;
  }


  public WorkItemPreviewStepApiModel action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAction(String action) {
    this.action = action;
  }


  public WorkItemPreviewStepApiModel expected(String expected) {
    this.expected = expected;
    return this;
  }

  /**
   * Get expected
   * @return expected
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPECTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExpected() {
    return expected;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpected(String expected) {
    this.expected = expected;
  }


  /**
   * Return true if this WorkItemPreviewStepApiModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemPreviewStepApiModel workItemPreviewStepApiModel = (WorkItemPreviewStepApiModel) o;
    return Objects.equals(this.number, workItemPreviewStepApiModel.number) &&
        Objects.equals(this.action, workItemPreviewStepApiModel.action) &&
        Objects.equals(this.expected, workItemPreviewStepApiModel.expected);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, action, expected);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemPreviewStepApiModel {\n");
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    expected: ").append(toIndentedString(expected)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

