/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.IterationModel;
import ru.testit.client.model.LinkShortModel;
import ru.testit.client.model.WorkItemPriorityModel;
import ru.testit.client.model.WorkItemSourceTypeModel;
import ru.testit.client.model.WorkItemStates;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * WorkItemShortModel
 */
@JsonPropertyOrder({
  WorkItemShortModel.JSON_PROPERTY_ID,
  WorkItemShortModel.JSON_PROPERTY_VERSION_ID,
  WorkItemShortModel.JSON_PROPERTY_VERSION_NUMBER,
  WorkItemShortModel.JSON_PROPERTY_NAME,
  WorkItemShortModel.JSON_PROPERTY_ENTITY_TYPE_NAME,
  WorkItemShortModel.JSON_PROPERTY_PROJECT_ID,
  WorkItemShortModel.JSON_PROPERTY_SECTION_ID,
  WorkItemShortModel.JSON_PROPERTY_SECTION_NAME,
  WorkItemShortModel.JSON_PROPERTY_IS_AUTOMATED,
  WorkItemShortModel.JSON_PROPERTY_GLOBAL_ID,
  WorkItemShortModel.JSON_PROPERTY_DURATION,
  WorkItemShortModel.JSON_PROPERTY_CREATED_BY_ID,
  WorkItemShortModel.JSON_PROPERTY_STATE,
  WorkItemShortModel.JSON_PROPERTY_PRIORITY,
  WorkItemShortModel.JSON_PROPERTY_SOURCE_TYPE,
  WorkItemShortModel.JSON_PROPERTY_IS_DELETED,
  WorkItemShortModel.JSON_PROPERTY_ITERATIONS,
  WorkItemShortModel.JSON_PROPERTY_LINKS,
  WorkItemShortModel.JSON_PROPERTY_MEDIAN_DURATION,
  WorkItemShortModel.JSON_PROPERTY_ATTRIBUTES,
  WorkItemShortModel.JSON_PROPERTY_MODIFIED_BY_ID,
  WorkItemShortModel.JSON_PROPERTY_CREATED_DATE,
  WorkItemShortModel.JSON_PROPERTY_MODIFIED_DATE,
  WorkItemShortModel.JSON_PROPERTY_TAG_NAMES
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class WorkItemShortModel {
  public static final String JSON_PROPERTY_ID = "id";
  private UUID id;

  public static final String JSON_PROPERTY_VERSION_ID = "versionId";
  private UUID versionId;

  public static final String JSON_PROPERTY_VERSION_NUMBER = "versionNumber";
  private Integer versionNumber;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_ENTITY_TYPE_NAME = "entityTypeName";
  private String entityTypeName;

  public static final String JSON_PROPERTY_PROJECT_ID = "projectId";
  private UUID projectId;

  public static final String JSON_PROPERTY_SECTION_ID = "sectionId";
  private UUID sectionId;

  public static final String JSON_PROPERTY_SECTION_NAME = "sectionName";
  private String sectionName;

  public static final String JSON_PROPERTY_IS_AUTOMATED = "isAutomated";
  private Boolean isAutomated;

  public static final String JSON_PROPERTY_GLOBAL_ID = "globalId";
  private Long globalId;

  public static final String JSON_PROPERTY_DURATION = "duration";
  private Integer duration;

  public static final String JSON_PROPERTY_CREATED_BY_ID = "createdById";
  private UUID createdById;

  public static final String JSON_PROPERTY_STATE = "state";
  private WorkItemStates state;

  public static final String JSON_PROPERTY_PRIORITY = "priority";
  private WorkItemPriorityModel priority;

  public static final String JSON_PROPERTY_SOURCE_TYPE = "sourceType";
  private WorkItemSourceTypeModel sourceType;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_ITERATIONS = "iterations";
  private List<IterationModel> iterations = new ArrayList<>();

  public static final String JSON_PROPERTY_LINKS = "links";
  private List<LinkShortModel> links = new ArrayList<>();

  public static final String JSON_PROPERTY_MEDIAN_DURATION = "medianDuration";
  private JsonNullable<Long> medianDuration = JsonNullable.<Long>undefined();

  public static final String JSON_PROPERTY_ATTRIBUTES = "attributes";
  private JsonNullable<Map<String, Object>> attributes = JsonNullable.<Map<String, Object>>undefined();

  public static final String JSON_PROPERTY_MODIFIED_BY_ID = "modifiedById";
  private JsonNullable<UUID> modifiedById = JsonNullable.<UUID>undefined();

  public static final String JSON_PROPERTY_CREATED_DATE = "createdDate";
  private JsonNullable<OffsetDateTime> createdDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_MODIFIED_DATE = "modifiedDate";
  private JsonNullable<OffsetDateTime> modifiedDate = JsonNullable.<OffsetDateTime>undefined();

  public static final String JSON_PROPERTY_TAG_NAMES = "tagNames";
  private JsonNullable<List<String>> tagNames = JsonNullable.<List<String>>undefined();

  public WorkItemShortModel() { 
  }

  public WorkItemShortModel id(UUID id) {
    this.id = id;
    return this;
  }

  /**
   * Work Item internal unique identifier
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(UUID id) {
    this.id = id;
  }


  public WorkItemShortModel versionId(UUID versionId) {
    this.versionId = versionId;
    return this;
  }

  /**
   * Work Item version identifier
   * @return versionId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getVersionId() {
    return versionId;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersionId(UUID versionId) {
    this.versionId = versionId;
  }


  public WorkItemShortModel versionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
    return this;
  }

  /**
   * Work Item version number
   * @return versionNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getVersionNumber() {
    return versionNumber;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setVersionNumber(Integer versionNumber) {
    this.versionNumber = versionNumber;
  }


  public WorkItemShortModel name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Work Item name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(String name) {
    this.name = name;
  }


  public WorkItemShortModel entityTypeName(String entityTypeName) {
    this.entityTypeName = entityTypeName;
    return this;
  }

  /**
   * Work Item type. Possible values: CheckLists, SharedSteps, TestCases
   * @return entityTypeName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getEntityTypeName() {
    return entityTypeName;
  }


  @JsonProperty(JSON_PROPERTY_ENTITY_TYPE_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setEntityTypeName(String entityTypeName) {
    this.entityTypeName = entityTypeName;
  }


  public WorkItemShortModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Project unique identifier
   * @return projectId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getProjectId() {
    return projectId;
  }


  @JsonProperty(JSON_PROPERTY_PROJECT_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }


  public WorkItemShortModel sectionId(UUID sectionId) {
    this.sectionId = sectionId;
    return this;
  }

  /**
   * Identifier of Section where Work Item is located
   * @return sectionId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSectionId() {
    return sectionId;
  }


  @JsonProperty(JSON_PROPERTY_SECTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSectionId(UUID sectionId) {
    this.sectionId = sectionId;
  }


  public WorkItemShortModel sectionName(String sectionName) {
    this.sectionName = sectionName;
    return this;
  }

  /**
   * Section name of Work Item
   * @return sectionName
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SECTION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getSectionName() {
    return sectionName;
  }


  @JsonProperty(JSON_PROPERTY_SECTION_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSectionName(String sectionName) {
    this.sectionName = sectionName;
  }


  public WorkItemShortModel isAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

  /**
   * Boolean flag determining whether Work Item is automated
   * @return isAutomated
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsAutomated() {
    return isAutomated;
  }


  @JsonProperty(JSON_PROPERTY_IS_AUTOMATED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }


  public WorkItemShortModel globalId(Long globalId) {
    this.globalId = globalId;
    return this;
  }

  /**
   * Work Item global identifier
   * @return globalId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getGlobalId() {
    return globalId;
  }


  @JsonProperty(JSON_PROPERTY_GLOBAL_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }


  public WorkItemShortModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

  /**
   * Work Item duration
   * @return duration
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getDuration() {
    return duration;
  }


  @JsonProperty(JSON_PROPERTY_DURATION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setDuration(Integer duration) {
    this.duration = duration;
  }


  public WorkItemShortModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

  /**
   * Unique identifier of user who created Work Item
   * @return createdById
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCreatedById() {
    return createdById;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }


  public WorkItemShortModel state(WorkItemStates state) {
    this.state = state;
    return this;
  }

  /**
   * The current state of Work Item
   * @return state
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemStates getState() {
    return state;
  }


  @JsonProperty(JSON_PROPERTY_STATE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setState(WorkItemStates state) {
    this.state = state;
  }


  public WorkItemShortModel priority(WorkItemPriorityModel priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Work Item priority level
   * @return priority
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemPriorityModel getPriority() {
    return priority;
  }


  @JsonProperty(JSON_PROPERTY_PRIORITY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPriority(WorkItemPriorityModel priority) {
    this.priority = priority;
  }


  public WorkItemShortModel sourceType(WorkItemSourceTypeModel sourceType) {
    this.sourceType = sourceType;
    return this;
  }

  /**
   * Work Item source type
   * @return sourceType
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public WorkItemSourceTypeModel getSourceType() {
    return sourceType;
  }


  @JsonProperty(JSON_PROPERTY_SOURCE_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSourceType(WorkItemSourceTypeModel sourceType) {
    this.sourceType = sourceType;
  }


  public WorkItemShortModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Flag determining whether Work Item is deleted
   * @return isDeleted
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public WorkItemShortModel iterations(List<IterationModel> iterations) {
    this.iterations = iterations;
    return this;
  }

  public WorkItemShortModel addIterationsItem(IterationModel iterationsItem) {
    if (this.iterations == null) {
      this.iterations = new ArrayList<>();
    }
    this.iterations.add(iterationsItem);
    return this;
  }

  /**
   * Set of iterations related to Work Item
   * @return iterations
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ITERATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<IterationModel> getIterations() {
    return iterations;
  }


  @JsonProperty(JSON_PROPERTY_ITERATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIterations(List<IterationModel> iterations) {
    this.iterations = iterations;
  }


  public WorkItemShortModel links(List<LinkShortModel> links) {
    this.links = links;
    return this;
  }

  public WorkItemShortModel addLinksItem(LinkShortModel linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

  /**
   * Set of links related to Work Item
   * @return links
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<LinkShortModel> getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setLinks(List<LinkShortModel> links) {
    this.links = links;
  }


  public WorkItemShortModel medianDuration(Long medianDuration) {
    this.medianDuration = JsonNullable.<Long>of(medianDuration);
    return this;
  }

  /**
   * Work Item median duration
   * @return medianDuration
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Long getMedianDuration() {
        return medianDuration.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MEDIAN_DURATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Long> getMedianDuration_JsonNullable() {
    return medianDuration;
  }
  
  @JsonProperty(JSON_PROPERTY_MEDIAN_DURATION)
  public void setMedianDuration_JsonNullable(JsonNullable<Long> medianDuration) {
    this.medianDuration = medianDuration;
  }

  public void setMedianDuration(Long medianDuration) {
    this.medianDuration = JsonNullable.<Long>of(medianDuration);
  }


  public WorkItemShortModel attributes(Map<String, Object> attributes) {
    this.attributes = JsonNullable.<Map<String, Object>>of(attributes);
    return this;
  }

  public WorkItemShortModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null || !this.attributes.isPresent()) {
      this.attributes = JsonNullable.<Map<String, Object>>of(new HashMap<>());
    }
    try {
      this.attributes.get().put(key, attributesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Work Item attributes
   * @return attributes
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public Map<String, Object> getAttributes() {
        return attributes.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  @JsonInclude(content = JsonInclude.Include.ALWAYS, value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<Map<String, Object>> getAttributes_JsonNullable() {
    return attributes;
  }
  
  @JsonProperty(JSON_PROPERTY_ATTRIBUTES)
  public void setAttributes_JsonNullable(JsonNullable<Map<String, Object>> attributes) {
    this.attributes = attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = JsonNullable.<Map<String, Object>>of(attributes);
  }


  public WorkItemShortModel modifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
    return this;
  }

  /**
   * Unique identifier of user who applied the latest modification of Work Item
   * @return modifiedById
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getModifiedById() {
        return modifiedById.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getModifiedById_JsonNullable() {
    return modifiedById;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_BY_ID)
  public void setModifiedById_JsonNullable(JsonNullable<UUID> modifiedById) {
    this.modifiedById = modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = JsonNullable.<UUID>of(modifiedById);
  }


  public WorkItemShortModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = JsonNullable.<OffsetDateTime>of(createdDate);
    return this;
  }

  /**
   * Date and time of Work Item creation
   * @return createdDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getCreatedDate() {
        return createdDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getCreatedDate_JsonNullable() {
    return createdDate;
  }
  
  @JsonProperty(JSON_PROPERTY_CREATED_DATE)
  public void setCreatedDate_JsonNullable(JsonNullable<OffsetDateTime> createdDate) {
    this.createdDate = createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = JsonNullable.<OffsetDateTime>of(createdDate);
  }


  public WorkItemShortModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
    return this;
  }

  /**
   * Date and time of the latest modification of Work Item
   * @return modifiedDate
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public OffsetDateTime getModifiedDate() {
        return modifiedDate.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<OffsetDateTime> getModifiedDate_JsonNullable() {
    return modifiedDate;
  }
  
  @JsonProperty(JSON_PROPERTY_MODIFIED_DATE)
  public void setModifiedDate_JsonNullable(JsonNullable<OffsetDateTime> modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = JsonNullable.<OffsetDateTime>of(modifiedDate);
  }


  public WorkItemShortModel tagNames(List<String> tagNames) {
    this.tagNames = JsonNullable.<List<String>>of(tagNames);
    return this;
  }

  public WorkItemShortModel addTagNamesItem(String tagNamesItem) {
    if (this.tagNames == null || !this.tagNames.isPresent()) {
      this.tagNames = JsonNullable.<List<String>>of(new ArrayList<>());
    }
    try {
      this.tagNames.get().add(tagNamesItem);
    } catch (java.util.NoSuchElementException e) {
      // this can never happen, as we make sure above that the value is present
    }
    return this;
  }

  /**
   * Array of tag names of Work Item
   * @return tagNames
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public List<String> getTagNames() {
        return tagNames.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_TAG_NAMES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<List<String>> getTagNames_JsonNullable() {
    return tagNames;
  }
  
  @JsonProperty(JSON_PROPERTY_TAG_NAMES)
  public void setTagNames_JsonNullable(JsonNullable<List<String>> tagNames) {
    this.tagNames = tagNames;
  }

  public void setTagNames(List<String> tagNames) {
    this.tagNames = JsonNullable.<List<String>>of(tagNames);
  }


  /**
   * Return true if this WorkItemShortModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemShortModel workItemShortModel = (WorkItemShortModel) o;
    return Objects.equals(this.id, workItemShortModel.id) &&
        Objects.equals(this.versionId, workItemShortModel.versionId) &&
        Objects.equals(this.versionNumber, workItemShortModel.versionNumber) &&
        Objects.equals(this.name, workItemShortModel.name) &&
        Objects.equals(this.entityTypeName, workItemShortModel.entityTypeName) &&
        Objects.equals(this.projectId, workItemShortModel.projectId) &&
        Objects.equals(this.sectionId, workItemShortModel.sectionId) &&
        Objects.equals(this.sectionName, workItemShortModel.sectionName) &&
        Objects.equals(this.isAutomated, workItemShortModel.isAutomated) &&
        Objects.equals(this.globalId, workItemShortModel.globalId) &&
        Objects.equals(this.duration, workItemShortModel.duration) &&
        Objects.equals(this.createdById, workItemShortModel.createdById) &&
        Objects.equals(this.state, workItemShortModel.state) &&
        Objects.equals(this.priority, workItemShortModel.priority) &&
        Objects.equals(this.sourceType, workItemShortModel.sourceType) &&
        Objects.equals(this.isDeleted, workItemShortModel.isDeleted) &&
        Objects.equals(this.iterations, workItemShortModel.iterations) &&
        Objects.equals(this.links, workItemShortModel.links) &&
        equalsNullable(this.medianDuration, workItemShortModel.medianDuration) &&
        equalsNullable(this.attributes, workItemShortModel.attributes) &&
        equalsNullable(this.modifiedById, workItemShortModel.modifiedById) &&
        equalsNullable(this.createdDate, workItemShortModel.createdDate) &&
        equalsNullable(this.modifiedDate, workItemShortModel.modifiedDate) &&
        equalsNullable(this.tagNames, workItemShortModel.tagNames);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, versionId, versionNumber, name, entityTypeName, projectId, sectionId, sectionName, isAutomated, globalId, duration, createdById, state, priority, sourceType, isDeleted, iterations, links, hashCodeNullable(medianDuration), hashCodeNullable(attributes), hashCodeNullable(modifiedById), hashCodeNullable(createdDate), hashCodeNullable(modifiedDate), hashCodeNullable(tagNames));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemShortModel {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("    versionNumber: ").append(toIndentedString(versionNumber)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    entityTypeName: ").append(toIndentedString(entityTypeName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    sectionName: ").append(toIndentedString(sectionName)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    sourceType: ").append(toIndentedString(sourceType)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    iterations: ").append(toIndentedString(iterations)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    medianDuration: ").append(toIndentedString(medianDuration)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    tagNames: ").append(toIndentedString(tagNames)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

