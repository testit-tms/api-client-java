/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.util.Arrays;
import java.util.UUID;
import org.openapitools.jackson.nullable.JsonNullable;
import ru.testit.client.model.SharedStepChangeViewModel;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import ru.testit.client.invoker.JSON;


/**
 * WorkItemStepChangeViewModel
 */
@JsonPropertyOrder({
  WorkItemStepChangeViewModel.JSON_PROPERTY_ACTION,
  WorkItemStepChangeViewModel.JSON_PROPERTY_EXPECTED,
  WorkItemStepChangeViewModel.JSON_PROPERTY_COMMENTS,
  WorkItemStepChangeViewModel.JSON_PROPERTY_TEST_DATA,
  WorkItemStepChangeViewModel.JSON_PROPERTY_INDEX,
  WorkItemStepChangeViewModel.JSON_PROPERTY_WORK_ITEM,
  WorkItemStepChangeViewModel.JSON_PROPERTY_WORK_ITEM_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.9.0")
public class WorkItemStepChangeViewModel {
  public static final String JSON_PROPERTY_ACTION = "action";
  private String action;

  public static final String JSON_PROPERTY_EXPECTED = "expected";
  private String expected;

  public static final String JSON_PROPERTY_COMMENTS = "comments";
  private String comments;

  public static final String JSON_PROPERTY_TEST_DATA = "testData";
  private String testData;

  public static final String JSON_PROPERTY_INDEX = "index";
  private Integer index;

  public static final String JSON_PROPERTY_WORK_ITEM = "workItem";
  private SharedStepChangeViewModel workItem;

  public static final String JSON_PROPERTY_WORK_ITEM_ID = "workItemId";
  private JsonNullable<UUID> workItemId = JsonNullable.<UUID>undefined();

  public WorkItemStepChangeViewModel() { 
  }

  public WorkItemStepChangeViewModel action(String action) {
    this.action = action;
    return this;
  }

  /**
   * Get action
   * @return action
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getAction() {
    return action;
  }


  @JsonProperty(JSON_PROPERTY_ACTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAction(String action) {
    this.action = action;
  }


  public WorkItemStepChangeViewModel expected(String expected) {
    this.expected = expected;
    return this;
  }

  /**
   * Get expected
   * @return expected
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_EXPECTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getExpected() {
    return expected;
  }


  @JsonProperty(JSON_PROPERTY_EXPECTED)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setExpected(String expected) {
    this.expected = expected;
  }


  public WorkItemStepChangeViewModel comments(String comments) {
    this.comments = comments;
    return this;
  }

  /**
   * Get comments
   * @return comments
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getComments() {
    return comments;
  }


  @JsonProperty(JSON_PROPERTY_COMMENTS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setComments(String comments) {
    this.comments = comments;
  }


  public WorkItemStepChangeViewModel testData(String testData) {
    this.testData = testData;
    return this;
  }

  /**
   * Get testData
   * @return testData
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TEST_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTestData() {
    return testData;
  }


  @JsonProperty(JSON_PROPERTY_TEST_DATA)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTestData(String testData) {
    this.testData = testData;
  }


  public WorkItemStepChangeViewModel index(Integer index) {
    this.index = index;
    return this;
  }

  /**
   * Get index
   * @return index
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getIndex() {
    return index;
  }


  @JsonProperty(JSON_PROPERTY_INDEX)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setIndex(Integer index) {
    this.index = index;
  }


  public WorkItemStepChangeViewModel workItem(SharedStepChangeViewModel workItem) {
    this.workItem = workItem;
    return this;
  }

  /**
   * Get workItem
   * @return workItem
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WORK_ITEM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SharedStepChangeViewModel getWorkItem() {
    return workItem;
  }


  @JsonProperty(JSON_PROPERTY_WORK_ITEM)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWorkItem(SharedStepChangeViewModel workItem) {
    this.workItem = workItem;
  }


  public WorkItemStepChangeViewModel workItemId(UUID workItemId) {
    this.workItemId = JsonNullable.<UUID>of(workItemId);
    return this;
  }

  /**
   * Get workItemId
   * @return workItemId
   */
  @jakarta.annotation.Nullable
  @JsonIgnore

  public UUID getWorkItemId() {
        return workItemId.orElse(null);
  }

  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public JsonNullable<UUID> getWorkItemId_JsonNullable() {
    return workItemId;
  }
  
  @JsonProperty(JSON_PROPERTY_WORK_ITEM_ID)
  public void setWorkItemId_JsonNullable(JsonNullable<UUID> workItemId) {
    this.workItemId = workItemId;
  }

  public void setWorkItemId(UUID workItemId) {
    this.workItemId = JsonNullable.<UUID>of(workItemId);
  }


  /**
   * Return true if this WorkItemStepChangeViewModel object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemStepChangeViewModel workItemStepChangeViewModel = (WorkItemStepChangeViewModel) o;
    return Objects.equals(this.action, workItemStepChangeViewModel.action) &&
        Objects.equals(this.expected, workItemStepChangeViewModel.expected) &&
        Objects.equals(this.comments, workItemStepChangeViewModel.comments) &&
        Objects.equals(this.testData, workItemStepChangeViewModel.testData) &&
        Objects.equals(this.index, workItemStepChangeViewModel.index) &&
        Objects.equals(this.workItem, workItemStepChangeViewModel.workItem) &&
        equalsNullable(this.workItemId, workItemStepChangeViewModel.workItemId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, expected, comments, testData, index, workItem, hashCodeNullable(workItemId));
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemStepChangeViewModel {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    expected: ").append(toIndentedString(expected)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    testData: ").append(toIndentedString(testData)).append("\n");
    sb.append("    index: ").append(toIndentedString(index)).append("\n");
    sb.append("    workItem: ").append(toIndentedString(workItem)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

