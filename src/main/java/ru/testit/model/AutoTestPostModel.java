/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.testit.model.AutoTestStepModel;
import ru.testit.model.LabelPostModel;
import ru.testit.model.LinkPostModel;
/**
 * AutoTestPostModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class AutoTestPostModel {
  @SerializedName("workItemIdsForLinkWithAutoTest")
  private List<UUID> workItemIdsForLinkWithAutoTest = null;

  @SerializedName("shouldCreateWorkItem")
  private Boolean shouldCreateWorkItem = null;

  @SerializedName("externalId")
  private String externalId = null;

  @SerializedName("links")
  private List<LinkPostModel> links = null;

  @SerializedName("projectId")
  private UUID projectId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("classname")
  private String classname = null;

  @SerializedName("steps")
  private List<AutoTestStepModel> steps = null;

  @SerializedName("setup")
  private List<AutoTestStepModel> setup = null;

  @SerializedName("teardown")
  private List<AutoTestStepModel> teardown = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("labels")
  private List<LabelPostModel> labels = null;

  @SerializedName("isFlaky")
  private Boolean isFlaky = null;

  public AutoTestPostModel workItemIdsForLinkWithAutoTest(List<UUID> workItemIdsForLinkWithAutoTest) {
    this.workItemIdsForLinkWithAutoTest = workItemIdsForLinkWithAutoTest;
    return this;
  }

  public AutoTestPostModel addWorkItemIdsForLinkWithAutoTestItem(UUID workItemIdsForLinkWithAutoTestItem) {
    if (this.workItemIdsForLinkWithAutoTest == null) {
      this.workItemIdsForLinkWithAutoTest = new ArrayList<UUID>();
    }
    this.workItemIdsForLinkWithAutoTest.add(workItemIdsForLinkWithAutoTestItem);
    return this;
  }

   /**
   * Get workItemIdsForLinkWithAutoTest
   * @return workItemIdsForLinkWithAutoTest
  **/
  @Schema(description = "")
  public List<UUID> getWorkItemIdsForLinkWithAutoTest() {
    return workItemIdsForLinkWithAutoTest;
  }

  public void setWorkItemIdsForLinkWithAutoTest(List<UUID> workItemIdsForLinkWithAutoTest) {
    this.workItemIdsForLinkWithAutoTest = workItemIdsForLinkWithAutoTest;
  }

  public AutoTestPostModel shouldCreateWorkItem(Boolean shouldCreateWorkItem) {
    this.shouldCreateWorkItem = shouldCreateWorkItem;
    return this;
  }

   /**
   * Get shouldCreateWorkItem
   * @return shouldCreateWorkItem
  **/
  @Schema(description = "")
  public Boolean isShouldCreateWorkItem() {
    return shouldCreateWorkItem;
  }

  public void setShouldCreateWorkItem(Boolean shouldCreateWorkItem) {
    this.shouldCreateWorkItem = shouldCreateWorkItem;
  }

  public AutoTestPostModel externalId(String externalId) {
    this.externalId = externalId;
    return this;
  }

   /**
   * This property is used to set autotest identifier from client system
   * @return externalId
  **/
  @Schema(example = "10001", required = true, description = "This property is used to set autotest identifier from client system")
  public String getExternalId() {
    return externalId;
  }

  public void setExternalId(String externalId) {
    this.externalId = externalId;
  }

  public AutoTestPostModel links(List<LinkPostModel> links) {
    this.links = links;
    return this;
  }

  public AutoTestPostModel addLinksItem(LinkPostModel linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkPostModel>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<LinkPostModel> getLinks() {
    return links;
  }

  public void setLinks(List<LinkPostModel> links) {
    this.links = links;
  }

  public AutoTestPostModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * This property is used to link autotest with project
   * @return projectId
  **/
  @Schema(example = "9891bb36-71eb-4a4a-a049-eae838db9514", required = true, description = "This property is used to link autotest with project")
  public UUID getProjectId() {
    return projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }

  public AutoTestPostModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "WorkItem valid creation test", required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AutoTestPostModel namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @Schema(example = "UnitTest.Core", description = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public AutoTestPostModel classname(String classname) {
    this.classname = classname;
    return this;
  }

   /**
   * Get classname
   * @return classname
  **/
  @Schema(example = "WorkItemServiceTest.cs", description = "")
  public String getClassname() {
    return classname;
  }

  public void setClassname(String classname) {
    this.classname = classname;
  }

  public AutoTestPostModel steps(List<AutoTestStepModel> steps) {
    this.steps = steps;
    return this;
  }

  public AutoTestPostModel addStepsItem(AutoTestStepModel stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<AutoTestStepModel>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Get steps
   * @return steps
  **/
  @Schema(description = "")
  public List<AutoTestStepModel> getSteps() {
    return steps;
  }

  public void setSteps(List<AutoTestStepModel> steps) {
    this.steps = steps;
  }

  public AutoTestPostModel setup(List<AutoTestStepModel> setup) {
    this.setup = setup;
    return this;
  }

  public AutoTestPostModel addSetupItem(AutoTestStepModel setupItem) {
    if (this.setup == null) {
      this.setup = new ArrayList<AutoTestStepModel>();
    }
    this.setup.add(setupItem);
    return this;
  }

   /**
   * Get setup
   * @return setup
  **/
  @Schema(description = "")
  public List<AutoTestStepModel> getSetup() {
    return setup;
  }

  public void setSetup(List<AutoTestStepModel> setup) {
    this.setup = setup;
  }

  public AutoTestPostModel teardown(List<AutoTestStepModel> teardown) {
    this.teardown = teardown;
    return this;
  }

  public AutoTestPostModel addTeardownItem(AutoTestStepModel teardownItem) {
    if (this.teardown == null) {
      this.teardown = new ArrayList<AutoTestStepModel>();
    }
    this.teardown.add(teardownItem);
    return this;
  }

   /**
   * Get teardown
   * @return teardown
  **/
  @Schema(description = "")
  public List<AutoTestStepModel> getTeardown() {
    return teardown;
  }

  public void setTeardown(List<AutoTestStepModel> teardown) {
    this.teardown = teardown;
  }

  public AutoTestPostModel title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @Schema(example = "WorkItem creation test", description = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public AutoTestPostModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "This test is interned to validate correct workItem creation", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AutoTestPostModel labels(List<LabelPostModel> labels) {
    this.labels = labels;
    return this;
  }

  public AutoTestPostModel addLabelsItem(LabelPostModel labelsItem) {
    if (this.labels == null) {
      this.labels = new ArrayList<LabelPostModel>();
    }
    this.labels.add(labelsItem);
    return this;
  }

   /**
   * Get labels
   * @return labels
  **/
  @Schema(description = "")
  public List<LabelPostModel> getLabels() {
    return labels;
  }

  public void setLabels(List<LabelPostModel> labels) {
    this.labels = labels;
  }

  public AutoTestPostModel isFlaky(Boolean isFlaky) {
    this.isFlaky = isFlaky;
    return this;
  }

   /**
   * Get isFlaky
   * @return isFlaky
  **/
  @Schema(description = "")
  public Boolean isIsFlaky() {
    return isFlaky;
  }

  public void setIsFlaky(Boolean isFlaky) {
    this.isFlaky = isFlaky;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestPostModel autoTestPostModel = (AutoTestPostModel) o;
    return Objects.equals(this.workItemIdsForLinkWithAutoTest, autoTestPostModel.workItemIdsForLinkWithAutoTest) &&
        Objects.equals(this.shouldCreateWorkItem, autoTestPostModel.shouldCreateWorkItem) &&
        Objects.equals(this.externalId, autoTestPostModel.externalId) &&
        Objects.equals(this.links, autoTestPostModel.links) &&
        Objects.equals(this.projectId, autoTestPostModel.projectId) &&
        Objects.equals(this.name, autoTestPostModel.name) &&
        Objects.equals(this.namespace, autoTestPostModel.namespace) &&
        Objects.equals(this.classname, autoTestPostModel.classname) &&
        Objects.equals(this.steps, autoTestPostModel.steps) &&
        Objects.equals(this.setup, autoTestPostModel.setup) &&
        Objects.equals(this.teardown, autoTestPostModel.teardown) &&
        Objects.equals(this.title, autoTestPostModel.title) &&
        Objects.equals(this.description, autoTestPostModel.description) &&
        Objects.equals(this.labels, autoTestPostModel.labels) &&
        Objects.equals(this.isFlaky, autoTestPostModel.isFlaky);
  }

  @Override
  public int hashCode() {
    return Objects.hash(workItemIdsForLinkWithAutoTest, shouldCreateWorkItem, externalId, links, projectId, name, namespace, classname, steps, setup, teardown, title, description, labels, isFlaky);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestPostModel {\n");
    
    sb.append("    workItemIdsForLinkWithAutoTest: ").append(toIndentedString(workItemIdsForLinkWithAutoTest)).append("\n");
    sb.append("    shouldCreateWorkItem: ").append(toIndentedString(shouldCreateWorkItem)).append("\n");
    sb.append("    externalId: ").append(toIndentedString(externalId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    classname: ").append(toIndentedString(classname)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    setup: ").append(toIndentedString(setup)).append("\n");
    sb.append("    teardown: ").append(toIndentedString(teardown)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    labels: ").append(toIndentedString(labels)).append("\n");
    sb.append("    isFlaky: ").append(toIndentedString(isFlaky)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
