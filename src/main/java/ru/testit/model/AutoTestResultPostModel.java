/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.AttachmentPutModel;
import ru.testit.model.AttachmentPutModelAutoTestStepResultsModel;
import ru.testit.model.LinkPostModel;
/**
 * AutoTestResultPostModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class AutoTestResultPostModel {
  @SerializedName("testRunId")
  private UUID testRunId = null;

  @SerializedName("testPlanGlobalId")
  private Long testPlanGlobalId = null;

  @SerializedName("configurationGlobalId")
  private Long configurationGlobalId = null;

  @SerializedName("links")
  private List<LinkPostModel> links = null;

  @SerializedName("failureReasonNames")
  private List<String> failureReasonNames = null;

  @SerializedName("autoTestExternalId")
  private String autoTestExternalId = null;

  @SerializedName("outcome")
  private String outcome = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("traces")
  private String traces = null;

  @SerializedName("startedOn")
  private OffsetDateTime startedOn = null;

  @SerializedName("completedOn")
  private OffsetDateTime completedOn = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("attachments")
  private List<AttachmentPutModel> attachments = null;

  @SerializedName("parameters")
  private Map<String, String> parameters = null;

  @SerializedName("properties")
  private Map<String, String> properties = null;

  @SerializedName("stepResults")
  private List<AttachmentPutModelAutoTestStepResultsModel> stepResults = null;

  @SerializedName("setupResults")
  private List<AttachmentPutModelAutoTestStepResultsModel> setupResults = null;

  @SerializedName("teardownResults")
  private List<AttachmentPutModelAutoTestStepResultsModel> teardownResults = null;

  public AutoTestResultPostModel testRunId(UUID testRunId) {
    this.testRunId = testRunId;
    return this;
  }

   /**
   * Get testRunId
   * @return testRunId
  **/
  @Schema(required = true, description = "")
  public UUID getTestRunId() {
    return testRunId;
  }

  public void setTestRunId(UUID testRunId) {
    this.testRunId = testRunId;
  }

  public AutoTestResultPostModel testPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = testPlanGlobalId;
    return this;
  }

   /**
   * Get testPlanGlobalId
   * @return testPlanGlobalId
  **/
  @Schema(required = true, description = "")
  public Long getTestPlanGlobalId() {
    return testPlanGlobalId;
  }

  public void setTestPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = testPlanGlobalId;
  }

  public AutoTestResultPostModel configurationGlobalId(Long configurationGlobalId) {
    this.configurationGlobalId = configurationGlobalId;
    return this;
  }

   /**
   * Get configurationGlobalId
   * @return configurationGlobalId
  **/
  @Schema(required = true, description = "")
  public Long getConfigurationGlobalId() {
    return configurationGlobalId;
  }

  public void setConfigurationGlobalId(Long configurationGlobalId) {
    this.configurationGlobalId = configurationGlobalId;
  }

  public AutoTestResultPostModel links(List<LinkPostModel> links) {
    this.links = links;
    return this;
  }

  public AutoTestResultPostModel addLinksItem(LinkPostModel linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkPostModel>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<LinkPostModel> getLinks() {
    return links;
  }

  public void setLinks(List<LinkPostModel> links) {
    this.links = links;
  }

  public AutoTestResultPostModel failureReasonNames(List<String> failureReasonNames) {
    this.failureReasonNames = failureReasonNames;
    return this;
  }

  public AutoTestResultPostModel addFailureReasonNamesItem(String failureReasonNamesItem) {
    if (this.failureReasonNames == null) {
      this.failureReasonNames = new ArrayList<String>();
    }
    this.failureReasonNames.add(failureReasonNamesItem);
    return this;
  }

   /**
   * Get failureReasonNames
   * @return failureReasonNames
  **/
  @Schema(description = "")
  public List<String> getFailureReasonNames() {
    return failureReasonNames;
  }

  public void setFailureReasonNames(List<String> failureReasonNames) {
    this.failureReasonNames = failureReasonNames;
  }

  public AutoTestResultPostModel autoTestExternalId(String autoTestExternalId) {
    this.autoTestExternalId = autoTestExternalId;
    return this;
  }

   /**
   * This property is used to set autotest identifier from client system
   * @return autoTestExternalId
  **/
  @Schema(example = "10001", required = true, description = "This property is used to set autotest identifier from client system")
  public String getAutoTestExternalId() {
    return autoTestExternalId;
  }

  public void setAutoTestExternalId(String autoTestExternalId) {
    this.autoTestExternalId = autoTestExternalId;
  }

  public AutoTestResultPostModel outcome(String outcome) {
    this.outcome = outcome;
    return this;
  }

   /**
   * Property can contain one of these values: Passed, Failed, InProgress, Blocked, Skipped
   * @return outcome
  **/
  @Schema(example = "Passed", required = true, description = "Property can contain one of these values: Passed, Failed, InProgress, Blocked, Skipped")
  public String getOutcome() {
    return outcome;
  }

  public void setOutcome(String outcome) {
    this.outcome = outcome;
  }

  public AutoTestResultPostModel message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public AutoTestResultPostModel traces(String traces) {
    this.traces = traces;
    return this;
  }

   /**
   * Get traces
   * @return traces
  **/
  @Schema(example = "Exception in thread main java.lang.NullPointerException at com.example.myproject.MyTest.HealtCheck()", description = "")
  public String getTraces() {
    return traces;
  }

  public void setTraces(String traces) {
    this.traces = traces;
  }

  public AutoTestResultPostModel startedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
    return this;
  }

   /**
   * Get startedOn
   * @return startedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getStartedOn() {
    return startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
  }

  public AutoTestResultPostModel completedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
    return this;
  }

   /**
   * Get completedOn
   * @return completedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCompletedOn() {
    return completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
  }

  public AutoTestResultPostModel duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * minimum: 0
   * @return duration
  **/
  @Schema(example = "10987", description = "")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public AutoTestResultPostModel attachments(List<AttachmentPutModel> attachments) {
    this.attachments = attachments;
    return this;
  }

  public AutoTestResultPostModel addAttachmentsItem(AttachmentPutModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentPutModel>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @Schema(description = "")
  public List<AttachmentPutModel> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentPutModel> attachments) {
    this.attachments = attachments;
  }

  public AutoTestResultPostModel parameters(Map<String, String> parameters) {
    this.parameters = parameters;
    return this;
  }

  public AutoTestResultPostModel putParametersItem(String key, String parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<String, String>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

   /**
   * Get parameters
   * @return parameters
  **/
  @Schema(description = "")
  public Map<String, String> getParameters() {
    return parameters;
  }

  public void setParameters(Map<String, String> parameters) {
    this.parameters = parameters;
  }

  public AutoTestResultPostModel properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public AutoTestResultPostModel putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @Schema(description = "")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }

  public AutoTestResultPostModel stepResults(List<AttachmentPutModelAutoTestStepResultsModel> stepResults) {
    this.stepResults = stepResults;
    return this;
  }

  public AutoTestResultPostModel addStepResultsItem(AttachmentPutModelAutoTestStepResultsModel stepResultsItem) {
    if (this.stepResults == null) {
      this.stepResults = new ArrayList<AttachmentPutModelAutoTestStepResultsModel>();
    }
    this.stepResults.add(stepResultsItem);
    return this;
  }

   /**
   * Get stepResults
   * @return stepResults
  **/
  @Schema(description = "")
  public List<AttachmentPutModelAutoTestStepResultsModel> getStepResults() {
    return stepResults;
  }

  public void setStepResults(List<AttachmentPutModelAutoTestStepResultsModel> stepResults) {
    this.stepResults = stepResults;
  }

  public AutoTestResultPostModel setupResults(List<AttachmentPutModelAutoTestStepResultsModel> setupResults) {
    this.setupResults = setupResults;
    return this;
  }

  public AutoTestResultPostModel addSetupResultsItem(AttachmentPutModelAutoTestStepResultsModel setupResultsItem) {
    if (this.setupResults == null) {
      this.setupResults = new ArrayList<AttachmentPutModelAutoTestStepResultsModel>();
    }
    this.setupResults.add(setupResultsItem);
    return this;
  }

   /**
   * Get setupResults
   * @return setupResults
  **/
  @Schema(description = "")
  public List<AttachmentPutModelAutoTestStepResultsModel> getSetupResults() {
    return setupResults;
  }

  public void setSetupResults(List<AttachmentPutModelAutoTestStepResultsModel> setupResults) {
    this.setupResults = setupResults;
  }

  public AutoTestResultPostModel teardownResults(List<AttachmentPutModelAutoTestStepResultsModel> teardownResults) {
    this.teardownResults = teardownResults;
    return this;
  }

  public AutoTestResultPostModel addTeardownResultsItem(AttachmentPutModelAutoTestStepResultsModel teardownResultsItem) {
    if (this.teardownResults == null) {
      this.teardownResults = new ArrayList<AttachmentPutModelAutoTestStepResultsModel>();
    }
    this.teardownResults.add(teardownResultsItem);
    return this;
  }

   /**
   * Get teardownResults
   * @return teardownResults
  **/
  @Schema(description = "")
  public List<AttachmentPutModelAutoTestStepResultsModel> getTeardownResults() {
    return teardownResults;
  }

  public void setTeardownResults(List<AttachmentPutModelAutoTestStepResultsModel> teardownResults) {
    this.teardownResults = teardownResults;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AutoTestResultPostModel autoTestResultPostModel = (AutoTestResultPostModel) o;
    return Objects.equals(this.testRunId, autoTestResultPostModel.testRunId) &&
        Objects.equals(this.testPlanGlobalId, autoTestResultPostModel.testPlanGlobalId) &&
        Objects.equals(this.configurationGlobalId, autoTestResultPostModel.configurationGlobalId) &&
        Objects.equals(this.links, autoTestResultPostModel.links) &&
        Objects.equals(this.failureReasonNames, autoTestResultPostModel.failureReasonNames) &&
        Objects.equals(this.autoTestExternalId, autoTestResultPostModel.autoTestExternalId) &&
        Objects.equals(this.outcome, autoTestResultPostModel.outcome) &&
        Objects.equals(this.message, autoTestResultPostModel.message) &&
        Objects.equals(this.traces, autoTestResultPostModel.traces) &&
        Objects.equals(this.startedOn, autoTestResultPostModel.startedOn) &&
        Objects.equals(this.completedOn, autoTestResultPostModel.completedOn) &&
        Objects.equals(this.duration, autoTestResultPostModel.duration) &&
        Objects.equals(this.attachments, autoTestResultPostModel.attachments) &&
        Objects.equals(this.parameters, autoTestResultPostModel.parameters) &&
        Objects.equals(this.properties, autoTestResultPostModel.properties) &&
        Objects.equals(this.stepResults, autoTestResultPostModel.stepResults) &&
        Objects.equals(this.setupResults, autoTestResultPostModel.setupResults) &&
        Objects.equals(this.teardownResults, autoTestResultPostModel.teardownResults);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testRunId, testPlanGlobalId, configurationGlobalId, links, failureReasonNames, autoTestExternalId, outcome, message, traces, startedOn, completedOn, duration, attachments, parameters, properties, stepResults, setupResults, teardownResults);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AutoTestResultPostModel {\n");
    
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    testPlanGlobalId: ").append(toIndentedString(testPlanGlobalId)).append("\n");
    sb.append("    configurationGlobalId: ").append(toIndentedString(configurationGlobalId)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    failureReasonNames: ").append(toIndentedString(failureReasonNames)).append("\n");
    sb.append("    autoTestExternalId: ").append(toIndentedString(autoTestExternalId)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    traces: ").append(toIndentedString(traces)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("    stepResults: ").append(toIndentedString(stepResults)).append("\n");
    sb.append("    setupResults: ").append(toIndentedString(setupResults)).append("\n");
    sb.append("    teardownResults: ").append(toIndentedString(teardownResults)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
