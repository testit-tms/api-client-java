/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * GetXlsxTestPointsByTestPlanModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class GetXlsxTestPointsByTestPlanModel {
  @SerializedName("includeName")
  private Boolean includeName = null;

  @SerializedName("includeSection")
  private Boolean includeSection = null;

  @SerializedName("includePriority")
  private Boolean includePriority = null;

  @SerializedName("includeAutomated")
  private Boolean includeAutomated = null;

  @SerializedName("includeStatus")
  private Boolean includeStatus = null;

  @SerializedName("includeDuration")
  private Boolean includeDuration = null;

  @SerializedName("includeCreationDate")
  private Boolean includeCreationDate = null;

  @SerializedName("includeAuthor")
  private Boolean includeAuthor = null;

  @SerializedName("includeModificationDate")
  private Boolean includeModificationDate = null;

  @SerializedName("includeModifiedBy")
  private Boolean includeModifiedBy = null;

  @SerializedName("includeTags")
  private Boolean includeTags = null;

  @SerializedName("includeIterations")
  private Boolean includeIterations = null;

  @SerializedName("customAttributesIds")
  private List<UUID> customAttributesIds = null;

  @SerializedName("configurationIds")
  private List<UUID> configurationIds = null;

  public GetXlsxTestPointsByTestPlanModel includeName(Boolean includeName) {
    this.includeName = includeName;
    return this;
  }

   /**
   * Get includeName
   * @return includeName
  **/
  @Schema(description = "")
  public Boolean isIncludeName() {
    return includeName;
  }

  public void setIncludeName(Boolean includeName) {
    this.includeName = includeName;
  }

  public GetXlsxTestPointsByTestPlanModel includeSection(Boolean includeSection) {
    this.includeSection = includeSection;
    return this;
  }

   /**
   * Get includeSection
   * @return includeSection
  **/
  @Schema(description = "")
  public Boolean isIncludeSection() {
    return includeSection;
  }

  public void setIncludeSection(Boolean includeSection) {
    this.includeSection = includeSection;
  }

  public GetXlsxTestPointsByTestPlanModel includePriority(Boolean includePriority) {
    this.includePriority = includePriority;
    return this;
  }

   /**
   * Get includePriority
   * @return includePriority
  **/
  @Schema(description = "")
  public Boolean isIncludePriority() {
    return includePriority;
  }

  public void setIncludePriority(Boolean includePriority) {
    this.includePriority = includePriority;
  }

  public GetXlsxTestPointsByTestPlanModel includeAutomated(Boolean includeAutomated) {
    this.includeAutomated = includeAutomated;
    return this;
  }

   /**
   * Get includeAutomated
   * @return includeAutomated
  **/
  @Schema(description = "")
  public Boolean isIncludeAutomated() {
    return includeAutomated;
  }

  public void setIncludeAutomated(Boolean includeAutomated) {
    this.includeAutomated = includeAutomated;
  }

  public GetXlsxTestPointsByTestPlanModel includeStatus(Boolean includeStatus) {
    this.includeStatus = includeStatus;
    return this;
  }

   /**
   * Get includeStatus
   * @return includeStatus
  **/
  @Schema(description = "")
  public Boolean isIncludeStatus() {
    return includeStatus;
  }

  public void setIncludeStatus(Boolean includeStatus) {
    this.includeStatus = includeStatus;
  }

  public GetXlsxTestPointsByTestPlanModel includeDuration(Boolean includeDuration) {
    this.includeDuration = includeDuration;
    return this;
  }

   /**
   * Get includeDuration
   * @return includeDuration
  **/
  @Schema(description = "")
  public Boolean isIncludeDuration() {
    return includeDuration;
  }

  public void setIncludeDuration(Boolean includeDuration) {
    this.includeDuration = includeDuration;
  }

  public GetXlsxTestPointsByTestPlanModel includeCreationDate(Boolean includeCreationDate) {
    this.includeCreationDate = includeCreationDate;
    return this;
  }

   /**
   * Get includeCreationDate
   * @return includeCreationDate
  **/
  @Schema(description = "")
  public Boolean isIncludeCreationDate() {
    return includeCreationDate;
  }

  public void setIncludeCreationDate(Boolean includeCreationDate) {
    this.includeCreationDate = includeCreationDate;
  }

  public GetXlsxTestPointsByTestPlanModel includeAuthor(Boolean includeAuthor) {
    this.includeAuthor = includeAuthor;
    return this;
  }

   /**
   * Get includeAuthor
   * @return includeAuthor
  **/
  @Schema(description = "")
  public Boolean isIncludeAuthor() {
    return includeAuthor;
  }

  public void setIncludeAuthor(Boolean includeAuthor) {
    this.includeAuthor = includeAuthor;
  }

  public GetXlsxTestPointsByTestPlanModel includeModificationDate(Boolean includeModificationDate) {
    this.includeModificationDate = includeModificationDate;
    return this;
  }

   /**
   * Get includeModificationDate
   * @return includeModificationDate
  **/
  @Schema(description = "")
  public Boolean isIncludeModificationDate() {
    return includeModificationDate;
  }

  public void setIncludeModificationDate(Boolean includeModificationDate) {
    this.includeModificationDate = includeModificationDate;
  }

  public GetXlsxTestPointsByTestPlanModel includeModifiedBy(Boolean includeModifiedBy) {
    this.includeModifiedBy = includeModifiedBy;
    return this;
  }

   /**
   * Get includeModifiedBy
   * @return includeModifiedBy
  **/
  @Schema(description = "")
  public Boolean isIncludeModifiedBy() {
    return includeModifiedBy;
  }

  public void setIncludeModifiedBy(Boolean includeModifiedBy) {
    this.includeModifiedBy = includeModifiedBy;
  }

  public GetXlsxTestPointsByTestPlanModel includeTags(Boolean includeTags) {
    this.includeTags = includeTags;
    return this;
  }

   /**
   * Get includeTags
   * @return includeTags
  **/
  @Schema(description = "")
  public Boolean isIncludeTags() {
    return includeTags;
  }

  public void setIncludeTags(Boolean includeTags) {
    this.includeTags = includeTags;
  }

  public GetXlsxTestPointsByTestPlanModel includeIterations(Boolean includeIterations) {
    this.includeIterations = includeIterations;
    return this;
  }

   /**
   * Get includeIterations
   * @return includeIterations
  **/
  @Schema(description = "")
  public Boolean isIncludeIterations() {
    return includeIterations;
  }

  public void setIncludeIterations(Boolean includeIterations) {
    this.includeIterations = includeIterations;
  }

  public GetXlsxTestPointsByTestPlanModel customAttributesIds(List<UUID> customAttributesIds) {
    this.customAttributesIds = customAttributesIds;
    return this;
  }

  public GetXlsxTestPointsByTestPlanModel addCustomAttributesIdsItem(UUID customAttributesIdsItem) {
    if (this.customAttributesIds == null) {
      this.customAttributesIds = new ArrayList<UUID>();
    }
    this.customAttributesIds.add(customAttributesIdsItem);
    return this;
  }

   /**
   * Get customAttributesIds
   * @return customAttributesIds
  **/
  @Schema(description = "")
  public List<UUID> getCustomAttributesIds() {
    return customAttributesIds;
  }

  public void setCustomAttributesIds(List<UUID> customAttributesIds) {
    this.customAttributesIds = customAttributesIds;
  }

  public GetXlsxTestPointsByTestPlanModel configurationIds(List<UUID> configurationIds) {
    this.configurationIds = configurationIds;
    return this;
  }

  public GetXlsxTestPointsByTestPlanModel addConfigurationIdsItem(UUID configurationIdsItem) {
    if (this.configurationIds == null) {
      this.configurationIds = new ArrayList<UUID>();
    }
    this.configurationIds.add(configurationIdsItem);
    return this;
  }

   /**
   * Get configurationIds
   * @return configurationIds
  **/
  @Schema(description = "")
  public List<UUID> getConfigurationIds() {
    return configurationIds;
  }

  public void setConfigurationIds(List<UUID> configurationIds) {
    this.configurationIds = configurationIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetXlsxTestPointsByTestPlanModel getXlsxTestPointsByTestPlanModel = (GetXlsxTestPointsByTestPlanModel) o;
    return Objects.equals(this.includeName, getXlsxTestPointsByTestPlanModel.includeName) &&
        Objects.equals(this.includeSection, getXlsxTestPointsByTestPlanModel.includeSection) &&
        Objects.equals(this.includePriority, getXlsxTestPointsByTestPlanModel.includePriority) &&
        Objects.equals(this.includeAutomated, getXlsxTestPointsByTestPlanModel.includeAutomated) &&
        Objects.equals(this.includeStatus, getXlsxTestPointsByTestPlanModel.includeStatus) &&
        Objects.equals(this.includeDuration, getXlsxTestPointsByTestPlanModel.includeDuration) &&
        Objects.equals(this.includeCreationDate, getXlsxTestPointsByTestPlanModel.includeCreationDate) &&
        Objects.equals(this.includeAuthor, getXlsxTestPointsByTestPlanModel.includeAuthor) &&
        Objects.equals(this.includeModificationDate, getXlsxTestPointsByTestPlanModel.includeModificationDate) &&
        Objects.equals(this.includeModifiedBy, getXlsxTestPointsByTestPlanModel.includeModifiedBy) &&
        Objects.equals(this.includeTags, getXlsxTestPointsByTestPlanModel.includeTags) &&
        Objects.equals(this.includeIterations, getXlsxTestPointsByTestPlanModel.includeIterations) &&
        Objects.equals(this.customAttributesIds, getXlsxTestPointsByTestPlanModel.customAttributesIds) &&
        Objects.equals(this.configurationIds, getXlsxTestPointsByTestPlanModel.configurationIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeName, includeSection, includePriority, includeAutomated, includeStatus, includeDuration, includeCreationDate, includeAuthor, includeModificationDate, includeModifiedBy, includeTags, includeIterations, customAttributesIds, configurationIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetXlsxTestPointsByTestPlanModel {\n");
    
    sb.append("    includeName: ").append(toIndentedString(includeName)).append("\n");
    sb.append("    includeSection: ").append(toIndentedString(includeSection)).append("\n");
    sb.append("    includePriority: ").append(toIndentedString(includePriority)).append("\n");
    sb.append("    includeAutomated: ").append(toIndentedString(includeAutomated)).append("\n");
    sb.append("    includeStatus: ").append(toIndentedString(includeStatus)).append("\n");
    sb.append("    includeDuration: ").append(toIndentedString(includeDuration)).append("\n");
    sb.append("    includeCreationDate: ").append(toIndentedString(includeCreationDate)).append("\n");
    sb.append("    includeAuthor: ").append(toIndentedString(includeAuthor)).append("\n");
    sb.append("    includeModificationDate: ").append(toIndentedString(includeModificationDate)).append("\n");
    sb.append("    includeModifiedBy: ").append(toIndentedString(includeModifiedBy)).append("\n");
    sb.append("    includeTags: ").append(toIndentedString(includeTags)).append("\n");
    sb.append("    includeIterations: ").append(toIndentedString(includeIterations)).append("\n");
    sb.append("    customAttributesIds: ").append(toIndentedString(customAttributesIds)).append("\n");
    sb.append("    configurationIds: ").append(toIndentedString(configurationIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
