/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.testit.model.AttachmentModel;
import ru.testit.model.LinkModel;
/**
 * LastTestResultModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class LastTestResultModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("testRunId")
  private UUID testRunId = null;

  @SerializedName("autoTestId")
  private UUID autoTestId = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("links")
  private List<LinkModel> links = null;

  @SerializedName("workItemVersionId")
  private UUID workItemVersionId = null;

  @SerializedName("attachments")
  private List<AttachmentModel> attachments = null;

  public LastTestResultModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public LastTestResultModel testRunId(UUID testRunId) {
    this.testRunId = testRunId;
    return this;
  }

   /**
   * Get testRunId
   * @return testRunId
  **/
  @Schema(description = "")
  public UUID getTestRunId() {
    return testRunId;
  }

  public void setTestRunId(UUID testRunId) {
    this.testRunId = testRunId;
  }

  public LastTestResultModel autoTestId(UUID autoTestId) {
    this.autoTestId = autoTestId;
    return this;
  }

   /**
   * Get autoTestId
   * @return autoTestId
  **/
  @Schema(description = "")
  public UUID getAutoTestId() {
    return autoTestId;
  }

  public void setAutoTestId(UUID autoTestId) {
    this.autoTestId = autoTestId;
  }

  public LastTestResultModel comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public LastTestResultModel links(List<LinkModel> links) {
    this.links = links;
    return this;
  }

  public LastTestResultModel addLinksItem(LinkModel linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkModel>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<LinkModel> getLinks() {
    return links;
  }

  public void setLinks(List<LinkModel> links) {
    this.links = links;
  }

  public LastTestResultModel workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
    return this;
  }

   /**
   * Get workItemVersionId
   * @return workItemVersionId
  **/
  @Schema(description = "")
  public UUID getWorkItemVersionId() {
    return workItemVersionId;
  }

  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }

  public LastTestResultModel attachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
    return this;
  }

  public LastTestResultModel addAttachmentsItem(AttachmentModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentModel>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @Schema(description = "")
  public List<AttachmentModel> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LastTestResultModel lastTestResultModel = (LastTestResultModel) o;
    return Objects.equals(this.id, lastTestResultModel.id) &&
        Objects.equals(this.testRunId, lastTestResultModel.testRunId) &&
        Objects.equals(this.autoTestId, lastTestResultModel.autoTestId) &&
        Objects.equals(this.comment, lastTestResultModel.comment) &&
        Objects.equals(this.links, lastTestResultModel.links) &&
        Objects.equals(this.workItemVersionId, lastTestResultModel.workItemVersionId) &&
        Objects.equals(this.attachments, lastTestResultModel.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, testRunId, autoTestId, comment, links, workItemVersionId, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LastTestResultModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    autoTestId: ").append(toIndentedString(autoTestId)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
