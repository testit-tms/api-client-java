/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.CustomAttributeModel;
/**
 * ProjectModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class ProjectModel {
  @SerializedName("attributesScheme")
  private List<CustomAttributeModel> attributesScheme = null;

  @SerializedName("testPlansAttributesScheme")
  private List<CustomAttributeModel> testPlansAttributesScheme = null;

  @SerializedName("testCasesCount")
  private Integer testCasesCount = null;

  @SerializedName("sharedStepsCount")
  private Integer sharedStepsCount = null;

  @SerializedName("checkListsCount")
  private Integer checkListsCount = null;

  @SerializedName("autoTestsCount")
  private Integer autoTestsCount = null;

  @SerializedName("isFavorite")
  private Boolean isFavorite = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("modifiedDate")
  private OffsetDateTime modifiedDate = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("modifiedById")
  private UUID modifiedById = null;

  @SerializedName("globalId")
  private Long globalId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("name")
  private String name = null;

  public ProjectModel attributesScheme(List<CustomAttributeModel> attributesScheme) {
    this.attributesScheme = attributesScheme;
    return this;
  }

  public ProjectModel addAttributesSchemeItem(CustomAttributeModel attributesSchemeItem) {
    if (this.attributesScheme == null) {
      this.attributesScheme = new ArrayList<CustomAttributeModel>();
    }
    this.attributesScheme.add(attributesSchemeItem);
    return this;
  }

   /**
   * Get attributesScheme
   * @return attributesScheme
  **/
  @Schema(description = "")
  public List<CustomAttributeModel> getAttributesScheme() {
    return attributesScheme;
  }

  public void setAttributesScheme(List<CustomAttributeModel> attributesScheme) {
    this.attributesScheme = attributesScheme;
  }

  public ProjectModel testPlansAttributesScheme(List<CustomAttributeModel> testPlansAttributesScheme) {
    this.testPlansAttributesScheme = testPlansAttributesScheme;
    return this;
  }

  public ProjectModel addTestPlansAttributesSchemeItem(CustomAttributeModel testPlansAttributesSchemeItem) {
    if (this.testPlansAttributesScheme == null) {
      this.testPlansAttributesScheme = new ArrayList<CustomAttributeModel>();
    }
    this.testPlansAttributesScheme.add(testPlansAttributesSchemeItem);
    return this;
  }

   /**
   * Get testPlansAttributesScheme
   * @return testPlansAttributesScheme
  **/
  @Schema(description = "")
  public List<CustomAttributeModel> getTestPlansAttributesScheme() {
    return testPlansAttributesScheme;
  }

  public void setTestPlansAttributesScheme(List<CustomAttributeModel> testPlansAttributesScheme) {
    this.testPlansAttributesScheme = testPlansAttributesScheme;
  }

  public ProjectModel testCasesCount(Integer testCasesCount) {
    this.testCasesCount = testCasesCount;
    return this;
  }

   /**
   * Get testCasesCount
   * @return testCasesCount
  **/
  @Schema(example = "1", description = "")
  public Integer getTestCasesCount() {
    return testCasesCount;
  }

  public void setTestCasesCount(Integer testCasesCount) {
    this.testCasesCount = testCasesCount;
  }

  public ProjectModel sharedStepsCount(Integer sharedStepsCount) {
    this.sharedStepsCount = sharedStepsCount;
    return this;
  }

   /**
   * Get sharedStepsCount
   * @return sharedStepsCount
  **/
  @Schema(example = "2", description = "")
  public Integer getSharedStepsCount() {
    return sharedStepsCount;
  }

  public void setSharedStepsCount(Integer sharedStepsCount) {
    this.sharedStepsCount = sharedStepsCount;
  }

  public ProjectModel checkListsCount(Integer checkListsCount) {
    this.checkListsCount = checkListsCount;
    return this;
  }

   /**
   * Get checkListsCount
   * @return checkListsCount
  **/
  @Schema(example = "5", description = "")
  public Integer getCheckListsCount() {
    return checkListsCount;
  }

  public void setCheckListsCount(Integer checkListsCount) {
    this.checkListsCount = checkListsCount;
  }

  public ProjectModel autoTestsCount(Integer autoTestsCount) {
    this.autoTestsCount = autoTestsCount;
    return this;
  }

   /**
   * Get autoTestsCount
   * @return autoTestsCount
  **/
  @Schema(example = "10", description = "")
  public Integer getAutoTestsCount() {
    return autoTestsCount;
  }

  public void setAutoTestsCount(Integer autoTestsCount) {
    this.autoTestsCount = autoTestsCount;
  }

  public ProjectModel isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Property is used to filter favourite projects
   * @return isFavorite
  **/
  @Schema(example = "true", description = "Property is used to filter favourite projects")
  public Boolean isIsFavorite() {
    return isFavorite;
  }

  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }

  public ProjectModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(example = "true", description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public ProjectModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public ProjectModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public ProjectModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public ProjectModel modifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getModifiedById() {
    return modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
  }

  public ProjectModel globalId(Long globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * Get globalId
   * @return globalId
  **/
  @Schema(example = "1000", description = "")
  public Long getGlobalId() {
    return globalId;
  }

  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }

  public ProjectModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public ProjectModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "This project contains core tests", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public ProjectModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Core tests", required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectModel projectModel = (ProjectModel) o;
    return Objects.equals(this.attributesScheme, projectModel.attributesScheme) &&
        Objects.equals(this.testPlansAttributesScheme, projectModel.testPlansAttributesScheme) &&
        Objects.equals(this.testCasesCount, projectModel.testCasesCount) &&
        Objects.equals(this.sharedStepsCount, projectModel.sharedStepsCount) &&
        Objects.equals(this.checkListsCount, projectModel.checkListsCount) &&
        Objects.equals(this.autoTestsCount, projectModel.autoTestsCount) &&
        Objects.equals(this.isFavorite, projectModel.isFavorite) &&
        Objects.equals(this.isDeleted, projectModel.isDeleted) &&
        Objects.equals(this.createdDate, projectModel.createdDate) &&
        Objects.equals(this.modifiedDate, projectModel.modifiedDate) &&
        Objects.equals(this.createdById, projectModel.createdById) &&
        Objects.equals(this.modifiedById, projectModel.modifiedById) &&
        Objects.equals(this.globalId, projectModel.globalId) &&
        Objects.equals(this.id, projectModel.id) &&
        Objects.equals(this.description, projectModel.description) &&
        Objects.equals(this.name, projectModel.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributesScheme, testPlansAttributesScheme, testCasesCount, sharedStepsCount, checkListsCount, autoTestsCount, isFavorite, isDeleted, createdDate, modifiedDate, createdById, modifiedById, globalId, id, description, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectModel {\n");
    
    sb.append("    attributesScheme: ").append(toIndentedString(attributesScheme)).append("\n");
    sb.append("    testPlansAttributesScheme: ").append(toIndentedString(testPlansAttributesScheme)).append("\n");
    sb.append("    testCasesCount: ").append(toIndentedString(testCasesCount)).append("\n");
    sb.append("    sharedStepsCount: ").append(toIndentedString(sharedStepsCount)).append("\n");
    sb.append("    checkListsCount: ").append(toIndentedString(checkListsCount)).append("\n");
    sb.append("    autoTestsCount: ").append(toIndentedString(autoTestsCount)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
