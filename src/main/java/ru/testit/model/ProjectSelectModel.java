/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
/**
 * ProjectSelectModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class ProjectSelectModel {
  @SerializedName("name")
  private String name = null;

  @SerializedName("isFavorite")
  private Boolean isFavorite = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  @SerializedName("minTestCasesCount")
  private Integer minTestCasesCount = null;

  @SerializedName("maxTestCasesCount")
  private Integer maxTestCasesCount = null;

  @SerializedName("minChecklistsCount")
  private Integer minChecklistsCount = null;

  @SerializedName("maxChecklistsCount")
  private Integer maxChecklistsCount = null;

  @SerializedName("minSharedStepsCount")
  private Integer minSharedStepsCount = null;

  @SerializedName("maxSharedStepsCount")
  private Integer maxSharedStepsCount = null;

  @SerializedName("minAutotestsCount")
  private Integer minAutotestsCount = null;

  @SerializedName("maxAutotestsCount")
  private Integer maxAutotestsCount = null;

  @SerializedName("globalIds")
  private List<Long> globalIds = null;

  @SerializedName("createdByIds")
  private List<UUID> createdByIds = null;

  @SerializedName("createdFrom")
  private OffsetDateTime createdFrom = null;

  @SerializedName("createdTo")
  private OffsetDateTime createdTo = null;

  public ProjectSelectModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ProjectSelectModel isFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
    return this;
  }

   /**
   * Get isFavorite
   * @return isFavorite
  **/
  @Schema(description = "")
  public Boolean isIsFavorite() {
    return isFavorite;
  }

  public void setIsFavorite(Boolean isFavorite) {
    this.isFavorite = isFavorite;
  }

  public ProjectSelectModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public ProjectSelectModel minTestCasesCount(Integer minTestCasesCount) {
    this.minTestCasesCount = minTestCasesCount;
    return this;
  }

   /**
   * Get minTestCasesCount
   * minimum: 0
   * maximum: 2147483647
   * @return minTestCasesCount
  **/
  @Schema(description = "")
  public Integer getMinTestCasesCount() {
    return minTestCasesCount;
  }

  public void setMinTestCasesCount(Integer minTestCasesCount) {
    this.minTestCasesCount = minTestCasesCount;
  }

  public ProjectSelectModel maxTestCasesCount(Integer maxTestCasesCount) {
    this.maxTestCasesCount = maxTestCasesCount;
    return this;
  }

   /**
   * Get maxTestCasesCount
   * minimum: 0
   * maximum: 2147483647
   * @return maxTestCasesCount
  **/
  @Schema(description = "")
  public Integer getMaxTestCasesCount() {
    return maxTestCasesCount;
  }

  public void setMaxTestCasesCount(Integer maxTestCasesCount) {
    this.maxTestCasesCount = maxTestCasesCount;
  }

  public ProjectSelectModel minChecklistsCount(Integer minChecklistsCount) {
    this.minChecklistsCount = minChecklistsCount;
    return this;
  }

   /**
   * Get minChecklistsCount
   * minimum: 0
   * maximum: 2147483647
   * @return minChecklistsCount
  **/
  @Schema(description = "")
  public Integer getMinChecklistsCount() {
    return minChecklistsCount;
  }

  public void setMinChecklistsCount(Integer minChecklistsCount) {
    this.minChecklistsCount = minChecklistsCount;
  }

  public ProjectSelectModel maxChecklistsCount(Integer maxChecklistsCount) {
    this.maxChecklistsCount = maxChecklistsCount;
    return this;
  }

   /**
   * Get maxChecklistsCount
   * minimum: 0
   * maximum: 2147483647
   * @return maxChecklistsCount
  **/
  @Schema(description = "")
  public Integer getMaxChecklistsCount() {
    return maxChecklistsCount;
  }

  public void setMaxChecklistsCount(Integer maxChecklistsCount) {
    this.maxChecklistsCount = maxChecklistsCount;
  }

  public ProjectSelectModel minSharedStepsCount(Integer minSharedStepsCount) {
    this.minSharedStepsCount = minSharedStepsCount;
    return this;
  }

   /**
   * Get minSharedStepsCount
   * minimum: 0
   * maximum: 2147483647
   * @return minSharedStepsCount
  **/
  @Schema(description = "")
  public Integer getMinSharedStepsCount() {
    return minSharedStepsCount;
  }

  public void setMinSharedStepsCount(Integer minSharedStepsCount) {
    this.minSharedStepsCount = minSharedStepsCount;
  }

  public ProjectSelectModel maxSharedStepsCount(Integer maxSharedStepsCount) {
    this.maxSharedStepsCount = maxSharedStepsCount;
    return this;
  }

   /**
   * Get maxSharedStepsCount
   * minimum: 0
   * maximum: 2147483647
   * @return maxSharedStepsCount
  **/
  @Schema(description = "")
  public Integer getMaxSharedStepsCount() {
    return maxSharedStepsCount;
  }

  public void setMaxSharedStepsCount(Integer maxSharedStepsCount) {
    this.maxSharedStepsCount = maxSharedStepsCount;
  }

  public ProjectSelectModel minAutotestsCount(Integer minAutotestsCount) {
    this.minAutotestsCount = minAutotestsCount;
    return this;
  }

   /**
   * Get minAutotestsCount
   * minimum: 0
   * maximum: 2147483647
   * @return minAutotestsCount
  **/
  @Schema(description = "")
  public Integer getMinAutotestsCount() {
    return minAutotestsCount;
  }

  public void setMinAutotestsCount(Integer minAutotestsCount) {
    this.minAutotestsCount = minAutotestsCount;
  }

  public ProjectSelectModel maxAutotestsCount(Integer maxAutotestsCount) {
    this.maxAutotestsCount = maxAutotestsCount;
    return this;
  }

   /**
   * Get maxAutotestsCount
   * minimum: 0
   * maximum: 2147483647
   * @return maxAutotestsCount
  **/
  @Schema(description = "")
  public Integer getMaxAutotestsCount() {
    return maxAutotestsCount;
  }

  public void setMaxAutotestsCount(Integer maxAutotestsCount) {
    this.maxAutotestsCount = maxAutotestsCount;
  }

  public ProjectSelectModel globalIds(List<Long> globalIds) {
    this.globalIds = globalIds;
    return this;
  }

  public ProjectSelectModel addGlobalIdsItem(Long globalIdsItem) {
    if (this.globalIds == null) {
      this.globalIds = new ArrayList<Long>();
    }
    this.globalIds.add(globalIdsItem);
    return this;
  }

   /**
   * Get globalIds
   * @return globalIds
  **/
  @Schema(description = "")
  public List<Long> getGlobalIds() {
    return globalIds;
  }

  public void setGlobalIds(List<Long> globalIds) {
    this.globalIds = globalIds;
  }

  public ProjectSelectModel createdByIds(List<UUID> createdByIds) {
    this.createdByIds = createdByIds;
    return this;
  }

  public ProjectSelectModel addCreatedByIdsItem(UUID createdByIdsItem) {
    if (this.createdByIds == null) {
      this.createdByIds = new ArrayList<UUID>();
    }
    this.createdByIds.add(createdByIdsItem);
    return this;
  }

   /**
   * Get createdByIds
   * @return createdByIds
  **/
  @Schema(description = "")
  public List<UUID> getCreatedByIds() {
    return createdByIds;
  }

  public void setCreatedByIds(List<UUID> createdByIds) {
    this.createdByIds = createdByIds;
  }

  public ProjectSelectModel createdFrom(OffsetDateTime createdFrom) {
    this.createdFrom = createdFrom;
    return this;
  }

   /**
   * Get createdFrom
   * @return createdFrom
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedFrom() {
    return createdFrom;
  }

  public void setCreatedFrom(OffsetDateTime createdFrom) {
    this.createdFrom = createdFrom;
  }

  public ProjectSelectModel createdTo(OffsetDateTime createdTo) {
    this.createdTo = createdTo;
    return this;
  }

   /**
   * Get createdTo
   * @return createdTo
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedTo() {
    return createdTo;
  }

  public void setCreatedTo(OffsetDateTime createdTo) {
    this.createdTo = createdTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectSelectModel projectSelectModel = (ProjectSelectModel) o;
    return Objects.equals(this.name, projectSelectModel.name) &&
        Objects.equals(this.isFavorite, projectSelectModel.isFavorite) &&
        Objects.equals(this.isDeleted, projectSelectModel.isDeleted) &&
        Objects.equals(this.minTestCasesCount, projectSelectModel.minTestCasesCount) &&
        Objects.equals(this.maxTestCasesCount, projectSelectModel.maxTestCasesCount) &&
        Objects.equals(this.minChecklistsCount, projectSelectModel.minChecklistsCount) &&
        Objects.equals(this.maxChecklistsCount, projectSelectModel.maxChecklistsCount) &&
        Objects.equals(this.minSharedStepsCount, projectSelectModel.minSharedStepsCount) &&
        Objects.equals(this.maxSharedStepsCount, projectSelectModel.maxSharedStepsCount) &&
        Objects.equals(this.minAutotestsCount, projectSelectModel.minAutotestsCount) &&
        Objects.equals(this.maxAutotestsCount, projectSelectModel.maxAutotestsCount) &&
        Objects.equals(this.globalIds, projectSelectModel.globalIds) &&
        Objects.equals(this.createdByIds, projectSelectModel.createdByIds) &&
        Objects.equals(this.createdFrom, projectSelectModel.createdFrom) &&
        Objects.equals(this.createdTo, projectSelectModel.createdTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, isFavorite, isDeleted, minTestCasesCount, maxTestCasesCount, minChecklistsCount, maxChecklistsCount, minSharedStepsCount, maxSharedStepsCount, minAutotestsCount, maxAutotestsCount, globalIds, createdByIds, createdFrom, createdTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectSelectModel {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    isFavorite: ").append(toIndentedString(isFavorite)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    minTestCasesCount: ").append(toIndentedString(minTestCasesCount)).append("\n");
    sb.append("    maxTestCasesCount: ").append(toIndentedString(maxTestCasesCount)).append("\n");
    sb.append("    minChecklistsCount: ").append(toIndentedString(minChecklistsCount)).append("\n");
    sb.append("    maxChecklistsCount: ").append(toIndentedString(maxChecklistsCount)).append("\n");
    sb.append("    minSharedStepsCount: ").append(toIndentedString(minSharedStepsCount)).append("\n");
    sb.append("    maxSharedStepsCount: ").append(toIndentedString(maxSharedStepsCount)).append("\n");
    sb.append("    minAutotestsCount: ").append(toIndentedString(minAutotestsCount)).append("\n");
    sb.append("    maxAutotestsCount: ").append(toIndentedString(maxAutotestsCount)).append("\n");
    sb.append("    globalIds: ").append(toIndentedString(globalIds)).append("\n");
    sb.append("    createdByIds: ").append(toIndentedString(createdByIds)).append("\n");
    sb.append("    createdFrom: ").append(toIndentedString(createdFrom)).append("\n");
    sb.append("    createdTo: ").append(toIndentedString(createdTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
