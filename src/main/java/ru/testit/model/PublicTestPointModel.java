/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.testit.model.ParameterShortModel;
/**
 * PublicTestPointModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class PublicTestPointModel {
  @SerializedName("configurationId")
  private UUID configurationId = null;

  @SerializedName("configurationGlobalId")
  private Long configurationGlobalId = null;

  @SerializedName("autoTestIds")
  private List<UUID> autoTestIds = null;

  @SerializedName("iterationId")
  private UUID iterationId = null;

  @SerializedName("parameterModels")
  private List<ParameterShortModel> parameterModels = null;

  public PublicTestPointModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Get configurationId
   * @return configurationId
  **/
  @Schema(description = "")
  public UUID getConfigurationId() {
    return configurationId;
  }

  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }

  public PublicTestPointModel configurationGlobalId(Long configurationGlobalId) {
    this.configurationGlobalId = configurationGlobalId;
    return this;
  }

   /**
   * Get configurationGlobalId
   * @return configurationGlobalId
  **/
  @Schema(description = "")
  public Long getConfigurationGlobalId() {
    return configurationGlobalId;
  }

  public void setConfigurationGlobalId(Long configurationGlobalId) {
    this.configurationGlobalId = configurationGlobalId;
  }

  public PublicTestPointModel autoTestIds(List<UUID> autoTestIds) {
    this.autoTestIds = autoTestIds;
    return this;
  }

  public PublicTestPointModel addAutoTestIdsItem(UUID autoTestIdsItem) {
    if (this.autoTestIds == null) {
      this.autoTestIds = new ArrayList<UUID>();
    }
    this.autoTestIds.add(autoTestIdsItem);
    return this;
  }

   /**
   * Get autoTestIds
   * @return autoTestIds
  **/
  @Schema(description = "")
  public List<UUID> getAutoTestIds() {
    return autoTestIds;
  }

  public void setAutoTestIds(List<UUID> autoTestIds) {
    this.autoTestIds = autoTestIds;
  }

  public PublicTestPointModel iterationId(UUID iterationId) {
    this.iterationId = iterationId;
    return this;
  }

   /**
   * Get iterationId
   * @return iterationId
  **/
  @Schema(description = "")
  public UUID getIterationId() {
    return iterationId;
  }

  public void setIterationId(UUID iterationId) {
    this.iterationId = iterationId;
  }

  public PublicTestPointModel parameterModels(List<ParameterShortModel> parameterModels) {
    this.parameterModels = parameterModels;
    return this;
  }

  public PublicTestPointModel addParameterModelsItem(ParameterShortModel parameterModelsItem) {
    if (this.parameterModels == null) {
      this.parameterModels = new ArrayList<ParameterShortModel>();
    }
    this.parameterModels.add(parameterModelsItem);
    return this;
  }

   /**
   * Get parameterModels
   * @return parameterModels
  **/
  @Schema(description = "")
  public List<ParameterShortModel> getParameterModels() {
    return parameterModels;
  }

  public void setParameterModels(List<ParameterShortModel> parameterModels) {
    this.parameterModels = parameterModels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublicTestPointModel publicTestPointModel = (PublicTestPointModel) o;
    return Objects.equals(this.configurationId, publicTestPointModel.configurationId) &&
        Objects.equals(this.configurationGlobalId, publicTestPointModel.configurationGlobalId) &&
        Objects.equals(this.autoTestIds, publicTestPointModel.autoTestIds) &&
        Objects.equals(this.iterationId, publicTestPointModel.iterationId) &&
        Objects.equals(this.parameterModels, publicTestPointModel.parameterModels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configurationId, configurationGlobalId, autoTestIds, iterationId, parameterModels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublicTestPointModel {\n");
    
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    configurationGlobalId: ").append(toIndentedString(configurationGlobalId)).append("\n");
    sb.append("    autoTestIds: ").append(toIndentedString(autoTestIds)).append("\n");
    sb.append("    iterationId: ").append(toIndentedString(iterationId)).append("\n");
    sb.append("    parameterModels: ").append(toIndentedString(parameterModels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
