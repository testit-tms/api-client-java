/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * SectionMoveModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class SectionMoveModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("oldParentId")
  private UUID oldParentId = null;

  @SerializedName("parentId")
  private UUID parentId = null;

  @SerializedName("nextSectionId")
  private UUID nextSectionId = null;

  public SectionMoveModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(required = true, description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public SectionMoveModel oldParentId(UUID oldParentId) {
    this.oldParentId = oldParentId;
    return this;
  }

   /**
   * Get oldParentId
   * @return oldParentId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", required = true, description = "")
  public UUID getOldParentId() {
    return oldParentId;
  }

  public void setOldParentId(UUID oldParentId) {
    this.oldParentId = oldParentId;
  }

  public SectionMoveModel parentId(UUID parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * Get parentId
   * @return parentId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", required = true, description = "")
  public UUID getParentId() {
    return parentId;
  }

  public void setParentId(UUID parentId) {
    this.parentId = parentId;
  }

  public SectionMoveModel nextSectionId(UUID nextSectionId) {
    this.nextSectionId = nextSectionId;
    return this;
  }

   /**
   * Used for section rank set
   * @return nextSectionId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "Used for section rank set")
  public UUID getNextSectionId() {
    return nextSectionId;
  }

  public void setNextSectionId(UUID nextSectionId) {
    this.nextSectionId = nextSectionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SectionMoveModel sectionMoveModel = (SectionMoveModel) o;
    return Objects.equals(this.id, sectionMoveModel.id) &&
        Objects.equals(this.oldParentId, sectionMoveModel.oldParentId) &&
        Objects.equals(this.parentId, sectionMoveModel.parentId) &&
        Objects.equals(this.nextSectionId, sectionMoveModel.nextSectionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, oldParentId, parentId, nextSectionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SectionMoveModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    oldParentId: ").append(toIndentedString(oldParentId)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    nextSectionId: ").append(toIndentedString(nextSectionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
