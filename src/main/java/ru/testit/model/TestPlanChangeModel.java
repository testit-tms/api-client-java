/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.TestPlanChangedFieldsViewModel;
/**
 * TestPlanChangeModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPlanChangeModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("testPlanId")
  private UUID testPlanId = null;

  @SerializedName("testPlanChangedFields")
  private TestPlanChangedFieldsViewModel testPlanChangedFields = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  public TestPlanChangeModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestPlanChangeModel testPlanId(UUID testPlanId) {
    this.testPlanId = testPlanId;
    return this;
  }

   /**
   * Get testPlanId
   * @return testPlanId
  **/
  @Schema(description = "")
  public UUID getTestPlanId() {
    return testPlanId;
  }

  public void setTestPlanId(UUID testPlanId) {
    this.testPlanId = testPlanId;
  }

  public TestPlanChangeModel testPlanChangedFields(TestPlanChangedFieldsViewModel testPlanChangedFields) {
    this.testPlanChangedFields = testPlanChangedFields;
    return this;
  }

   /**
   * Get testPlanChangedFields
   * @return testPlanChangedFields
  **/
  @Schema(description = "")
  public TestPlanChangedFieldsViewModel getTestPlanChangedFields() {
    return testPlanChangedFields;
  }

  public void setTestPlanChangedFields(TestPlanChangedFieldsViewModel testPlanChangedFields) {
    this.testPlanChangedFields = testPlanChangedFields;
  }

  public TestPlanChangeModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public TestPlanChangeModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanChangeModel testPlanChangeModel = (TestPlanChangeModel) o;
    return Objects.equals(this.id, testPlanChangeModel.id) &&
        Objects.equals(this.testPlanId, testPlanChangeModel.testPlanId) &&
        Objects.equals(this.testPlanChangedFields, testPlanChangeModel.testPlanChangedFields) &&
        Objects.equals(this.createdById, testPlanChangeModel.createdById) &&
        Objects.equals(this.createdDate, testPlanChangeModel.createdDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, testPlanId, testPlanChangedFields, createdById, createdDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanChangeModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    testPlanId: ").append(toIndentedString(testPlanId)).append("\n");
    sb.append("    testPlanChangedFields: ").append(toIndentedString(testPlanChangedFields)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
