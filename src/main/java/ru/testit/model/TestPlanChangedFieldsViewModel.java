/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import ru.testit.model.BooleanNullableTestPlanChangedFieldViewModel;
import ru.testit.model.BooleanTestPlanChangedFieldViewModel;
import ru.testit.model.CustomAttributeChangeModel;
import ru.testit.model.PeriodViewModelTestPlanChangedFieldViewModel;
import ru.testit.model.StringArrayTestPlanChangedFieldViewModel;
import ru.testit.model.StringTestPlanChangedFieldViewModel;
import ru.testit.model.TestPointChangeViewModelTestPlanChangedFieldViewModel;
import ru.testit.model.TestResultChangeViewModelTestPlanChangedFieldViewModel;
import ru.testit.model.TestSuiteChangeViewModelTestPlanChangedFieldViewModel;
/**
 * TestPlanChangedFieldsViewModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPlanChangedFieldsViewModel {
  @SerializedName("name")
  private StringTestPlanChangedFieldViewModel name = null;

  @SerializedName("description")
  private StringTestPlanChangedFieldViewModel description = null;

  @SerializedName("productName")
  private StringTestPlanChangedFieldViewModel productName = null;

  @SerializedName("build")
  private StringTestPlanChangedFieldViewModel build = null;

  @SerializedName("period")
  private PeriodViewModelTestPlanChangedFieldViewModel period = null;

  @SerializedName("status")
  private StringTestPlanChangedFieldViewModel status = null;

  @SerializedName("tags")
  private StringArrayTestPlanChangedFieldViewModel tags = null;

  @SerializedName("testSuite")
  private TestSuiteChangeViewModelTestPlanChangedFieldViewModel testSuite = null;

  @SerializedName("testPoints")
  private TestPointChangeViewModelTestPlanChangedFieldViewModel testPoints = null;

  @SerializedName("testResults")
  private TestResultChangeViewModelTestPlanChangedFieldViewModel testResults = null;

  @SerializedName("locking")
  private BooleanTestPlanChangedFieldViewModel locking = null;

  @SerializedName("hasAutomaticDurationTimer")
  private BooleanNullableTestPlanChangedFieldViewModel hasAutomaticDurationTimer = null;

  @SerializedName("attributes")
  private Map<String, CustomAttributeChangeModel> attributes = null;

  public TestPlanChangedFieldsViewModel name(StringTestPlanChangedFieldViewModel name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public StringTestPlanChangedFieldViewModel getName() {
    return name;
  }

  public void setName(StringTestPlanChangedFieldViewModel name) {
    this.name = name;
  }

  public TestPlanChangedFieldsViewModel description(StringTestPlanChangedFieldViewModel description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public StringTestPlanChangedFieldViewModel getDescription() {
    return description;
  }

  public void setDescription(StringTestPlanChangedFieldViewModel description) {
    this.description = description;
  }

  public TestPlanChangedFieldsViewModel productName(StringTestPlanChangedFieldViewModel productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @Schema(description = "")
  public StringTestPlanChangedFieldViewModel getProductName() {
    return productName;
  }

  public void setProductName(StringTestPlanChangedFieldViewModel productName) {
    this.productName = productName;
  }

  public TestPlanChangedFieldsViewModel build(StringTestPlanChangedFieldViewModel build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @Schema(description = "")
  public StringTestPlanChangedFieldViewModel getBuild() {
    return build;
  }

  public void setBuild(StringTestPlanChangedFieldViewModel build) {
    this.build = build;
  }

  public TestPlanChangedFieldsViewModel period(PeriodViewModelTestPlanChangedFieldViewModel period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @Schema(description = "")
  public PeriodViewModelTestPlanChangedFieldViewModel getPeriod() {
    return period;
  }

  public void setPeriod(PeriodViewModelTestPlanChangedFieldViewModel period) {
    this.period = period;
  }

  public TestPlanChangedFieldsViewModel status(StringTestPlanChangedFieldViewModel status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StringTestPlanChangedFieldViewModel getStatus() {
    return status;
  }

  public void setStatus(StringTestPlanChangedFieldViewModel status) {
    this.status = status;
  }

  public TestPlanChangedFieldsViewModel tags(StringArrayTestPlanChangedFieldViewModel tags) {
    this.tags = tags;
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public StringArrayTestPlanChangedFieldViewModel getTags() {
    return tags;
  }

  public void setTags(StringArrayTestPlanChangedFieldViewModel tags) {
    this.tags = tags;
  }

  public TestPlanChangedFieldsViewModel testSuite(TestSuiteChangeViewModelTestPlanChangedFieldViewModel testSuite) {
    this.testSuite = testSuite;
    return this;
  }

   /**
   * Get testSuite
   * @return testSuite
  **/
  @Schema(description = "")
  public TestSuiteChangeViewModelTestPlanChangedFieldViewModel getTestSuite() {
    return testSuite;
  }

  public void setTestSuite(TestSuiteChangeViewModelTestPlanChangedFieldViewModel testSuite) {
    this.testSuite = testSuite;
  }

  public TestPlanChangedFieldsViewModel testPoints(TestPointChangeViewModelTestPlanChangedFieldViewModel testPoints) {
    this.testPoints = testPoints;
    return this;
  }

   /**
   * Get testPoints
   * @return testPoints
  **/
  @Schema(description = "")
  public TestPointChangeViewModelTestPlanChangedFieldViewModel getTestPoints() {
    return testPoints;
  }

  public void setTestPoints(TestPointChangeViewModelTestPlanChangedFieldViewModel testPoints) {
    this.testPoints = testPoints;
  }

  public TestPlanChangedFieldsViewModel testResults(TestResultChangeViewModelTestPlanChangedFieldViewModel testResults) {
    this.testResults = testResults;
    return this;
  }

   /**
   * Get testResults
   * @return testResults
  **/
  @Schema(description = "")
  public TestResultChangeViewModelTestPlanChangedFieldViewModel getTestResults() {
    return testResults;
  }

  public void setTestResults(TestResultChangeViewModelTestPlanChangedFieldViewModel testResults) {
    this.testResults = testResults;
  }

  public TestPlanChangedFieldsViewModel locking(BooleanTestPlanChangedFieldViewModel locking) {
    this.locking = locking;
    return this;
  }

   /**
   * Get locking
   * @return locking
  **/
  @Schema(description = "")
  public BooleanTestPlanChangedFieldViewModel getLocking() {
    return locking;
  }

  public void setLocking(BooleanTestPlanChangedFieldViewModel locking) {
    this.locking = locking;
  }

  public TestPlanChangedFieldsViewModel hasAutomaticDurationTimer(BooleanNullableTestPlanChangedFieldViewModel hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
    return this;
  }

   /**
   * Get hasAutomaticDurationTimer
   * @return hasAutomaticDurationTimer
  **/
  @Schema(description = "")
  public BooleanNullableTestPlanChangedFieldViewModel getHasAutomaticDurationTimer() {
    return hasAutomaticDurationTimer;
  }

  public void setHasAutomaticDurationTimer(BooleanNullableTestPlanChangedFieldViewModel hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
  }

  public TestPlanChangedFieldsViewModel attributes(Map<String, CustomAttributeChangeModel> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TestPlanChangedFieldsViewModel putAttributesItem(String key, CustomAttributeChangeModel attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, CustomAttributeChangeModel>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Map<String, CustomAttributeChangeModel> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, CustomAttributeChangeModel> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanChangedFieldsViewModel testPlanChangedFieldsViewModel = (TestPlanChangedFieldsViewModel) o;
    return Objects.equals(this.name, testPlanChangedFieldsViewModel.name) &&
        Objects.equals(this.description, testPlanChangedFieldsViewModel.description) &&
        Objects.equals(this.productName, testPlanChangedFieldsViewModel.productName) &&
        Objects.equals(this.build, testPlanChangedFieldsViewModel.build) &&
        Objects.equals(this.period, testPlanChangedFieldsViewModel.period) &&
        Objects.equals(this.status, testPlanChangedFieldsViewModel.status) &&
        Objects.equals(this.tags, testPlanChangedFieldsViewModel.tags) &&
        Objects.equals(this.testSuite, testPlanChangedFieldsViewModel.testSuite) &&
        Objects.equals(this.testPoints, testPlanChangedFieldsViewModel.testPoints) &&
        Objects.equals(this.testResults, testPlanChangedFieldsViewModel.testResults) &&
        Objects.equals(this.locking, testPlanChangedFieldsViewModel.locking) &&
        Objects.equals(this.hasAutomaticDurationTimer, testPlanChangedFieldsViewModel.hasAutomaticDurationTimer) &&
        Objects.equals(this.attributes, testPlanChangedFieldsViewModel.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, productName, build, period, status, tags, testSuite, testPoints, testResults, locking, hasAutomaticDurationTimer, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanChangedFieldsViewModel {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    testSuite: ").append(toIndentedString(testSuite)).append("\n");
    sb.append("    testPoints: ").append(toIndentedString(testPoints)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    locking: ").append(toIndentedString(locking)).append("\n");
    sb.append("    hasAutomaticDurationTimer: ").append(toIndentedString(hasAutomaticDurationTimer)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
