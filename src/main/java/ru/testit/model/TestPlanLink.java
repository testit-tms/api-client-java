/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import ru.testit.model.ExternalLinkModel;
import ru.testit.model.LinkModel;
/**
 * TestPlanLink
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPlanLink {
  @SerializedName("bugLink")
  private LinkModel bugLink = null;

  @SerializedName("workItemGlobalId")
  private Long workItemGlobalId = null;

  @SerializedName("workItemName")
  private String workItemName = null;

  @SerializedName("configurationName")
  private String configurationName = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("info")
  private ExternalLinkModel info = null;

  public TestPlanLink bugLink(LinkModel bugLink) {
    this.bugLink = bugLink;
    return this;
  }

   /**
   * Get bugLink
   * @return bugLink
  **/
  @Schema(description = "")
  public LinkModel getBugLink() {
    return bugLink;
  }

  public void setBugLink(LinkModel bugLink) {
    this.bugLink = bugLink;
  }

  public TestPlanLink workItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
    return this;
  }

   /**
   * Get workItemGlobalId
   * @return workItemGlobalId
  **/
  @Schema(description = "")
  public Long getWorkItemGlobalId() {
    return workItemGlobalId;
  }

  public void setWorkItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
  }

  public TestPlanLink workItemName(String workItemName) {
    this.workItemName = workItemName;
    return this;
  }

   /**
   * Get workItemName
   * @return workItemName
  **/
  @Schema(description = "")
  public String getWorkItemName() {
    return workItemName;
  }

  public void setWorkItemName(String workItemName) {
    this.workItemName = workItemName;
  }

  public TestPlanLink configurationName(String configurationName) {
    this.configurationName = configurationName;
    return this;
  }

   /**
   * Get configurationName
   * @return configurationName
  **/
  @Schema(description = "")
  public String getConfigurationName() {
    return configurationName;
  }

  public void setConfigurationName(String configurationName) {
    this.configurationName = configurationName;
  }

  public TestPlanLink createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public TestPlanLink comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public TestPlanLink info(ExternalLinkModel info) {
    this.info = info;
    return this;
  }

   /**
   * Get info
   * @return info
  **/
  @Schema(description = "")
  public ExternalLinkModel getInfo() {
    return info;
  }

  public void setInfo(ExternalLinkModel info) {
    this.info = info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanLink testPlanLink = (TestPlanLink) o;
    return Objects.equals(this.bugLink, testPlanLink.bugLink) &&
        Objects.equals(this.workItemGlobalId, testPlanLink.workItemGlobalId) &&
        Objects.equals(this.workItemName, testPlanLink.workItemName) &&
        Objects.equals(this.configurationName, testPlanLink.configurationName) &&
        Objects.equals(this.createdById, testPlanLink.createdById) &&
        Objects.equals(this.comment, testPlanLink.comment) &&
        Objects.equals(this.info, testPlanLink.info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bugLink, workItemGlobalId, workItemName, configurationName, createdById, comment, info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanLink {\n");
    
    sb.append("    bugLink: ").append(toIndentedString(bugLink)).append("\n");
    sb.append("    workItemGlobalId: ").append(toIndentedString(workItemGlobalId)).append("\n");
    sb.append("    workItemName: ").append(toIndentedString(workItemName)).append("\n");
    sb.append("    configurationName: ").append(toIndentedString(configurationName)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
