/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.TagShortModel;
import ru.testit.model.TestPlanStatusModel;
/**
 * TestPlanModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class TestPlanModel {
  @SerializedName("status")
  private TestPlanStatusModel status = null;

  @SerializedName("startedOn")
  private OffsetDateTime startedOn = null;

  @SerializedName("completedOn")
  private OffsetDateTime completedOn = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("modifiedDate")
  private OffsetDateTime modifiedDate = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("modifiedById")
  private UUID modifiedById = null;

  @SerializedName("globalId")
  private Long globalId = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  @SerializedName("lockedDate")
  private OffsetDateTime lockedDate = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("lockedById")
  private UUID lockedById = null;

  @SerializedName("tags")
  private List<TagShortModel> tags = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("build")
  private String build = null;

  @SerializedName("projectId")
  private UUID projectId = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("hasAutomaticDurationTimer")
  private Boolean hasAutomaticDurationTimer = null;

  @SerializedName("attributes")
  private Map<String, Object> attributes = null;

  public TestPlanModel status(TestPlanStatusModel status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public TestPlanStatusModel getStatus() {
    return status;
  }

  public void setStatus(TestPlanStatusModel status) {
    this.status = status;
  }

  public TestPlanModel startedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
    return this;
  }

   /**
   * Set when test plan is starter (status changed to: In Progress)
   * @return startedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "Set when test plan is starter (status changed to: In Progress)")
  public OffsetDateTime getStartedOn() {
    return startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
  }

  public TestPlanModel completedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
    return this;
  }

   /**
   * set when test plan status is completed (status changed to: Completed)
   * @return completedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "set when test plan status is completed (status changed to: Completed)")
  public OffsetDateTime getCompletedOn() {
    return completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
  }

  public TestPlanModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TestPlanModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public TestPlanModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public TestPlanModel modifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getModifiedById() {
    return modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
  }

  public TestPlanModel globalId(Long globalId) {
    this.globalId = globalId;
    return this;
  }

   /**
   * Used for search Test plan
   * @return globalId
  **/
  @Schema(example = "100000", description = "Used for search Test plan")
  public Long getGlobalId() {
    return globalId;
  }

  public void setGlobalId(Long globalId) {
    this.globalId = globalId;
  }

  public TestPlanModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(example = "true", description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public TestPlanModel lockedDate(OffsetDateTime lockedDate) {
    this.lockedDate = lockedDate;
    return this;
  }

   /**
   * Get lockedDate
   * @return lockedDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getLockedDate() {
    return lockedDate;
  }

  public void setLockedDate(OffsetDateTime lockedDate) {
    this.lockedDate = lockedDate;
  }

  public TestPlanModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestPlanModel lockedById(UUID lockedById) {
    this.lockedById = lockedById;
    return this;
  }

   /**
   * Get lockedById
   * @return lockedById
  **/
  @Schema(description = "")
  public UUID getLockedById() {
    return lockedById;
  }

  public void setLockedById(UUID lockedById) {
    this.lockedById = lockedById;
  }

  public TestPlanModel tags(List<TagShortModel> tags) {
    this.tags = tags;
    return this;
  }

  public TestPlanModel addTagsItem(TagShortModel tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagShortModel>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<TagShortModel> getTags() {
    return tags;
  }

  public void setTags(List<TagShortModel> tags) {
    this.tags = tags;
  }

  public TestPlanModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Base test plan", required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestPlanModel startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Used for analytics
   * @return startDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "Used for analytics")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public TestPlanModel endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Used for analytics
   * @return endDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "Used for analytics")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public TestPlanModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "This is a base test plan", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestPlanModel build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @Schema(example = "v.3.0.0-b94f3055", description = "")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public TestPlanModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", required = true, description = "")
  public UUID getProjectId() {
    return projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }

  public TestPlanModel productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @Schema(example = "Billing service", description = "")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public TestPlanModel hasAutomaticDurationTimer(Boolean hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
    return this;
  }

   /**
   * Get hasAutomaticDurationTimer
   * @return hasAutomaticDurationTimer
  **/
  @Schema(example = "true", description = "")
  public Boolean isHasAutomaticDurationTimer() {
    return hasAutomaticDurationTimer;
  }

  public void setHasAutomaticDurationTimer(Boolean hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
  }

  public TestPlanModel attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TestPlanModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, Object>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanModel testPlanModel = (TestPlanModel) o;
    return Objects.equals(this.status, testPlanModel.status) &&
        Objects.equals(this.startedOn, testPlanModel.startedOn) &&
        Objects.equals(this.completedOn, testPlanModel.completedOn) &&
        Objects.equals(this.createdDate, testPlanModel.createdDate) &&
        Objects.equals(this.modifiedDate, testPlanModel.modifiedDate) &&
        Objects.equals(this.createdById, testPlanModel.createdById) &&
        Objects.equals(this.modifiedById, testPlanModel.modifiedById) &&
        Objects.equals(this.globalId, testPlanModel.globalId) &&
        Objects.equals(this.isDeleted, testPlanModel.isDeleted) &&
        Objects.equals(this.lockedDate, testPlanModel.lockedDate) &&
        Objects.equals(this.id, testPlanModel.id) &&
        Objects.equals(this.lockedById, testPlanModel.lockedById) &&
        Objects.equals(this.tags, testPlanModel.tags) &&
        Objects.equals(this.name, testPlanModel.name) &&
        Objects.equals(this.startDate, testPlanModel.startDate) &&
        Objects.equals(this.endDate, testPlanModel.endDate) &&
        Objects.equals(this.description, testPlanModel.description) &&
        Objects.equals(this.build, testPlanModel.build) &&
        Objects.equals(this.projectId, testPlanModel.projectId) &&
        Objects.equals(this.productName, testPlanModel.productName) &&
        Objects.equals(this.hasAutomaticDurationTimer, testPlanModel.hasAutomaticDurationTimer) &&
        Objects.equals(this.attributes, testPlanModel.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, startedOn, completedOn, createdDate, modifiedDate, createdById, modifiedById, globalId, isDeleted, lockedDate, id, lockedById, tags, name, startDate, endDate, description, build, projectId, productName, hasAutomaticDurationTimer, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanModel {\n");
    
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    globalId: ").append(toIndentedString(globalId)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    lockedDate: ").append(toIndentedString(lockedDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lockedById: ").append(toIndentedString(lockedById)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    hasAutomaticDurationTimer: ").append(toIndentedString(hasAutomaticDurationTimer)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
