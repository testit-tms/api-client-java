/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.TagShortModel;
/**
 * TestPlanPutModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class TestPlanPutModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("lockedById")
  private UUID lockedById = null;

  @SerializedName("tags")
  private List<TagShortModel> tags = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("startDate")
  private OffsetDateTime startDate = null;

  @SerializedName("endDate")
  private OffsetDateTime endDate = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("build")
  private String build = null;

  @SerializedName("projectId")
  private UUID projectId = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("hasAutomaticDurationTimer")
  private Boolean hasAutomaticDurationTimer = null;

  @SerializedName("attributes")
  private Map<String, Object> attributes = null;

  public TestPlanPutModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestPlanPutModel lockedById(UUID lockedById) {
    this.lockedById = lockedById;
    return this;
  }

   /**
   * Get lockedById
   * @return lockedById
  **/
  @Schema(description = "")
  public UUID getLockedById() {
    return lockedById;
  }

  public void setLockedById(UUID lockedById) {
    this.lockedById = lockedById;
  }

  public TestPlanPutModel tags(List<TagShortModel> tags) {
    this.tags = tags;
    return this;
  }

  public TestPlanPutModel addTagsItem(TagShortModel tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<TagShortModel>();
    }
    this.tags.add(tagsItem);
    return this;
  }

   /**
   * Get tags
   * @return tags
  **/
  @Schema(description = "")
  public List<TagShortModel> getTags() {
    return tags;
  }

  public void setTags(List<TagShortModel> tags) {
    this.tags = tags;
  }

  public TestPlanPutModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "Base test plan", required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestPlanPutModel startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Used for analytics
   * @return startDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "Used for analytics")
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }

  public TestPlanPutModel endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Used for analytics
   * @return endDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "Used for analytics")
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }

  public TestPlanPutModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(example = "This is a base test plan", description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestPlanPutModel build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @Schema(example = "v.3.0.0-b94f3055", description = "")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public TestPlanPutModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", required = true, description = "")
  public UUID getProjectId() {
    return projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }

  public TestPlanPutModel productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @Schema(example = "Billing service", description = "")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public TestPlanPutModel hasAutomaticDurationTimer(Boolean hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
    return this;
  }

   /**
   * Get hasAutomaticDurationTimer
   * @return hasAutomaticDurationTimer
  **/
  @Schema(example = "true", description = "")
  public Boolean isHasAutomaticDurationTimer() {
    return hasAutomaticDurationTimer;
  }

  public void setHasAutomaticDurationTimer(Boolean hasAutomaticDurationTimer) {
    this.hasAutomaticDurationTimer = hasAutomaticDurationTimer;
  }

  public TestPlanPutModel attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TestPlanPutModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, Object>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanPutModel testPlanPutModel = (TestPlanPutModel) o;
    return Objects.equals(this.id, testPlanPutModel.id) &&
        Objects.equals(this.lockedById, testPlanPutModel.lockedById) &&
        Objects.equals(this.tags, testPlanPutModel.tags) &&
        Objects.equals(this.name, testPlanPutModel.name) &&
        Objects.equals(this.startDate, testPlanPutModel.startDate) &&
        Objects.equals(this.endDate, testPlanPutModel.endDate) &&
        Objects.equals(this.description, testPlanPutModel.description) &&
        Objects.equals(this.build, testPlanPutModel.build) &&
        Objects.equals(this.projectId, testPlanPutModel.projectId) &&
        Objects.equals(this.productName, testPlanPutModel.productName) &&
        Objects.equals(this.hasAutomaticDurationTimer, testPlanPutModel.hasAutomaticDurationTimer) &&
        Objects.equals(this.attributes, testPlanPutModel.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lockedById, tags, name, startDate, endDate, description, build, projectId, productName, hasAutomaticDurationTimer, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanPutModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lockedById: ").append(toIndentedString(lockedById)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    hasAutomaticDurationTimer: ").append(toIndentedString(hasAutomaticDurationTimer)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
