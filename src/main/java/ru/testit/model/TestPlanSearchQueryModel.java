/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import ru.testit.model.DateRangeModel;
import ru.testit.model.TestPlanStatusModel;
/**
 * TestPlanSearchQueryModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPlanSearchQueryModel {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("build")
  private String build = null;

  @SerializedName("productName")
  private String productName = null;

  @SerializedName("status")
  private List<TestPlanStatusModel> status = null;

  @SerializedName("globalIds")
  private List<Long> globalIds = null;

  @SerializedName("isLocked")
  private Boolean isLocked = null;

  @SerializedName("lockedDate")
  private DateRangeModel lockedDate = null;

  @SerializedName("automaticDurationTimer")
  private List<Boolean> automaticDurationTimer = null;

  @SerializedName("createdByIds")
  private List<UUID> createdByIds = null;

  @SerializedName("createdDate")
  private DateRangeModel createdDate = null;

  @SerializedName("startDate")
  private DateRangeModel startDate = null;

  @SerializedName("endDate")
  private DateRangeModel endDate = null;

  @SerializedName("tagNames")
  private List<String> tagNames = null;

  @SerializedName("attributes")
  private Map<String, List<String>> attributes = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  public TestPlanSearchQueryModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestPlanSearchQueryModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestPlanSearchQueryModel build(String build) {
    this.build = build;
    return this;
  }

   /**
   * Get build
   * @return build
  **/
  @Schema(description = "")
  public String getBuild() {
    return build;
  }

  public void setBuild(String build) {
    this.build = build;
  }

  public TestPlanSearchQueryModel productName(String productName) {
    this.productName = productName;
    return this;
  }

   /**
   * Get productName
   * @return productName
  **/
  @Schema(description = "")
  public String getProductName() {
    return productName;
  }

  public void setProductName(String productName) {
    this.productName = productName;
  }

  public TestPlanSearchQueryModel status(List<TestPlanStatusModel> status) {
    this.status = status;
    return this;
  }

  public TestPlanSearchQueryModel addStatusItem(TestPlanStatusModel statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<TestPlanStatusModel>();
    }
    this.status.add(statusItem);
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public List<TestPlanStatusModel> getStatus() {
    return status;
  }

  public void setStatus(List<TestPlanStatusModel> status) {
    this.status = status;
  }

  public TestPlanSearchQueryModel globalIds(List<Long> globalIds) {
    this.globalIds = globalIds;
    return this;
  }

  public TestPlanSearchQueryModel addGlobalIdsItem(Long globalIdsItem) {
    if (this.globalIds == null) {
      this.globalIds = new ArrayList<Long>();
    }
    this.globalIds.add(globalIdsItem);
    return this;
  }

   /**
   * Get globalIds
   * @return globalIds
  **/
  @Schema(description = "")
  public List<Long> getGlobalIds() {
    return globalIds;
  }

  public void setGlobalIds(List<Long> globalIds) {
    this.globalIds = globalIds;
  }

  public TestPlanSearchQueryModel isLocked(Boolean isLocked) {
    this.isLocked = isLocked;
    return this;
  }

   /**
   * Get isLocked
   * @return isLocked
  **/
  @Schema(description = "")
  public Boolean isIsLocked() {
    return isLocked;
  }

  public void setIsLocked(Boolean isLocked) {
    this.isLocked = isLocked;
  }

  public TestPlanSearchQueryModel lockedDate(DateRangeModel lockedDate) {
    this.lockedDate = lockedDate;
    return this;
  }

   /**
   * Get lockedDate
   * @return lockedDate
  **/
  @Schema(description = "")
  public DateRangeModel getLockedDate() {
    return lockedDate;
  }

  public void setLockedDate(DateRangeModel lockedDate) {
    this.lockedDate = lockedDate;
  }

  public TestPlanSearchQueryModel automaticDurationTimer(List<Boolean> automaticDurationTimer) {
    this.automaticDurationTimer = automaticDurationTimer;
    return this;
  }

  public TestPlanSearchQueryModel addAutomaticDurationTimerItem(Boolean automaticDurationTimerItem) {
    if (this.automaticDurationTimer == null) {
      this.automaticDurationTimer = new ArrayList<Boolean>();
    }
    this.automaticDurationTimer.add(automaticDurationTimerItem);
    return this;
  }

   /**
   * Get automaticDurationTimer
   * @return automaticDurationTimer
  **/
  @Schema(description = "")
  public List<Boolean> getAutomaticDurationTimer() {
    return automaticDurationTimer;
  }

  public void setAutomaticDurationTimer(List<Boolean> automaticDurationTimer) {
    this.automaticDurationTimer = automaticDurationTimer;
  }

  public TestPlanSearchQueryModel createdByIds(List<UUID> createdByIds) {
    this.createdByIds = createdByIds;
    return this;
  }

  public TestPlanSearchQueryModel addCreatedByIdsItem(UUID createdByIdsItem) {
    if (this.createdByIds == null) {
      this.createdByIds = new ArrayList<UUID>();
    }
    this.createdByIds.add(createdByIdsItem);
    return this;
  }

   /**
   * Get createdByIds
   * @return createdByIds
  **/
  @Schema(description = "")
  public List<UUID> getCreatedByIds() {
    return createdByIds;
  }

  public void setCreatedByIds(List<UUID> createdByIds) {
    this.createdByIds = createdByIds;
  }

  public TestPlanSearchQueryModel createdDate(DateRangeModel createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(description = "")
  public DateRangeModel getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(DateRangeModel createdDate) {
    this.createdDate = createdDate;
  }

  public TestPlanSearchQueryModel startDate(DateRangeModel startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public DateRangeModel getStartDate() {
    return startDate;
  }

  public void setStartDate(DateRangeModel startDate) {
    this.startDate = startDate;
  }

  public TestPlanSearchQueryModel endDate(DateRangeModel endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @Schema(description = "")
  public DateRangeModel getEndDate() {
    return endDate;
  }

  public void setEndDate(DateRangeModel endDate) {
    this.endDate = endDate;
  }

  public TestPlanSearchQueryModel tagNames(List<String> tagNames) {
    this.tagNames = tagNames;
    return this;
  }

  public TestPlanSearchQueryModel addTagNamesItem(String tagNamesItem) {
    if (this.tagNames == null) {
      this.tagNames = new ArrayList<String>();
    }
    this.tagNames.add(tagNamesItem);
    return this;
  }

   /**
   * Get tagNames
   * @return tagNames
  **/
  @Schema(description = "")
  public List<String> getTagNames() {
    return tagNames;
  }

  public void setTagNames(List<String> tagNames) {
    this.tagNames = tagNames;
  }

  public TestPlanSearchQueryModel attributes(Map<String, List<String>> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TestPlanSearchQueryModel putAttributesItem(String key, List<String> attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, List<String>>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Map<String, List<String>> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, List<String>> attributes) {
    this.attributes = attributes;
  }

  public TestPlanSearchQueryModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPlanSearchQueryModel testPlanSearchQueryModel = (TestPlanSearchQueryModel) o;
    return Objects.equals(this.name, testPlanSearchQueryModel.name) &&
        Objects.equals(this.description, testPlanSearchQueryModel.description) &&
        Objects.equals(this.build, testPlanSearchQueryModel.build) &&
        Objects.equals(this.productName, testPlanSearchQueryModel.productName) &&
        Objects.equals(this.status, testPlanSearchQueryModel.status) &&
        Objects.equals(this.globalIds, testPlanSearchQueryModel.globalIds) &&
        Objects.equals(this.isLocked, testPlanSearchQueryModel.isLocked) &&
        Objects.equals(this.lockedDate, testPlanSearchQueryModel.lockedDate) &&
        Objects.equals(this.automaticDurationTimer, testPlanSearchQueryModel.automaticDurationTimer) &&
        Objects.equals(this.createdByIds, testPlanSearchQueryModel.createdByIds) &&
        Objects.equals(this.createdDate, testPlanSearchQueryModel.createdDate) &&
        Objects.equals(this.startDate, testPlanSearchQueryModel.startDate) &&
        Objects.equals(this.endDate, testPlanSearchQueryModel.endDate) &&
        Objects.equals(this.tagNames, testPlanSearchQueryModel.tagNames) &&
        Objects.equals(this.attributes, testPlanSearchQueryModel.attributes) &&
        Objects.equals(this.isDeleted, testPlanSearchQueryModel.isDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, build, productName, status, globalIds, isLocked, lockedDate, automaticDurationTimer, createdByIds, createdDate, startDate, endDate, tagNames, attributes, isDeleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPlanSearchQueryModel {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    productName: ").append(toIndentedString(productName)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    globalIds: ").append(toIndentedString(globalIds)).append("\n");
    sb.append("    isLocked: ").append(toIndentedString(isLocked)).append("\n");
    sb.append("    lockedDate: ").append(toIndentedString(lockedDate)).append("\n");
    sb.append("    automaticDurationTimer: ").append(toIndentedString(automaticDurationTimer)).append("\n");
    sb.append("    createdByIds: ").append(toIndentedString(createdByIds)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    tagNames: ").append(toIndentedString(tagNames)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
