/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * TestPointPutModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPointPutModel {
  @SerializedName("testerId")
  private UUID testerId = null;

  @SerializedName("iterationId")
  private UUID iterationId = null;

  @SerializedName("workItemId")
  private UUID workItemId = null;

  @SerializedName("configurationId")
  private UUID configurationId = null;

  @SerializedName("testSuiteId")
  private UUID testSuiteId = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("lastTestResultId")
  private UUID lastTestResultId = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("isDeleted")
  private Boolean isDeleted = null;

  public TestPointPutModel testerId(UUID testerId) {
    this.testerId = testerId;
    return this;
  }

   /**
   * Get testerId
   * @return testerId
  **/
  @Schema(description = "")
  public UUID getTesterId() {
    return testerId;
  }

  public void setTesterId(UUID testerId) {
    this.testerId = testerId;
  }

  public TestPointPutModel iterationId(UUID iterationId) {
    this.iterationId = iterationId;
    return this;
  }

   /**
   * Get iterationId
   * @return iterationId
  **/
  @Schema(description = "")
  public UUID getIterationId() {
    return iterationId;
  }

  public void setIterationId(UUID iterationId) {
    this.iterationId = iterationId;
  }

  public TestPointPutModel workItemId(UUID workItemId) {
    this.workItemId = workItemId;
    return this;
  }

   /**
   * Get workItemId
   * @return workItemId
  **/
  @Schema(description = "")
  public UUID getWorkItemId() {
    return workItemId;
  }

  public void setWorkItemId(UUID workItemId) {
    this.workItemId = workItemId;
  }

  public TestPointPutModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Get configurationId
   * @return configurationId
  **/
  @Schema(description = "")
  public UUID getConfigurationId() {
    return configurationId;
  }

  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }

  public TestPointPutModel testSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
    return this;
  }

   /**
   * Get testSuiteId
   * @return testSuiteId
  **/
  @Schema(description = "")
  public UUID getTestSuiteId() {
    return testSuiteId;
  }

  public void setTestSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
  }

  public TestPointPutModel status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TestPointPutModel lastTestResultId(UUID lastTestResultId) {
    this.lastTestResultId = lastTestResultId;
    return this;
  }

   /**
   * Get lastTestResultId
   * @return lastTestResultId
  **/
  @Schema(description = "")
  public UUID getLastTestResultId() {
    return lastTestResultId;
  }

  public void setLastTestResultId(UUID lastTestResultId) {
    this.lastTestResultId = lastTestResultId;
  }

  public TestPointPutModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "9891bb36-71eb-4a4a-a049-eae838db9514", description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestPointPutModel isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @Schema(example = "true", description = "")
  public Boolean isIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPointPutModel testPointPutModel = (TestPointPutModel) o;
    return Objects.equals(this.testerId, testPointPutModel.testerId) &&
        Objects.equals(this.iterationId, testPointPutModel.iterationId) &&
        Objects.equals(this.workItemId, testPointPutModel.workItemId) &&
        Objects.equals(this.configurationId, testPointPutModel.configurationId) &&
        Objects.equals(this.testSuiteId, testPointPutModel.testSuiteId) &&
        Objects.equals(this.status, testPointPutModel.status) &&
        Objects.equals(this.lastTestResultId, testPointPutModel.lastTestResultId) &&
        Objects.equals(this.id, testPointPutModel.id) &&
        Objects.equals(this.isDeleted, testPointPutModel.isDeleted);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testerId, iterationId, workItemId, configurationId, testSuiteId, status, lastTestResultId, id, isDeleted);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPointPutModel {\n");
    
    sb.append("    testerId: ").append(toIndentedString(testerId)).append("\n");
    sb.append("    iterationId: ").append(toIndentedString(iterationId)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    testSuiteId: ").append(toIndentedString(testSuiteId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastTestResultId: ").append(toIndentedString(lastTestResultId)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
