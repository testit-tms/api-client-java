/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.testit.model.AttachmentModel;
import ru.testit.model.TestResultShortModel;
/**
 * TestPointResultModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPointResultModel {
  @SerializedName("testPointId")
  private UUID testPointId = null;

  @SerializedName("aggregatedOutcome")
  private String aggregatedOutcome = null;

  @SerializedName("workItemGlobalId")
  private Long workItemGlobalId = null;

  @SerializedName("workItemName")
  private String workItemName = null;

  @SerializedName("configurationName")
  private String configurationName = null;

  @SerializedName("testResults")
  private List<TestResultShortModel> testResults = null;

  @SerializedName("attachments")
  private List<AttachmentModel> attachments = null;

  public TestPointResultModel testPointId(UUID testPointId) {
    this.testPointId = testPointId;
    return this;
  }

   /**
   * Get testPointId
   * @return testPointId
  **/
  @Schema(description = "")
  public UUID getTestPointId() {
    return testPointId;
  }

  public void setTestPointId(UUID testPointId) {
    this.testPointId = testPointId;
  }

  public TestPointResultModel aggregatedOutcome(String aggregatedOutcome) {
    this.aggregatedOutcome = aggregatedOutcome;
    return this;
  }

   /**
   * Get aggregatedOutcome
   * @return aggregatedOutcome
  **/
  @Schema(description = "")
  public String getAggregatedOutcome() {
    return aggregatedOutcome;
  }

  public void setAggregatedOutcome(String aggregatedOutcome) {
    this.aggregatedOutcome = aggregatedOutcome;
  }

  public TestPointResultModel workItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
    return this;
  }

   /**
   * Get workItemGlobalId
   * @return workItemGlobalId
  **/
  @Schema(description = "")
  public Long getWorkItemGlobalId() {
    return workItemGlobalId;
  }

  public void setWorkItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
  }

  public TestPointResultModel workItemName(String workItemName) {
    this.workItemName = workItemName;
    return this;
  }

   /**
   * Get workItemName
   * @return workItemName
  **/
  @Schema(description = "")
  public String getWorkItemName() {
    return workItemName;
  }

  public void setWorkItemName(String workItemName) {
    this.workItemName = workItemName;
  }

  public TestPointResultModel configurationName(String configurationName) {
    this.configurationName = configurationName;
    return this;
  }

   /**
   * Get configurationName
   * @return configurationName
  **/
  @Schema(description = "")
  public String getConfigurationName() {
    return configurationName;
  }

  public void setConfigurationName(String configurationName) {
    this.configurationName = configurationName;
  }

  public TestPointResultModel testResults(List<TestResultShortModel> testResults) {
    this.testResults = testResults;
    return this;
  }

  public TestPointResultModel addTestResultsItem(TestResultShortModel testResultsItem) {
    if (this.testResults == null) {
      this.testResults = new ArrayList<TestResultShortModel>();
    }
    this.testResults.add(testResultsItem);
    return this;
  }

   /**
   * Get testResults
   * @return testResults
  **/
  @Schema(description = "")
  public List<TestResultShortModel> getTestResults() {
    return testResults;
  }

  public void setTestResults(List<TestResultShortModel> testResults) {
    this.testResults = testResults;
  }

  public TestPointResultModel attachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
    return this;
  }

  public TestPointResultModel addAttachmentsItem(AttachmentModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentModel>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @Schema(description = "")
  public List<AttachmentModel> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPointResultModel testPointResultModel = (TestPointResultModel) o;
    return Objects.equals(this.testPointId, testPointResultModel.testPointId) &&
        Objects.equals(this.aggregatedOutcome, testPointResultModel.aggregatedOutcome) &&
        Objects.equals(this.workItemGlobalId, testPointResultModel.workItemGlobalId) &&
        Objects.equals(this.workItemName, testPointResultModel.workItemName) &&
        Objects.equals(this.configurationName, testPointResultModel.configurationName) &&
        Objects.equals(this.testResults, testPointResultModel.testResults) &&
        Objects.equals(this.attachments, testPointResultModel.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(testPointId, aggregatedOutcome, workItemGlobalId, workItemName, configurationName, testResults, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPointResultModel {\n");
    
    sb.append("    testPointId: ").append(toIndentedString(testPointId)).append("\n");
    sb.append("    aggregatedOutcome: ").append(toIndentedString(aggregatedOutcome)).append("\n");
    sb.append("    workItemGlobalId: ").append(toIndentedString(workItemGlobalId)).append("\n");
    sb.append("    workItemName: ").append(toIndentedString(workItemName)).append("\n");
    sb.append("    configurationName: ").append(toIndentedString(configurationName)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
