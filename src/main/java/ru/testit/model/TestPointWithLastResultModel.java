/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.IterationModel;
import ru.testit.model.LastTestResultModel;
import ru.testit.model.WorkItemPriorityModel;
/**
 * TestPointWithLastResultModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestPointWithLastResultModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("workItemName")
  private String workItemName = null;

  @SerializedName("isAutomated")
  private Boolean isAutomated = null;

  @SerializedName("testerId")
  private UUID testerId = null;

  @SerializedName("workItemId")
  private UUID workItemId = null;

  @SerializedName("configurationId")
  private UUID configurationId = null;

  @SerializedName("testSuiteId")
  private UUID testSuiteId = null;

  @SerializedName("lastTestResult")
  private LastTestResultModel lastTestResult = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("workItemGlobalId")
  private Long workItemGlobalId = null;

  @SerializedName("workItemEntityTypeName")
  private String workItemEntityTypeName = null;

  @SerializedName("sectionId")
  private UUID sectionId = null;

  @SerializedName("sectionName")
  private String sectionName = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("modifiedDate")
  private OffsetDateTime modifiedDate = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("modifiedById")
  private UUID modifiedById = null;

  @SerializedName("attributes")
  private Map<String, Object> attributes = null;

  @SerializedName("tagNames")
  private List<String> tagNames = null;

  @SerializedName("duration")
  private Integer duration = null;

  @SerializedName("priority")
  private WorkItemPriorityModel priority = null;

  @SerializedName("testSuiteNameBreadCrumbs")
  private List<String> testSuiteNameBreadCrumbs = null;

  @SerializedName("groupCount")
  private Integer groupCount = null;

  @SerializedName("iteration")
  private IterationModel iteration = null;

  public TestPointWithLastResultModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestPointWithLastResultModel workItemName(String workItemName) {
    this.workItemName = workItemName;
    return this;
  }

   /**
   * Get workItemName
   * @return workItemName
  **/
  @Schema(description = "")
  public String getWorkItemName() {
    return workItemName;
  }

  public void setWorkItemName(String workItemName) {
    this.workItemName = workItemName;
  }

  public TestPointWithLastResultModel isAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

   /**
   * Get isAutomated
   * @return isAutomated
  **/
  @Schema(description = "")
  public Boolean isIsAutomated() {
    return isAutomated;
  }

  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }

  public TestPointWithLastResultModel testerId(UUID testerId) {
    this.testerId = testerId;
    return this;
  }

   /**
   * Get testerId
   * @return testerId
  **/
  @Schema(description = "")
  public UUID getTesterId() {
    return testerId;
  }

  public void setTesterId(UUID testerId) {
    this.testerId = testerId;
  }

  public TestPointWithLastResultModel workItemId(UUID workItemId) {
    this.workItemId = workItemId;
    return this;
  }

   /**
   * Get workItemId
   * @return workItemId
  **/
  @Schema(description = "")
  public UUID getWorkItemId() {
    return workItemId;
  }

  public void setWorkItemId(UUID workItemId) {
    this.workItemId = workItemId;
  }

  public TestPointWithLastResultModel configurationId(UUID configurationId) {
    this.configurationId = configurationId;
    return this;
  }

   /**
   * Get configurationId
   * @return configurationId
  **/
  @Schema(description = "")
  public UUID getConfigurationId() {
    return configurationId;
  }

  public void setConfigurationId(UUID configurationId) {
    this.configurationId = configurationId;
  }

  public TestPointWithLastResultModel testSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
    return this;
  }

   /**
   * Get testSuiteId
   * @return testSuiteId
  **/
  @Schema(description = "")
  public UUID getTestSuiteId() {
    return testSuiteId;
  }

  public void setTestSuiteId(UUID testSuiteId) {
    this.testSuiteId = testSuiteId;
  }

  public TestPointWithLastResultModel lastTestResult(LastTestResultModel lastTestResult) {
    this.lastTestResult = lastTestResult;
    return this;
  }

   /**
   * Get lastTestResult
   * @return lastTestResult
  **/
  @Schema(description = "")
  public LastTestResultModel getLastTestResult() {
    return lastTestResult;
  }

  public void setLastTestResult(LastTestResultModel lastTestResult) {
    this.lastTestResult = lastTestResult;
  }

  public TestPointWithLastResultModel status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public TestPointWithLastResultModel workItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
    return this;
  }

   /**
   * Get workItemGlobalId
   * @return workItemGlobalId
  **/
  @Schema(description = "")
  public Long getWorkItemGlobalId() {
    return workItemGlobalId;
  }

  public void setWorkItemGlobalId(Long workItemGlobalId) {
    this.workItemGlobalId = workItemGlobalId;
  }

  public TestPointWithLastResultModel workItemEntityTypeName(String workItemEntityTypeName) {
    this.workItemEntityTypeName = workItemEntityTypeName;
    return this;
  }

   /**
   * Get workItemEntityTypeName
   * @return workItemEntityTypeName
  **/
  @Schema(description = "")
  public String getWorkItemEntityTypeName() {
    return workItemEntityTypeName;
  }

  public void setWorkItemEntityTypeName(String workItemEntityTypeName) {
    this.workItemEntityTypeName = workItemEntityTypeName;
  }

  public TestPointWithLastResultModel sectionId(UUID sectionId) {
    this.sectionId = sectionId;
    return this;
  }

   /**
   * Get sectionId
   * @return sectionId
  **/
  @Schema(description = "")
  public UUID getSectionId() {
    return sectionId;
  }

  public void setSectionId(UUID sectionId) {
    this.sectionId = sectionId;
  }

  public TestPointWithLastResultModel sectionName(String sectionName) {
    this.sectionName = sectionName;
    return this;
  }

   /**
   * Get sectionName
   * @return sectionName
  **/
  @Schema(description = "")
  public String getSectionName() {
    return sectionName;
  }

  public void setSectionName(String sectionName) {
    this.sectionName = sectionName;
  }

  public TestPointWithLastResultModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TestPointWithLastResultModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @Schema(description = "")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public TestPointWithLastResultModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public TestPointWithLastResultModel modifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @Schema(description = "")
  public UUID getModifiedById() {
    return modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
  }

  public TestPointWithLastResultModel attributes(Map<String, Object> attributes) {
    this.attributes = attributes;
    return this;
  }

  public TestPointWithLastResultModel putAttributesItem(String key, Object attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, Object>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @Schema(description = "")
  public Map<String, Object> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, Object> attributes) {
    this.attributes = attributes;
  }

  public TestPointWithLastResultModel tagNames(List<String> tagNames) {
    this.tagNames = tagNames;
    return this;
  }

  public TestPointWithLastResultModel addTagNamesItem(String tagNamesItem) {
    if (this.tagNames == null) {
      this.tagNames = new ArrayList<String>();
    }
    this.tagNames.add(tagNamesItem);
    return this;
  }

   /**
   * Get tagNames
   * @return tagNames
  **/
  @Schema(description = "")
  public List<String> getTagNames() {
    return tagNames;
  }

  public void setTagNames(List<String> tagNames) {
    this.tagNames = tagNames;
  }

  public TestPointWithLastResultModel duration(Integer duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(description = "")
  public Integer getDuration() {
    return duration;
  }

  public void setDuration(Integer duration) {
    this.duration = duration;
  }

  public TestPointWithLastResultModel priority(WorkItemPriorityModel priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @Schema(description = "")
  public WorkItemPriorityModel getPriority() {
    return priority;
  }

  public void setPriority(WorkItemPriorityModel priority) {
    this.priority = priority;
  }

  public TestPointWithLastResultModel testSuiteNameBreadCrumbs(List<String> testSuiteNameBreadCrumbs) {
    this.testSuiteNameBreadCrumbs = testSuiteNameBreadCrumbs;
    return this;
  }

  public TestPointWithLastResultModel addTestSuiteNameBreadCrumbsItem(String testSuiteNameBreadCrumbsItem) {
    if (this.testSuiteNameBreadCrumbs == null) {
      this.testSuiteNameBreadCrumbs = new ArrayList<String>();
    }
    this.testSuiteNameBreadCrumbs.add(testSuiteNameBreadCrumbsItem);
    return this;
  }

   /**
   * Get testSuiteNameBreadCrumbs
   * @return testSuiteNameBreadCrumbs
  **/
  @Schema(description = "")
  public List<String> getTestSuiteNameBreadCrumbs() {
    return testSuiteNameBreadCrumbs;
  }

  public void setTestSuiteNameBreadCrumbs(List<String> testSuiteNameBreadCrumbs) {
    this.testSuiteNameBreadCrumbs = testSuiteNameBreadCrumbs;
  }

  public TestPointWithLastResultModel groupCount(Integer groupCount) {
    this.groupCount = groupCount;
    return this;
  }

   /**
   * Get groupCount
   * @return groupCount
  **/
  @Schema(description = "")
  public Integer getGroupCount() {
    return groupCount;
  }

  public void setGroupCount(Integer groupCount) {
    this.groupCount = groupCount;
  }

  public TestPointWithLastResultModel iteration(IterationModel iteration) {
    this.iteration = iteration;
    return this;
  }

   /**
   * Get iteration
   * @return iteration
  **/
  @Schema(description = "")
  public IterationModel getIteration() {
    return iteration;
  }

  public void setIteration(IterationModel iteration) {
    this.iteration = iteration;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestPointWithLastResultModel testPointWithLastResultModel = (TestPointWithLastResultModel) o;
    return Objects.equals(this.id, testPointWithLastResultModel.id) &&
        Objects.equals(this.workItemName, testPointWithLastResultModel.workItemName) &&
        Objects.equals(this.isAutomated, testPointWithLastResultModel.isAutomated) &&
        Objects.equals(this.testerId, testPointWithLastResultModel.testerId) &&
        Objects.equals(this.workItemId, testPointWithLastResultModel.workItemId) &&
        Objects.equals(this.configurationId, testPointWithLastResultModel.configurationId) &&
        Objects.equals(this.testSuiteId, testPointWithLastResultModel.testSuiteId) &&
        Objects.equals(this.lastTestResult, testPointWithLastResultModel.lastTestResult) &&
        Objects.equals(this.status, testPointWithLastResultModel.status) &&
        Objects.equals(this.workItemGlobalId, testPointWithLastResultModel.workItemGlobalId) &&
        Objects.equals(this.workItemEntityTypeName, testPointWithLastResultModel.workItemEntityTypeName) &&
        Objects.equals(this.sectionId, testPointWithLastResultModel.sectionId) &&
        Objects.equals(this.sectionName, testPointWithLastResultModel.sectionName) &&
        Objects.equals(this.createdDate, testPointWithLastResultModel.createdDate) &&
        Objects.equals(this.modifiedDate, testPointWithLastResultModel.modifiedDate) &&
        Objects.equals(this.createdById, testPointWithLastResultModel.createdById) &&
        Objects.equals(this.modifiedById, testPointWithLastResultModel.modifiedById) &&
        Objects.equals(this.attributes, testPointWithLastResultModel.attributes) &&
        Objects.equals(this.tagNames, testPointWithLastResultModel.tagNames) &&
        Objects.equals(this.duration, testPointWithLastResultModel.duration) &&
        Objects.equals(this.priority, testPointWithLastResultModel.priority) &&
        Objects.equals(this.testSuiteNameBreadCrumbs, testPointWithLastResultModel.testSuiteNameBreadCrumbs) &&
        Objects.equals(this.groupCount, testPointWithLastResultModel.groupCount) &&
        Objects.equals(this.iteration, testPointWithLastResultModel.iteration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, workItemName, isAutomated, testerId, workItemId, configurationId, testSuiteId, lastTestResult, status, workItemGlobalId, workItemEntityTypeName, sectionId, sectionName, createdDate, modifiedDate, createdById, modifiedById, attributes, tagNames, duration, priority, testSuiteNameBreadCrumbs, groupCount, iteration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestPointWithLastResultModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    workItemName: ").append(toIndentedString(workItemName)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    testerId: ").append(toIndentedString(testerId)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("    configurationId: ").append(toIndentedString(configurationId)).append("\n");
    sb.append("    testSuiteId: ").append(toIndentedString(testSuiteId)).append("\n");
    sb.append("    lastTestResult: ").append(toIndentedString(lastTestResult)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    workItemGlobalId: ").append(toIndentedString(workItemGlobalId)).append("\n");
    sb.append("    workItemEntityTypeName: ").append(toIndentedString(workItemEntityTypeName)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    sectionName: ").append(toIndentedString(sectionName)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    tagNames: ").append(toIndentedString(tagNames)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    testSuiteNameBreadCrumbs: ").append(toIndentedString(testSuiteNameBreadCrumbs)).append("\n");
    sb.append("    groupCount: ").append(toIndentedString(groupCount)).append("\n");
    sb.append("    iteration: ").append(toIndentedString(iteration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
