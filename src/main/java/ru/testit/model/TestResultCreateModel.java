/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.testit.model.AttachmentPutModel;
import ru.testit.model.LinkModel;
import ru.testit.model.StepResultModel;
import ru.testit.model.TestResultStepCommentPutModel;
/**
 * TestResultCreateModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestResultCreateModel {
  @SerializedName("durationInMs")
  private Long durationInMs = null;

  @SerializedName("stepComments")
  private List<TestResultStepCommentPutModel> stepComments = null;

  @SerializedName("failureClassIds")
  private List<UUID> failureClassIds = null;

  @SerializedName("outcome")
  private String outcome = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("links")
  private List<LinkModel> links = null;

  @SerializedName("stepResults")
  private List<StepResultModel> stepResults = null;

  @SerializedName("attachments")
  private List<AttachmentPutModel> attachments = null;

  public TestResultCreateModel durationInMs(Long durationInMs) {
    this.durationInMs = durationInMs;
    return this;
  }

   /**
   * Get durationInMs
   * minimum: 0
   * @return durationInMs
  **/
  @Schema(description = "")
  public Long getDurationInMs() {
    return durationInMs;
  }

  public void setDurationInMs(Long durationInMs) {
    this.durationInMs = durationInMs;
  }

  public TestResultCreateModel stepComments(List<TestResultStepCommentPutModel> stepComments) {
    this.stepComments = stepComments;
    return this;
  }

  public TestResultCreateModel addStepCommentsItem(TestResultStepCommentPutModel stepCommentsItem) {
    if (this.stepComments == null) {
      this.stepComments = new ArrayList<TestResultStepCommentPutModel>();
    }
    this.stepComments.add(stepCommentsItem);
    return this;
  }

   /**
   * Get stepComments
   * @return stepComments
  **/
  @Schema(description = "")
  public List<TestResultStepCommentPutModel> getStepComments() {
    return stepComments;
  }

  public void setStepComments(List<TestResultStepCommentPutModel> stepComments) {
    this.stepComments = stepComments;
  }

  public TestResultCreateModel failureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = failureClassIds;
    return this;
  }

  public TestResultCreateModel addFailureClassIdsItem(UUID failureClassIdsItem) {
    if (this.failureClassIds == null) {
      this.failureClassIds = new ArrayList<UUID>();
    }
    this.failureClassIds.add(failureClassIdsItem);
    return this;
  }

   /**
   * Get failureClassIds
   * @return failureClassIds
  **/
  @Schema(description = "")
  public List<UUID> getFailureClassIds() {
    return failureClassIds;
  }

  public void setFailureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = failureClassIds;
  }

  public TestResultCreateModel outcome(String outcome) {
    this.outcome = outcome;
    return this;
  }

   /**
   * Get outcome
   * @return outcome
  **/
  @Schema(description = "")
  public String getOutcome() {
    return outcome;
  }

  public void setOutcome(String outcome) {
    this.outcome = outcome;
  }

  public TestResultCreateModel comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * Get comment
   * @return comment
  **/
  @Schema(description = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public TestResultCreateModel links(List<LinkModel> links) {
    this.links = links;
    return this;
  }

  public TestResultCreateModel addLinksItem(LinkModel linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkModel>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @Schema(description = "")
  public List<LinkModel> getLinks() {
    return links;
  }

  public void setLinks(List<LinkModel> links) {
    this.links = links;
  }

  public TestResultCreateModel stepResults(List<StepResultModel> stepResults) {
    this.stepResults = stepResults;
    return this;
  }

  public TestResultCreateModel addStepResultsItem(StepResultModel stepResultsItem) {
    if (this.stepResults == null) {
      this.stepResults = new ArrayList<StepResultModel>();
    }
    this.stepResults.add(stepResultsItem);
    return this;
  }

   /**
   * Get stepResults
   * @return stepResults
  **/
  @Schema(description = "")
  public List<StepResultModel> getStepResults() {
    return stepResults;
  }

  public void setStepResults(List<StepResultModel> stepResults) {
    this.stepResults = stepResults;
  }

  public TestResultCreateModel attachments(List<AttachmentPutModel> attachments) {
    this.attachments = attachments;
    return this;
  }

  public TestResultCreateModel addAttachmentsItem(AttachmentPutModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentPutModel>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @Schema(description = "")
  public List<AttachmentPutModel> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentPutModel> attachments) {
    this.attachments = attachments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultCreateModel testResultCreateModel = (TestResultCreateModel) o;
    return Objects.equals(this.durationInMs, testResultCreateModel.durationInMs) &&
        Objects.equals(this.stepComments, testResultCreateModel.stepComments) &&
        Objects.equals(this.failureClassIds, testResultCreateModel.failureClassIds) &&
        Objects.equals(this.outcome, testResultCreateModel.outcome) &&
        Objects.equals(this.comment, testResultCreateModel.comment) &&
        Objects.equals(this.links, testResultCreateModel.links) &&
        Objects.equals(this.stepResults, testResultCreateModel.stepResults) &&
        Objects.equals(this.attachments, testResultCreateModel.attachments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(durationInMs, stepComments, failureClassIds, outcome, comment, links, stepResults, attachments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultCreateModel {\n");
    
    sb.append("    durationInMs: ").append(toIndentedString(durationInMs)).append("\n");
    sb.append("    stepComments: ").append(toIndentedString(stepComments)).append("\n");
    sb.append("    failureClassIds: ").append(toIndentedString(failureClassIds)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    stepResults: ").append(toIndentedString(stepResults)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
