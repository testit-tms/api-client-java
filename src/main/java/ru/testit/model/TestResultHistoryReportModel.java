/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.AttachmentModel;
import ru.testit.model.LinkModel;
/**
 * TestResultHistoryReportModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class TestResultHistoryReportModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("modifiedDate")
  private OffsetDateTime modifiedDate = null;

  @SerializedName("userId")
  private UUID userId = null;

  @SerializedName("testRunId")
  private UUID testRunId = null;

  @SerializedName("testRunName")
  private String testRunName = null;

  @SerializedName("createdByUserName")
  private String createdByUserName = null;

  @SerializedName("testPlanId")
  private UUID testPlanId = null;

  @SerializedName("testPlanGlobalId")
  private Long testPlanGlobalId = null;

  @SerializedName("testPlanName")
  private String testPlanName = null;

  @SerializedName("configurationName")
  private String configurationName = null;

  @SerializedName("isAutomated")
  private Boolean isAutomated = null;

  @SerializedName("outcome")
  private String outcome = null;

  @SerializedName("comment")
  private String comment = null;

  @SerializedName("links")
  private List<LinkModel> links = null;

  @SerializedName("startedOn")
  private OffsetDateTime startedOn = null;

  @SerializedName("completedOn")
  private OffsetDateTime completedOn = null;

  @SerializedName("duration")
  private Long duration = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("modifiedById")
  private UUID modifiedById = null;

  @SerializedName("attachments")
  private List<AttachmentModel> attachments = null;

  @SerializedName("workItemVersionId")
  private UUID workItemVersionId = null;

  @SerializedName("workItemVersionNumber")
  private Integer workItemVersionNumber = null;

  @SerializedName("launchSource")
  private String launchSource = null;

  @SerializedName("failureClassIds")
  private List<UUID> failureClassIds = null;

  public TestResultHistoryReportModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestResultHistoryReportModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TestResultHistoryReportModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public TestResultHistoryReportModel userId(UUID userId) {
    this.userId = userId;
    return this;
  }

   /**
   * If test run was stopped, this property equals identifier of user who stopped it.Otherwise, the property equals identifier of user who created the test result
   * @return userId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "If test run was stopped, this property equals identifier of user who stopped it.Otherwise, the property equals identifier of user who created the test result")
  public UUID getUserId() {
    return userId;
  }

  public void setUserId(UUID userId) {
    this.userId = userId;
  }

  public TestResultHistoryReportModel testRunId(UUID testRunId) {
    this.testRunId = testRunId;
    return this;
  }

   /**
   * Get testRunId
   * @return testRunId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getTestRunId() {
    return testRunId;
  }

  public void setTestRunId(UUID testRunId) {
    this.testRunId = testRunId;
  }

  public TestResultHistoryReportModel testRunName(String testRunName) {
    this.testRunName = testRunName;
    return this;
  }

   /**
   * Get testRunName
   * @return testRunName
  **/
  @Schema(example = "Core tests", description = "")
  public String getTestRunName() {
    return testRunName;
  }

  public void setTestRunName(String testRunName) {
    this.testRunName = testRunName;
  }

  public TestResultHistoryReportModel createdByUserName(String createdByUserName) {
    this.createdByUserName = createdByUserName;
    return this;
  }

   /**
   * Get createdByUserName
   * @return createdByUserName
  **/
  @Schema(example = "example", description = "")
  public String getCreatedByUserName() {
    return createdByUserName;
  }

  public void setCreatedByUserName(String createdByUserName) {
    this.createdByUserName = createdByUserName;
  }

  public TestResultHistoryReportModel testPlanId(UUID testPlanId) {
    this.testPlanId = testPlanId;
    return this;
  }

   /**
   * Get testPlanId
   * @return testPlanId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getTestPlanId() {
    return testPlanId;
  }

  public void setTestPlanId(UUID testPlanId) {
    this.testPlanId = testPlanId;
  }

  public TestResultHistoryReportModel testPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = testPlanGlobalId;
    return this;
  }

   /**
   * Get testPlanGlobalId
   * @return testPlanGlobalId
  **/
  @Schema(example = "100000", description = "")
  public Long getTestPlanGlobalId() {
    return testPlanGlobalId;
  }

  public void setTestPlanGlobalId(Long testPlanGlobalId) {
    this.testPlanGlobalId = testPlanGlobalId;
  }

  public TestResultHistoryReportModel testPlanName(String testPlanName) {
    this.testPlanName = testPlanName;
    return this;
  }

   /**
   * Get testPlanName
   * @return testPlanName
  **/
  @Schema(example = "Release 7.13", description = "")
  public String getTestPlanName() {
    return testPlanName;
  }

  public void setTestPlanName(String testPlanName) {
    this.testPlanName = testPlanName;
  }

  public TestResultHistoryReportModel configurationName(String configurationName) {
    this.configurationName = configurationName;
    return this;
  }

   /**
   * If test point related to the test result has configuration, this property will be equal to the test point configuration name. Otherwise, this property will be equal to the test result configuration name
   * @return configurationName
  **/
  @Schema(example = "Default", description = "If test point related to the test result has configuration, this property will be equal to the test point configuration name. Otherwise, this property will be equal to the test result configuration name")
  public String getConfigurationName() {
    return configurationName;
  }

  public void setConfigurationName(String configurationName) {
    this.configurationName = configurationName;
  }

  public TestResultHistoryReportModel isAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
    return this;
  }

   /**
   * Get isAutomated
   * @return isAutomated
  **/
  @Schema(example = "true", description = "")
  public Boolean isIsAutomated() {
    return isAutomated;
  }

  public void setIsAutomated(Boolean isAutomated) {
    this.isAutomated = isAutomated;
  }

  public TestResultHistoryReportModel outcome(String outcome) {
    this.outcome = outcome;
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest and the run has an outcome, the outcome value equalsto the worst outcome of the last modified test result.Otherwise, the outcome equals to the outcome of first created test result in the test run
   * @return outcome
  **/
  @Schema(example = "Failed", description = "If any test result related to the test run is linked with autotest and the run has an outcome, the outcome value equalsto the worst outcome of the last modified test result.Otherwise, the outcome equals to the outcome of first created test result in the test run")
  public String getOutcome() {
    return outcome;
  }

  public void setOutcome(String outcome) {
    this.outcome = outcome;
  }

  public TestResultHistoryReportModel comment(String comment) {
    this.comment = comment;
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest, comment will have default valueOtherwise, the comment equals to the comment of first created test result in the test run
   * @return comment
  **/
  @Schema(example = "my first comment", description = "If any test result related to the test run is linked with autotest, comment will have default valueOtherwise, the comment equals to the comment of first created test result in the test run")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public TestResultHistoryReportModel links(List<LinkModel> links) {
    this.links = links;
    return this;
  }

  public TestResultHistoryReportModel addLinksItem(LinkModel linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<LinkModel>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest, link will be equal to the links of last modified test result.Otherwise, the links equals to the links of first created test result in the test run
   * @return links
  **/
  @Schema(description = "If any test result related to the test run is linked with autotest, link will be equal to the links of last modified test result.Otherwise, the links equals to the links of first created test result in the test run")
  public List<LinkModel> getLinks() {
    return links;
  }

  public void setLinks(List<LinkModel> links) {
    this.links = links;
  }

  public TestResultHistoryReportModel startedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
    return this;
  }

   /**
   * Get startedOn
   * @return startedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getStartedOn() {
    return startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
  }

  public TestResultHistoryReportModel completedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
    return this;
  }

   /**
   * Get completedOn
   * @return completedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCompletedOn() {
    return completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
  }

  public TestResultHistoryReportModel duration(Long duration) {
    this.duration = duration;
    return this;
  }

   /**
   * Get duration
   * @return duration
  **/
  @Schema(example = "100000", description = "")
  public Long getDuration() {
    return duration;
  }

  public void setDuration(Long duration) {
    this.duration = duration;
  }

  public TestResultHistoryReportModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public TestResultHistoryReportModel modifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getModifiedById() {
    return modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
  }

  public TestResultHistoryReportModel attachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
    return this;
  }

  public TestResultHistoryReportModel addAttachmentsItem(AttachmentModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<AttachmentModel>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * If any test result related to the test run is linked with autotest, attachments will be equal to the attachments of last modified test result.Otherwise, the attachments equals to the attachments of first created test result in the test run
   * @return attachments
  **/
  @Schema(description = "If any test result related to the test run is linked with autotest, attachments will be equal to the attachments of last modified test result.Otherwise, the attachments equals to the attachments of first created test result in the test run")
  public List<AttachmentModel> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<AttachmentModel> attachments) {
    this.attachments = attachments;
  }

  public TestResultHistoryReportModel workItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
    return this;
  }

   /**
   * Get workItemVersionId
   * @return workItemVersionId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getWorkItemVersionId() {
    return workItemVersionId;
  }

  public void setWorkItemVersionId(UUID workItemVersionId) {
    this.workItemVersionId = workItemVersionId;
  }

  public TestResultHistoryReportModel workItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
    return this;
  }

   /**
   * Get workItemVersionNumber
   * @return workItemVersionNumber
  **/
  @Schema(description = "")
  public Integer getWorkItemVersionNumber() {
    return workItemVersionNumber;
  }

  public void setWorkItemVersionNumber(Integer workItemVersionNumber) {
    this.workItemVersionNumber = workItemVersionNumber;
  }

  public TestResultHistoryReportModel launchSource(String launchSource) {
    this.launchSource = launchSource;
    return this;
  }

   /**
   * Get launchSource
   * @return launchSource
  **/
  @Schema(description = "")
  public String getLaunchSource() {
    return launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = launchSource;
  }

  public TestResultHistoryReportModel failureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = failureClassIds;
    return this;
  }

  public TestResultHistoryReportModel addFailureClassIdsItem(UUID failureClassIdsItem) {
    if (this.failureClassIds == null) {
      this.failureClassIds = new ArrayList<UUID>();
    }
    this.failureClassIds.add(failureClassIdsItem);
    return this;
  }

   /**
   * Get failureClassIds
   * @return failureClassIds
  **/
  @Schema(description = "")
  public List<UUID> getFailureClassIds() {
    return failureClassIds;
  }

  public void setFailureClassIds(List<UUID> failureClassIds) {
    this.failureClassIds = failureClassIds;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestResultHistoryReportModel testResultHistoryReportModel = (TestResultHistoryReportModel) o;
    return Objects.equals(this.id, testResultHistoryReportModel.id) &&
        Objects.equals(this.createdDate, testResultHistoryReportModel.createdDate) &&
        Objects.equals(this.modifiedDate, testResultHistoryReportModel.modifiedDate) &&
        Objects.equals(this.userId, testResultHistoryReportModel.userId) &&
        Objects.equals(this.testRunId, testResultHistoryReportModel.testRunId) &&
        Objects.equals(this.testRunName, testResultHistoryReportModel.testRunName) &&
        Objects.equals(this.createdByUserName, testResultHistoryReportModel.createdByUserName) &&
        Objects.equals(this.testPlanId, testResultHistoryReportModel.testPlanId) &&
        Objects.equals(this.testPlanGlobalId, testResultHistoryReportModel.testPlanGlobalId) &&
        Objects.equals(this.testPlanName, testResultHistoryReportModel.testPlanName) &&
        Objects.equals(this.configurationName, testResultHistoryReportModel.configurationName) &&
        Objects.equals(this.isAutomated, testResultHistoryReportModel.isAutomated) &&
        Objects.equals(this.outcome, testResultHistoryReportModel.outcome) &&
        Objects.equals(this.comment, testResultHistoryReportModel.comment) &&
        Objects.equals(this.links, testResultHistoryReportModel.links) &&
        Objects.equals(this.startedOn, testResultHistoryReportModel.startedOn) &&
        Objects.equals(this.completedOn, testResultHistoryReportModel.completedOn) &&
        Objects.equals(this.duration, testResultHistoryReportModel.duration) &&
        Objects.equals(this.createdById, testResultHistoryReportModel.createdById) &&
        Objects.equals(this.modifiedById, testResultHistoryReportModel.modifiedById) &&
        Objects.equals(this.attachments, testResultHistoryReportModel.attachments) &&
        Objects.equals(this.workItemVersionId, testResultHistoryReportModel.workItemVersionId) &&
        Objects.equals(this.workItemVersionNumber, testResultHistoryReportModel.workItemVersionNumber) &&
        Objects.equals(this.launchSource, testResultHistoryReportModel.launchSource) &&
        Objects.equals(this.failureClassIds, testResultHistoryReportModel.failureClassIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdDate, modifiedDate, userId, testRunId, testRunName, createdByUserName, testPlanId, testPlanGlobalId, testPlanName, configurationName, isAutomated, outcome, comment, links, startedOn, completedOn, duration, createdById, modifiedById, attachments, workItemVersionId, workItemVersionNumber, launchSource, failureClassIds);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestResultHistoryReportModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    testRunId: ").append(toIndentedString(testRunId)).append("\n");
    sb.append("    testRunName: ").append(toIndentedString(testRunName)).append("\n");
    sb.append("    createdByUserName: ").append(toIndentedString(createdByUserName)).append("\n");
    sb.append("    testPlanId: ").append(toIndentedString(testPlanId)).append("\n");
    sb.append("    testPlanGlobalId: ").append(toIndentedString(testPlanGlobalId)).append("\n");
    sb.append("    testPlanName: ").append(toIndentedString(testPlanName)).append("\n");
    sb.append("    configurationName: ").append(toIndentedString(configurationName)).append("\n");
    sb.append("    isAutomated: ").append(toIndentedString(isAutomated)).append("\n");
    sb.append("    outcome: ").append(toIndentedString(outcome)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    duration: ").append(toIndentedString(duration)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    workItemVersionId: ").append(toIndentedString(workItemVersionId)).append("\n");
    sb.append("    workItemVersionNumber: ").append(toIndentedString(workItemVersionNumber)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("    failureClassIds: ").append(toIndentedString(failureClassIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
