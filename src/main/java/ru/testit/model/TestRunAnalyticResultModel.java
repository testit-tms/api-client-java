/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import ru.testit.model.TestRunGroupByFailureClassModel;
import ru.testit.model.TestRunGroupByStatusModel;
/**
 * TestRunAnalyticResultModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestRunAnalyticResultModel {
  @SerializedName("countGroupByStatus")
  private List<TestRunGroupByStatusModel> countGroupByStatus = null;

  @SerializedName("countGroupByFailureClass")
  private List<TestRunGroupByFailureClassModel> countGroupByFailureClass = null;

  public TestRunAnalyticResultModel countGroupByStatus(List<TestRunGroupByStatusModel> countGroupByStatus) {
    this.countGroupByStatus = countGroupByStatus;
    return this;
  }

  public TestRunAnalyticResultModel addCountGroupByStatusItem(TestRunGroupByStatusModel countGroupByStatusItem) {
    if (this.countGroupByStatus == null) {
      this.countGroupByStatus = new ArrayList<TestRunGroupByStatusModel>();
    }
    this.countGroupByStatus.add(countGroupByStatusItem);
    return this;
  }

   /**
   * Get countGroupByStatus
   * @return countGroupByStatus
  **/
  @Schema(description = "")
  public List<TestRunGroupByStatusModel> getCountGroupByStatus() {
    return countGroupByStatus;
  }

  public void setCountGroupByStatus(List<TestRunGroupByStatusModel> countGroupByStatus) {
    this.countGroupByStatus = countGroupByStatus;
  }

  public TestRunAnalyticResultModel countGroupByFailureClass(List<TestRunGroupByFailureClassModel> countGroupByFailureClass) {
    this.countGroupByFailureClass = countGroupByFailureClass;
    return this;
  }

  public TestRunAnalyticResultModel addCountGroupByFailureClassItem(TestRunGroupByFailureClassModel countGroupByFailureClassItem) {
    if (this.countGroupByFailureClass == null) {
      this.countGroupByFailureClass = new ArrayList<TestRunGroupByFailureClassModel>();
    }
    this.countGroupByFailureClass.add(countGroupByFailureClassItem);
    return this;
  }

   /**
   * Get countGroupByFailureClass
   * @return countGroupByFailureClass
  **/
  @Schema(description = "")
  public List<TestRunGroupByFailureClassModel> getCountGroupByFailureClass() {
    return countGroupByFailureClass;
  }

  public void setCountGroupByFailureClass(List<TestRunGroupByFailureClassModel> countGroupByFailureClass) {
    this.countGroupByFailureClass = countGroupByFailureClass;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestRunAnalyticResultModel testRunAnalyticResultModel = (TestRunAnalyticResultModel) o;
    return Objects.equals(this.countGroupByStatus, testRunAnalyticResultModel.countGroupByStatus) &&
        Objects.equals(this.countGroupByFailureClass, testRunAnalyticResultModel.countGroupByFailureClass);
  }

  @Override
  public int hashCode() {
    return Objects.hash(countGroupByStatus, countGroupByFailureClass);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestRunAnalyticResultModel {\n");
    
    sb.append("    countGroupByStatus: ").append(toIndentedString(countGroupByStatus)).append("\n");
    sb.append("    countGroupByFailureClass: ").append(toIndentedString(countGroupByFailureClass)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
