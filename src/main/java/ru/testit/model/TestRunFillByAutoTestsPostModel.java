/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * TestRunFillByAutoTestsPostModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class TestRunFillByAutoTestsPostModel {
  @SerializedName("projectId")
  private UUID projectId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("configurationIds")
  private List<UUID> configurationIds = new ArrayList<UUID>();

  @SerializedName("autoTestExternalIds")
  private List<String> autoTestExternalIds = new ArrayList<String>();

  @SerializedName("description")
  private String description = null;

  @SerializedName("launchSource")
  private String launchSource = null;

  public TestRunFillByAutoTestsPostModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * This property is used to link test run with project
   * @return projectId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", required = true, description = "This property is used to link test run with project")
  public UUID getProjectId() {
    return projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }

  public TestRunFillByAutoTestsPostModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "First run", description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestRunFillByAutoTestsPostModel configurationIds(List<UUID> configurationIds) {
    this.configurationIds = configurationIds;
    return this;
  }

  public TestRunFillByAutoTestsPostModel addConfigurationIdsItem(UUID configurationIdsItem) {
    this.configurationIds.add(configurationIdsItem);
    return this;
  }

   /**
   * Get configurationIds
   * @return configurationIds
  **/
  @Schema(required = true, description = "")
  public List<UUID> getConfigurationIds() {
    return configurationIds;
  }

  public void setConfigurationIds(List<UUID> configurationIds) {
    this.configurationIds = configurationIds;
  }

  public TestRunFillByAutoTestsPostModel autoTestExternalIds(List<String> autoTestExternalIds) {
    this.autoTestExternalIds = autoTestExternalIds;
    return this;
  }

  public TestRunFillByAutoTestsPostModel addAutoTestExternalIdsItem(String autoTestExternalIdsItem) {
    this.autoTestExternalIds.add(autoTestExternalIdsItem);
    return this;
  }

   /**
   * Get autoTestExternalIds
   * @return autoTestExternalIds
  **/
  @Schema(required = true, description = "")
  public List<String> getAutoTestExternalIds() {
    return autoTestExternalIds;
  }

  public void setAutoTestExternalIds(List<String> autoTestExternalIds) {
    this.autoTestExternalIds = autoTestExternalIds;
  }

  public TestRunFillByAutoTestsPostModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestRunFillByAutoTestsPostModel launchSource(String launchSource) {
    this.launchSource = launchSource;
    return this;
  }

   /**
   * Get launchSource
   * @return launchSource
  **/
  @Schema(example = "By user via API", description = "")
  public String getLaunchSource() {
    return launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = launchSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestRunFillByAutoTestsPostModel testRunFillByAutoTestsPostModel = (TestRunFillByAutoTestsPostModel) o;
    return Objects.equals(this.projectId, testRunFillByAutoTestsPostModel.projectId) &&
        Objects.equals(this.name, testRunFillByAutoTestsPostModel.name) &&
        Objects.equals(this.configurationIds, testRunFillByAutoTestsPostModel.configurationIds) &&
        Objects.equals(this.autoTestExternalIds, testRunFillByAutoTestsPostModel.autoTestExternalIds) &&
        Objects.equals(this.description, testRunFillByAutoTestsPostModel.description) &&
        Objects.equals(this.launchSource, testRunFillByAutoTestsPostModel.launchSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectId, name, configurationIds, autoTestExternalIds, description, launchSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestRunFillByAutoTestsPostModel {\n");
    
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    configurationIds: ").append(toIndentedString(configurationIds)).append("\n");
    sb.append("    autoTestExternalIds: ").append(toIndentedString(autoTestExternalIds)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
