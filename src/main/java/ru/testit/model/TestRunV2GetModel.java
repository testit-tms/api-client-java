/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.TestResultV2GetModel;
import ru.testit.model.TestRunStateTypeModel;
/**
 * TestRunV2GetModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class TestRunV2GetModel {
  @SerializedName("startedOn")
  private OffsetDateTime startedOn = null;

  @SerializedName("completedOn")
  private OffsetDateTime completedOn = null;

  @SerializedName("stateName")
  private TestRunStateTypeModel stateName = null;

  @SerializedName("projectId")
  private UUID projectId = null;

  @SerializedName("testPlanId")
  private UUID testPlanId = null;

  @SerializedName("testResults")
  private List<TestResultV2GetModel> testResults = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  @SerializedName("modifiedDate")
  private OffsetDateTime modifiedDate = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("modifiedById")
  private UUID modifiedById = null;

  @SerializedName("createdByUserName")
  private String createdByUserName = null;

  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("launchSource")
  private String launchSource = null;

  public TestRunV2GetModel startedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
    return this;
  }

   /**
   * Get startedOn
   * @return startedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getStartedOn() {
    return startedOn;
  }

  public void setStartedOn(OffsetDateTime startedOn) {
    this.startedOn = startedOn;
  }

  public TestRunV2GetModel completedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
    return this;
  }

   /**
   * Get completedOn
   * @return completedOn
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCompletedOn() {
    return completedOn;
  }

  public void setCompletedOn(OffsetDateTime completedOn) {
    this.completedOn = completedOn;
  }

  public TestRunV2GetModel stateName(TestRunStateTypeModel stateName) {
    this.stateName = stateName;
    return this;
  }

   /**
   * Get stateName
   * @return stateName
  **/
  @Schema(description = "")
  public TestRunStateTypeModel getStateName() {
    return stateName;
  }

  public void setStateName(TestRunStateTypeModel stateName) {
    this.stateName = stateName;
  }

  public TestRunV2GetModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * This property is used to link test run with project
   * @return projectId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "This property is used to link test run with project")
  public UUID getProjectId() {
    return projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }

  public TestRunV2GetModel testPlanId(UUID testPlanId) {
    this.testPlanId = testPlanId;
    return this;
  }

   /**
   * This property is used to link test run with test plan
   * @return testPlanId
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "This property is used to link test run with test plan")
  public UUID getTestPlanId() {
    return testPlanId;
  }

  public void setTestPlanId(UUID testPlanId) {
    this.testPlanId = testPlanId;
  }

  public TestRunV2GetModel testResults(List<TestResultV2GetModel> testResults) {
    this.testResults = testResults;
    return this;
  }

  public TestRunV2GetModel addTestResultsItem(TestResultV2GetModel testResultsItem) {
    if (this.testResults == null) {
      this.testResults = new ArrayList<TestResultV2GetModel>();
    }
    this.testResults.add(testResultsItem);
    return this;
  }

   /**
   * Get testResults
   * @return testResults
  **/
  @Schema(description = "")
  public List<TestResultV2GetModel> getTestResults() {
    return testResults;
  }

  public void setTestResults(List<TestResultV2GetModel> testResults) {
    this.testResults = testResults;
  }

  public TestRunV2GetModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }

  public TestRunV2GetModel modifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @Schema(example = "2022-07-12T13:28:30.489584500Z", description = "")
  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }

  public void setModifiedDate(OffsetDateTime modifiedDate) {
    this.modifiedDate = modifiedDate;
  }

  public TestRunV2GetModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public TestRunV2GetModel modifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
    return this;
  }

   /**
   * Get modifiedById
   * @return modifiedById
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", description = "")
  public UUID getModifiedById() {
    return modifiedById;
  }

  public void setModifiedById(UUID modifiedById) {
    this.modifiedById = modifiedById;
  }

  public TestRunV2GetModel createdByUserName(String createdByUserName) {
    this.createdByUserName = createdByUserName;
    return this;
  }

   /**
   * Get createdByUserName
   * @return createdByUserName
  **/
  @Schema(example = "example", description = "")
  public String getCreatedByUserName() {
    return createdByUserName;
  }

  public void setCreatedByUserName(String createdByUserName) {
    this.createdByUserName = createdByUserName;
  }

  public TestRunV2GetModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(example = "a70fa497-5526-4fb2-8f44-749ea5533c00", required = true, description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestRunV2GetModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(example = "First run", required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestRunV2GetModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TestRunV2GetModel launchSource(String launchSource) {
    this.launchSource = launchSource;
    return this;
  }

   /**
   * Once launch source is specified it cannot be updated
   * @return launchSource
  **/
  @Schema(example = "By user via API", description = "Once launch source is specified it cannot be updated")
  public String getLaunchSource() {
    return launchSource;
  }

  public void setLaunchSource(String launchSource) {
    this.launchSource = launchSource;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestRunV2GetModel testRunV2GetModel = (TestRunV2GetModel) o;
    return Objects.equals(this.startedOn, testRunV2GetModel.startedOn) &&
        Objects.equals(this.completedOn, testRunV2GetModel.completedOn) &&
        Objects.equals(this.stateName, testRunV2GetModel.stateName) &&
        Objects.equals(this.projectId, testRunV2GetModel.projectId) &&
        Objects.equals(this.testPlanId, testRunV2GetModel.testPlanId) &&
        Objects.equals(this.testResults, testRunV2GetModel.testResults) &&
        Objects.equals(this.createdDate, testRunV2GetModel.createdDate) &&
        Objects.equals(this.modifiedDate, testRunV2GetModel.modifiedDate) &&
        Objects.equals(this.createdById, testRunV2GetModel.createdById) &&
        Objects.equals(this.modifiedById, testRunV2GetModel.modifiedById) &&
        Objects.equals(this.createdByUserName, testRunV2GetModel.createdByUserName) &&
        Objects.equals(this.id, testRunV2GetModel.id) &&
        Objects.equals(this.name, testRunV2GetModel.name) &&
        Objects.equals(this.description, testRunV2GetModel.description) &&
        Objects.equals(this.launchSource, testRunV2GetModel.launchSource);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startedOn, completedOn, stateName, projectId, testPlanId, testResults, createdDate, modifiedDate, createdById, modifiedById, createdByUserName, id, name, description, launchSource);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestRunV2GetModel {\n");
    
    sb.append("    startedOn: ").append(toIndentedString(startedOn)).append("\n");
    sb.append("    completedOn: ").append(toIndentedString(completedOn)).append("\n");
    sb.append("    stateName: ").append(toIndentedString(stateName)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    testPlanId: ").append(toIndentedString(testPlanId)).append("\n");
    sb.append("    testResults: ").append(toIndentedString(testResults)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    modifiedById: ").append(toIndentedString(modifiedById)).append("\n");
    sb.append("    createdByUserName: ").append(toIndentedString(createdByUserName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    launchSource: ").append(toIndentedString(launchSource)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
