/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
import ru.testit.model.ShortConfiguration;
/**
 * TestSuiteChangeViewModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class TestSuiteChangeViewModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("configurations")
  private List<ShortConfiguration> configurations = null;

  @SerializedName("workItemCount")
  private Long workItemCount = null;

  public TestSuiteChangeViewModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public TestSuiteChangeViewModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public TestSuiteChangeViewModel configurations(List<ShortConfiguration> configurations) {
    this.configurations = configurations;
    return this;
  }

  public TestSuiteChangeViewModel addConfigurationsItem(ShortConfiguration configurationsItem) {
    if (this.configurations == null) {
      this.configurations = new ArrayList<ShortConfiguration>();
    }
    this.configurations.add(configurationsItem);
    return this;
  }

   /**
   * Get configurations
   * @return configurations
  **/
  @Schema(description = "")
  public List<ShortConfiguration> getConfigurations() {
    return configurations;
  }

  public void setConfigurations(List<ShortConfiguration> configurations) {
    this.configurations = configurations;
  }

  public TestSuiteChangeViewModel workItemCount(Long workItemCount) {
    this.workItemCount = workItemCount;
    return this;
  }

   /**
   * Get workItemCount
   * @return workItemCount
  **/
  @Schema(description = "")
  public Long getWorkItemCount() {
    return workItemCount;
  }

  public void setWorkItemCount(Long workItemCount) {
    this.workItemCount = workItemCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestSuiteChangeViewModel testSuiteChangeViewModel = (TestSuiteChangeViewModel) o;
    return Objects.equals(this.id, testSuiteChangeViewModel.id) &&
        Objects.equals(this.name, testSuiteChangeViewModel.name) &&
        Objects.equals(this.configurations, testSuiteChangeViewModel.configurations) &&
        Objects.equals(this.workItemCount, testSuiteChangeViewModel.workItemCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, configurations, workItemCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestSuiteChangeViewModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    configurations: ").append(toIndentedString(configurations)).append("\n");
    sb.append("    workItemCount: ").append(toIndentedString(workItemCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
