/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;
import ru.testit.model.RequestTypeModel;
import ru.testit.model.WebHookEventTypeModel;
/**
 * WebHookPostModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class WebHookPostModel {
  @SerializedName("projectId")
  private UUID projectId = null;

  @SerializedName("eventType")
  private WebHookEventTypeModel eventType = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("requestType")
  private RequestTypeModel requestType = null;

  @SerializedName("shouldSendBody")
  private Boolean shouldSendBody = null;

  @SerializedName("headers")
  private Map<String, String> headers = new HashMap<String, String>();

  @SerializedName("queryParameters")
  private Map<String, String> queryParameters = new HashMap<String, String>();

  @SerializedName("isEnabled")
  private Boolean isEnabled = null;

  @SerializedName("shouldSendCustomBody")
  private Boolean shouldSendCustomBody = null;

  @SerializedName("customBody")
  private String customBody = null;

  @SerializedName("shouldReplaceParameters")
  private Boolean shouldReplaceParameters = null;

  @SerializedName("shouldEscapeParameters")
  private Boolean shouldEscapeParameters = null;

  @SerializedName("name")
  private String name = null;

  public WebHookPostModel projectId(UUID projectId) {
    this.projectId = projectId;
    return this;
  }

   /**
   * Get projectId
   * @return projectId
  **/
  @Schema(required = true, description = "")
  public UUID getProjectId() {
    return projectId;
  }

  public void setProjectId(UUID projectId) {
    this.projectId = projectId;
  }

  public WebHookPostModel eventType(WebHookEventTypeModel eventType) {
    this.eventType = eventType;
    return this;
  }

   /**
   * Get eventType
   * @return eventType
  **/
  @Schema(required = true, description = "")
  public WebHookEventTypeModel getEventType() {
    return eventType;
  }

  public void setEventType(WebHookEventTypeModel eventType) {
    this.eventType = eventType;
  }

  public WebHookPostModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @Schema(description = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public WebHookPostModel url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  @Schema(required = true, description = "")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public WebHookPostModel requestType(RequestTypeModel requestType) {
    this.requestType = requestType;
    return this;
  }

   /**
   * Get requestType
   * @return requestType
  **/
  @Schema(required = true, description = "")
  public RequestTypeModel getRequestType() {
    return requestType;
  }

  public void setRequestType(RequestTypeModel requestType) {
    this.requestType = requestType;
  }

  public WebHookPostModel shouldSendBody(Boolean shouldSendBody) {
    this.shouldSendBody = shouldSendBody;
    return this;
  }

   /**
   * Get shouldSendBody
   * @return shouldSendBody
  **/
  @Schema(description = "")
  public Boolean isShouldSendBody() {
    return shouldSendBody;
  }

  public void setShouldSendBody(Boolean shouldSendBody) {
    this.shouldSendBody = shouldSendBody;
  }

  public WebHookPostModel headers(Map<String, String> headers) {
    this.headers = headers;
    return this;
  }

  public WebHookPostModel putHeadersItem(String key, String headersItem) {
    this.headers.put(key, headersItem);
    return this;
  }

   /**
   * Get headers
   * @return headers
  **/
  @Schema(required = true, description = "")
  public Map<String, String> getHeaders() {
    return headers;
  }

  public void setHeaders(Map<String, String> headers) {
    this.headers = headers;
  }

  public WebHookPostModel queryParameters(Map<String, String> queryParameters) {
    this.queryParameters = queryParameters;
    return this;
  }

  public WebHookPostModel putQueryParametersItem(String key, String queryParametersItem) {
    this.queryParameters.put(key, queryParametersItem);
    return this;
  }

   /**
   * Get queryParameters
   * @return queryParameters
  **/
  @Schema(required = true, description = "")
  public Map<String, String> getQueryParameters() {
    return queryParameters;
  }

  public void setQueryParameters(Map<String, String> queryParameters) {
    this.queryParameters = queryParameters;
  }

  public WebHookPostModel isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Get isEnabled
   * @return isEnabled
  **/
  @Schema(description = "")
  public Boolean isIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }

  public WebHookPostModel shouldSendCustomBody(Boolean shouldSendCustomBody) {
    this.shouldSendCustomBody = shouldSendCustomBody;
    return this;
  }

   /**
   * Get shouldSendCustomBody
   * @return shouldSendCustomBody
  **/
  @Schema(description = "")
  public Boolean isShouldSendCustomBody() {
    return shouldSendCustomBody;
  }

  public void setShouldSendCustomBody(Boolean shouldSendCustomBody) {
    this.shouldSendCustomBody = shouldSendCustomBody;
  }

  public WebHookPostModel customBody(String customBody) {
    this.customBody = customBody;
    return this;
  }

   /**
   * Get customBody
   * @return customBody
  **/
  @Schema(description = "")
  public String getCustomBody() {
    return customBody;
  }

  public void setCustomBody(String customBody) {
    this.customBody = customBody;
  }

  public WebHookPostModel shouldReplaceParameters(Boolean shouldReplaceParameters) {
    this.shouldReplaceParameters = shouldReplaceParameters;
    return this;
  }

   /**
   * Get shouldReplaceParameters
   * @return shouldReplaceParameters
  **/
  @Schema(description = "")
  public Boolean isShouldReplaceParameters() {
    return shouldReplaceParameters;
  }

  public void setShouldReplaceParameters(Boolean shouldReplaceParameters) {
    this.shouldReplaceParameters = shouldReplaceParameters;
  }

  public WebHookPostModel shouldEscapeParameters(Boolean shouldEscapeParameters) {
    this.shouldEscapeParameters = shouldEscapeParameters;
    return this;
  }

   /**
   * Get shouldEscapeParameters
   * @return shouldEscapeParameters
  **/
  @Schema(description = "")
  public Boolean isShouldEscapeParameters() {
    return shouldEscapeParameters;
  }

  public void setShouldEscapeParameters(Boolean shouldEscapeParameters) {
    this.shouldEscapeParameters = shouldEscapeParameters;
  }

  public WebHookPostModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(required = true, description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WebHookPostModel webHookPostModel = (WebHookPostModel) o;
    return Objects.equals(this.projectId, webHookPostModel.projectId) &&
        Objects.equals(this.eventType, webHookPostModel.eventType) &&
        Objects.equals(this.description, webHookPostModel.description) &&
        Objects.equals(this.url, webHookPostModel.url) &&
        Objects.equals(this.requestType, webHookPostModel.requestType) &&
        Objects.equals(this.shouldSendBody, webHookPostModel.shouldSendBody) &&
        Objects.equals(this.headers, webHookPostModel.headers) &&
        Objects.equals(this.queryParameters, webHookPostModel.queryParameters) &&
        Objects.equals(this.isEnabled, webHookPostModel.isEnabled) &&
        Objects.equals(this.shouldSendCustomBody, webHookPostModel.shouldSendCustomBody) &&
        Objects.equals(this.customBody, webHookPostModel.customBody) &&
        Objects.equals(this.shouldReplaceParameters, webHookPostModel.shouldReplaceParameters) &&
        Objects.equals(this.shouldEscapeParameters, webHookPostModel.shouldEscapeParameters) &&
        Objects.equals(this.name, webHookPostModel.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(projectId, eventType, description, url, requestType, shouldSendBody, headers, queryParameters, isEnabled, shouldSendCustomBody, customBody, shouldReplaceParameters, shouldEscapeParameters, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WebHookPostModel {\n");
    
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("    eventType: ").append(toIndentedString(eventType)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    requestType: ").append(toIndentedString(requestType)).append("\n");
    sb.append("    shouldSendBody: ").append(toIndentedString(shouldSendBody)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    queryParameters: ").append(toIndentedString(queryParameters)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    shouldSendCustomBody: ").append(toIndentedString(shouldSendCustomBody)).append("\n");
    sb.append("    customBody: ").append(toIndentedString(customBody)).append("\n");
    sb.append("    shouldReplaceParameters: ").append(toIndentedString(shouldReplaceParameters)).append("\n");
    sb.append("    shouldEscapeParameters: ").append(toIndentedString(shouldEscapeParameters)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
