/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;
import ru.testit.model.WorkItemChangedFieldsViewModel;
/**
 * WorkItemChangeModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class WorkItemChangeModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("workItemId")
  private UUID workItemId = null;

  @SerializedName("oldVersionId")
  private UUID oldVersionId = null;

  @SerializedName("newVersionId")
  private UUID newVersionId = null;

  @SerializedName("workItemChangedFields")
  private WorkItemChangedFieldsViewModel workItemChangedFields = null;

  @SerializedName("createdById")
  private UUID createdById = null;

  @SerializedName("createdDate")
  private OffsetDateTime createdDate = null;

  public WorkItemChangeModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public WorkItemChangeModel workItemId(UUID workItemId) {
    this.workItemId = workItemId;
    return this;
  }

   /**
   * Get workItemId
   * @return workItemId
  **/
  @Schema(description = "")
  public UUID getWorkItemId() {
    return workItemId;
  }

  public void setWorkItemId(UUID workItemId) {
    this.workItemId = workItemId;
  }

  public WorkItemChangeModel oldVersionId(UUID oldVersionId) {
    this.oldVersionId = oldVersionId;
    return this;
  }

   /**
   * Get oldVersionId
   * @return oldVersionId
  **/
  @Schema(description = "")
  public UUID getOldVersionId() {
    return oldVersionId;
  }

  public void setOldVersionId(UUID oldVersionId) {
    this.oldVersionId = oldVersionId;
  }

  public WorkItemChangeModel newVersionId(UUID newVersionId) {
    this.newVersionId = newVersionId;
    return this;
  }

   /**
   * Get newVersionId
   * @return newVersionId
  **/
  @Schema(description = "")
  public UUID getNewVersionId() {
    return newVersionId;
  }

  public void setNewVersionId(UUID newVersionId) {
    this.newVersionId = newVersionId;
  }

  public WorkItemChangeModel workItemChangedFields(WorkItemChangedFieldsViewModel workItemChangedFields) {
    this.workItemChangedFields = workItemChangedFields;
    return this;
  }

   /**
   * Get workItemChangedFields
   * @return workItemChangedFields
  **/
  @Schema(description = "")
  public WorkItemChangedFieldsViewModel getWorkItemChangedFields() {
    return workItemChangedFields;
  }

  public void setWorkItemChangedFields(WorkItemChangedFieldsViewModel workItemChangedFields) {
    this.workItemChangedFields = workItemChangedFields;
  }

  public WorkItemChangeModel createdById(UUID createdById) {
    this.createdById = createdById;
    return this;
  }

   /**
   * Get createdById
   * @return createdById
  **/
  @Schema(description = "")
  public UUID getCreatedById() {
    return createdById;
  }

  public void setCreatedById(UUID createdById) {
    this.createdById = createdById;
  }

  public WorkItemChangeModel createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

   /**
   * Get createdDate
   * @return createdDate
  **/
  @Schema(description = "")
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemChangeModel workItemChangeModel = (WorkItemChangeModel) o;
    return Objects.equals(this.id, workItemChangeModel.id) &&
        Objects.equals(this.workItemId, workItemChangeModel.workItemId) &&
        Objects.equals(this.oldVersionId, workItemChangeModel.oldVersionId) &&
        Objects.equals(this.newVersionId, workItemChangeModel.newVersionId) &&
        Objects.equals(this.workItemChangedFields, workItemChangeModel.workItemChangedFields) &&
        Objects.equals(this.createdById, workItemChangeModel.createdById) &&
        Objects.equals(this.createdDate, workItemChangeModel.createdDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, workItemId, oldVersionId, newVersionId, workItemChangedFields, createdById, createdDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemChangeModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    workItemId: ").append(toIndentedString(workItemId)).append("\n");
    sb.append("    oldVersionId: ").append(toIndentedString(oldVersionId)).append("\n");
    sb.append("    newVersionId: ").append(toIndentedString(newVersionId)).append("\n");
    sb.append("    workItemChangedFields: ").append(toIndentedString(workItemChangedFields)).append("\n");
    sb.append("    createdById: ").append(toIndentedString(createdById)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
