/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.UUID;
/**
 * WorkItemExtractionModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-12T16:29:55.695125+03:00[Europe/Moscow]")
public class WorkItemExtractionModel {
  @SerializedName("includeWorkItems")
  private List<UUID> includeWorkItems = null;

  @SerializedName("includeSections")
  private List<UUID> includeSections = null;

  @SerializedName("includeProjects")
  private List<UUID> includeProjects = null;

  @SerializedName("excludeWorkItems")
  private List<UUID> excludeWorkItems = null;

  @SerializedName("excludeSections")
  private List<UUID> excludeSections = null;

  @SerializedName("excludeProjects")
  private List<UUID> excludeProjects = null;

  public WorkItemExtractionModel includeWorkItems(List<UUID> includeWorkItems) {
    this.includeWorkItems = includeWorkItems;
    return this;
  }

  public WorkItemExtractionModel addIncludeWorkItemsItem(UUID includeWorkItemsItem) {
    if (this.includeWorkItems == null) {
      this.includeWorkItems = new ArrayList<UUID>();
    }
    this.includeWorkItems.add(includeWorkItemsItem);
    return this;
  }

   /**
   * Get includeWorkItems
   * @return includeWorkItems
  **/
  @Schema(description = "")
  public List<UUID> getIncludeWorkItems() {
    return includeWorkItems;
  }

  public void setIncludeWorkItems(List<UUID> includeWorkItems) {
    this.includeWorkItems = includeWorkItems;
  }

  public WorkItemExtractionModel includeSections(List<UUID> includeSections) {
    this.includeSections = includeSections;
    return this;
  }

  public WorkItemExtractionModel addIncludeSectionsItem(UUID includeSectionsItem) {
    if (this.includeSections == null) {
      this.includeSections = new ArrayList<UUID>();
    }
    this.includeSections.add(includeSectionsItem);
    return this;
  }

   /**
   * Get includeSections
   * @return includeSections
  **/
  @Schema(description = "")
  public List<UUID> getIncludeSections() {
    return includeSections;
  }

  public void setIncludeSections(List<UUID> includeSections) {
    this.includeSections = includeSections;
  }

  public WorkItemExtractionModel includeProjects(List<UUID> includeProjects) {
    this.includeProjects = includeProjects;
    return this;
  }

  public WorkItemExtractionModel addIncludeProjectsItem(UUID includeProjectsItem) {
    if (this.includeProjects == null) {
      this.includeProjects = new ArrayList<UUID>();
    }
    this.includeProjects.add(includeProjectsItem);
    return this;
  }

   /**
   * Get includeProjects
   * @return includeProjects
  **/
  @Schema(description = "")
  public List<UUID> getIncludeProjects() {
    return includeProjects;
  }

  public void setIncludeProjects(List<UUID> includeProjects) {
    this.includeProjects = includeProjects;
  }

  public WorkItemExtractionModel excludeWorkItems(List<UUID> excludeWorkItems) {
    this.excludeWorkItems = excludeWorkItems;
    return this;
  }

  public WorkItemExtractionModel addExcludeWorkItemsItem(UUID excludeWorkItemsItem) {
    if (this.excludeWorkItems == null) {
      this.excludeWorkItems = new ArrayList<UUID>();
    }
    this.excludeWorkItems.add(excludeWorkItemsItem);
    return this;
  }

   /**
   * Get excludeWorkItems
   * @return excludeWorkItems
  **/
  @Schema(description = "")
  public List<UUID> getExcludeWorkItems() {
    return excludeWorkItems;
  }

  public void setExcludeWorkItems(List<UUID> excludeWorkItems) {
    this.excludeWorkItems = excludeWorkItems;
  }

  public WorkItemExtractionModel excludeSections(List<UUID> excludeSections) {
    this.excludeSections = excludeSections;
    return this;
  }

  public WorkItemExtractionModel addExcludeSectionsItem(UUID excludeSectionsItem) {
    if (this.excludeSections == null) {
      this.excludeSections = new ArrayList<UUID>();
    }
    this.excludeSections.add(excludeSectionsItem);
    return this;
  }

   /**
   * Get excludeSections
   * @return excludeSections
  **/
  @Schema(description = "")
  public List<UUID> getExcludeSections() {
    return excludeSections;
  }

  public void setExcludeSections(List<UUID> excludeSections) {
    this.excludeSections = excludeSections;
  }

  public WorkItemExtractionModel excludeProjects(List<UUID> excludeProjects) {
    this.excludeProjects = excludeProjects;
    return this;
  }

  public WorkItemExtractionModel addExcludeProjectsItem(UUID excludeProjectsItem) {
    if (this.excludeProjects == null) {
      this.excludeProjects = new ArrayList<UUID>();
    }
    this.excludeProjects.add(excludeProjectsItem);
    return this;
  }

   /**
   * Get excludeProjects
   * @return excludeProjects
  **/
  @Schema(description = "")
  public List<UUID> getExcludeProjects() {
    return excludeProjects;
  }

  public void setExcludeProjects(List<UUID> excludeProjects) {
    this.excludeProjects = excludeProjects;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemExtractionModel workItemExtractionModel = (WorkItemExtractionModel) o;
    return Objects.equals(this.includeWorkItems, workItemExtractionModel.includeWorkItems) &&
        Objects.equals(this.includeSections, workItemExtractionModel.includeSections) &&
        Objects.equals(this.includeProjects, workItemExtractionModel.includeProjects) &&
        Objects.equals(this.excludeWorkItems, workItemExtractionModel.excludeWorkItems) &&
        Objects.equals(this.excludeSections, workItemExtractionModel.excludeSections) &&
        Objects.equals(this.excludeProjects, workItemExtractionModel.excludeProjects);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeWorkItems, includeSections, includeProjects, excludeWorkItems, excludeSections, excludeProjects);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemExtractionModel {\n");
    
    sb.append("    includeWorkItems: ").append(toIndentedString(includeWorkItems)).append("\n");
    sb.append("    includeSections: ").append(toIndentedString(includeSections)).append("\n");
    sb.append("    includeProjects: ").append(toIndentedString(includeProjects)).append("\n");
    sb.append("    excludeWorkItems: ").append(toIndentedString(excludeWorkItems)).append("\n");
    sb.append("    excludeSections: ").append(toIndentedString(excludeSections)).append("\n");
    sb.append("    excludeProjects: ").append(toIndentedString(excludeProjects)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
