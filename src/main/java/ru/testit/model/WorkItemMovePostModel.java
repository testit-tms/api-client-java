/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.UUID;
/**
 * WorkItemMovePostModel
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2022-07-05T10:40:26.135191+03:00[Europe/Moscow]")
public class WorkItemMovePostModel {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("oldSectionId")
  private UUID oldSectionId = null;

  @SerializedName("newSectionId")
  private UUID newSectionId = null;

  @SerializedName("nextWorkItemId")
  private UUID nextWorkItemId = null;

  public WorkItemMovePostModel id(UUID id) {
    this.id = id;
    return this;
  }

   /**
   * WorkItemId
   * @return id
  **/
  @Schema(description = "WorkItemId")
  public UUID getId() {
    return id;
  }

  public void setId(UUID id) {
    this.id = id;
  }

  public WorkItemMovePostModel oldSectionId(UUID oldSectionId) {
    this.oldSectionId = oldSectionId;
    return this;
  }

   /**
   * Get oldSectionId
   * @return oldSectionId
  **/
  @Schema(description = "")
  public UUID getOldSectionId() {
    return oldSectionId;
  }

  public void setOldSectionId(UUID oldSectionId) {
    this.oldSectionId = oldSectionId;
  }

  public WorkItemMovePostModel newSectionId(UUID newSectionId) {
    this.newSectionId = newSectionId;
    return this;
  }

   /**
   * Get newSectionId
   * @return newSectionId
  **/
  @Schema(description = "")
  public UUID getNewSectionId() {
    return newSectionId;
  }

  public void setNewSectionId(UUID newSectionId) {
    this.newSectionId = newSectionId;
  }

  public WorkItemMovePostModel nextWorkItemId(UUID nextWorkItemId) {
    this.nextWorkItemId = nextWorkItemId;
    return this;
  }

   /**
   * Get nextWorkItemId
   * @return nextWorkItemId
  **/
  @Schema(description = "")
  public UUID getNextWorkItemId() {
    return nextWorkItemId;
  }

  public void setNextWorkItemId(UUID nextWorkItemId) {
    this.nextWorkItemId = nextWorkItemId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkItemMovePostModel workItemMovePostModel = (WorkItemMovePostModel) o;
    return Objects.equals(this.id, workItemMovePostModel.id) &&
        Objects.equals(this.oldSectionId, workItemMovePostModel.oldSectionId) &&
        Objects.equals(this.newSectionId, workItemMovePostModel.newSectionId) &&
        Objects.equals(this.nextWorkItemId, workItemMovePostModel.nextWorkItemId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, oldSectionId, newSectionId, nextWorkItemId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkItemMovePostModel {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    oldSectionId: ").append(toIndentedString(oldSectionId)).append("\n");
    sb.append("    newSectionId: ").append(toIndentedString(newSectionId)).append("\n");
    sb.append("    nextWorkItemId: ").append(toIndentedString(nextWorkItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
