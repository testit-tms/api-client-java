/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.client;

import ru.testit.model.ParameterModel;
import ru.testit.model.ParameterPostModel;
import ru.testit.model.ParameterPutModel;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for ParametersApi
 */
@Ignore
public class ParametersApiTest {

    private final ParametersApi api = new ParametersApi();

    /**
     * Create parameter
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets parameter model (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates parameter  &lt;br&gt;System returns parameter model
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createParameterTest() throws Exception {
        ParameterPostModel body = null;
        ParameterModel response = api.createParameter(body);

        // TODO: test validations
    }
    /**
     * Delete parameter by name
     *
     * Deletes parameter and all it&#x27;s values
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteByNameTest() throws Exception {
        String name = null;
        api.deleteByName(name);

        // TODO: test validations
    }
    /**
     * Delete parameter by id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets parameter internal (guid format) identifier  &lt;br&gt;System search and delete parameter  &lt;br&gt;System returns deleted parameter
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteParameterTest() throws Exception {
        UUID parameterId = null;
        ParameterModel response = api.deleteParameter(parameterId);

        // TODO: test validations
    }
    /**
     * Get all parameters (if isDeleted is true, return deleted parameters)
     *
     * &lt;br&gt;Use case  &lt;br&gt;[Optional] User sets isDeleted field value  &lt;br&gt;[Optional] If User sets isDeleted field value as true, System search all deleted parameters  &lt;br&gt;[Optional] If User sets isDeleted field value as false, System search all parameters which are not deleted  &lt;br&gt;If User did not set isDeleted field value, System search all parameters  &lt;br&gt;System returns array of all found parameters(listed in response model)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getAllParametersTest() throws Exception {
        Boolean isDeleted = null;
          = null;
          = null;
          = null;
          = null;
          = null;
        List<ParameterModel> response = api.getAllParameters(isDeleted, , , , , );

        // TODO: test validations
    }
    /**
     * Get parameter by id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets parameter internal (guid format) identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search parameter using the identifier  &lt;br&gt;System returns parameter
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getParameterByIdTest() throws Exception {
        UUID parameterId = null;
        ParameterModel response = api.getParameterById(parameterId);

        // TODO: test validations
    }
    /**
     * Delete parameters by name
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets parameter name (string format)  &lt;br&gt;System search and delete parameter  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void obsoleteDeleteByNameTest() throws Exception {
        String name = null;
        api.obsoleteDeleteByName(name);

        // TODO: test validations
    }
    /**
     * Update parameter
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets parameter updated properties(listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System updated parameter using updated properties  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateParameterTest() throws Exception {
        ParameterPutModel body = null;
        api.updateParameter(body);

        // TODO: test validations
    }
}
