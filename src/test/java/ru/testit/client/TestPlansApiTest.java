/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.client;

import ru.testit.model.ProblemDetails;
import ru.testit.model.TestPlanModel;
import ru.testit.model.TestPlanPostModel;
import ru.testit.model.TestPlanPutModel;
import ru.testit.model.TestSuiteV2TreeModel;
import java.util.UUID;
import ru.testit.model.WorkItemSelectModel;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TestPlansApi
 */
@Ignore
public class TestPlansApiTest {

    private final TestPlansApi api = new TestPlansApi();

    /**
     * Add test-points to test suite with sections
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addTestPointsWithSectionsTest() throws Exception {
        UUID testPlanId = null;
        WorkItemSelectModel body = null;
        api.addTestPointsWithSections(testPlanId, body);

        // TODO: test validations
    }
    /**
     * Add WorkItems to TestPlan with Sections as TestSuites
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets TestPlan identifier  &lt;br&gt;User sets WorkItem identifiers (listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System added WorkItems and Sections to TestPlan  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addWorkItemsWithSectionsTest() throws Exception {
        UUID testPlanId = null;
        List<UUID> body = null;
        api.addWorkItemsWithSections(testPlanId, body);

        // TODO: test validations
    }
    /**
     * Clone TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System clones test plan  &lt;br&gt;System returns test plan (listed in response example)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void cloneTest() throws Exception {
        String testPlanId = null;
        TestPlanModel response = api.clone(testPlanId);

        // TODO: test validations
    }
    /**
     * Complete TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System completes the test plan and updates test plan status  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void completeTest() throws Exception {
        String testPlanId = null;
        api.complete(testPlanId);

        // TODO: test validations
    }
    /**
     * Create TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan properties (listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test plan  &lt;br&gt;System returns test plan (listed in response example)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTestPlanTest() throws Exception {
        TestPlanPostModel body = null;
        TestPlanModel response = api.createTestPlan(body);

        // TODO: test validations
    }
    /**
     * Delete TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System delete test plan  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteTestPlanTest() throws Exception {
        String testPlanId = null;
        api.deleteTestPlan(testPlanId);

        // TODO: test validations
    }
    /**
     * Get TestPlan by Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search  test plan by the identifier  &lt;br&gt;System returns test plan
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTestPlanByIdTest() throws Exception {
        String testPlanId = null;
        TestPlanModel response = api.getTestPlanById(testPlanId);

        // TODO: test validations
    }
    /**
     * Get TestSuites Tree By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System finds test suites related to the test plan  &lt;br&gt;System returns test suites as a tree model (listed in response example)
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTestSuitesByIdTest() throws Exception {
        String testPlanId = null;
        List<TestSuiteV2TreeModel> response = api.getTestSuitesById(testPlanId);

        // TODO: test validations
    }
    /**
     * Pause TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System pauses the test plan and updates test plan status  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void pauseTest() throws Exception {
        String testPlanId = null;
        api.pause(testPlanId);

        // TODO: test validations
    }
    /**
     * Restore TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System restores test plan  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void restoreTestPlanTest() throws Exception {
        String testPlanId = null;
        api.restoreTestPlan(testPlanId);

        // TODO: test validations
    }
    /**
     * Start TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System starts the test plan and updates test plan status  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void startTest() throws Exception {
        String testPlanId = null;
        api.start(testPlanId);

        // TODO: test validations
    }
    /**
     * Update TestPlan
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test plan properties(listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System updates test plan  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateTestPlanTest() throws Exception {
        TestPlanPutModel body = null;
        api.updateTestPlan(body);

        // TODO: test validations
    }
}
