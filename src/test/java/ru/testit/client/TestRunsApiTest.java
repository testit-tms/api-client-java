/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.client;

import ru.testit.model.AutoTestResultsForTestRunModel;
import ru.testit.model.TestRunFillByAutoTestsPostModel;
import ru.testit.model.TestRunFillByConfigurationsPostModel;
import ru.testit.model.TestRunFillByWorkItemsPostModel;
import ru.testit.model.TestRunV2GetModel;
import ru.testit.model.TestRunV2PostShortModel;
import ru.testit.model.TestRunV2PutModel;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TestRunsApi
 */
@Ignore
public class TestRunsApiTest {

    private final TestRunsApi api = new TestRunsApi();

    /**
     * Complete TestRun
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System completes test run  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void completeTestRunTest() throws Exception {
        UUID testRunId = null;
        api.completeTestRun(testRunId);

        // TODO: test validations
    }
    /**
     * Create TestRun without TestPoints using ConfigurationIds and AutoTestIds
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run properties (listed in the request example)  &lt;br&gt;User sets relative configuration and workitem ids  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test run  &lt;br&gt;System finds autotests and configurations using ids listed by user  &lt;br&gt;System creates test result by test points which use autotests and configurations  &lt;br&gt;System returns test run model
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAndFillByAutoTestsTest() throws Exception {
        TestRunFillByAutoTestsPostModel body = null;
        TestRunV2GetModel response = api.createAndFillByAutoTests(body);

        // TODO: test validations
    }
    /**
     * Create TestRun with TestPointSelectors based on ConfigurationId and WorkItem Ids
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run properties (listed in the request example)  &lt;br&gt;User sets relative configuration and workitem ids  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test run  &lt;br&gt;System finds workitems and configurations using ids listed by user  &lt;br&gt;System creates test result by test points which use workitems and configurations  &lt;br&gt;System returns test run model
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAndFillByConfigurationsTest() throws Exception {
        TestRunFillByConfigurationsPostModel body = null;
        TestRunV2GetModel response = api.createAndFillByConfigurations(body);

        // TODO: test validations
    }
    /**
     * Create TestRun with TestPoints selected using ConfigurationIds and WorkItem Ids
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run properties (listed in the request example)  &lt;br&gt;User sets relative configuration and workitem ids  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test run  &lt;br&gt;System finds workitems and configurations using ids listed by user  &lt;br&gt;System creates test result by test points which use workitems and configurations  &lt;br&gt;System returns test run model
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createAndFillByWorkItemsTest() throws Exception {
        TestRunFillByWorkItemsPostModel body = null;
        TestRunV2GetModel response = api.createAndFillByWorkItems(body);

        // TODO: test validations
    }
    /**
     * Create empty TestRun
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run model (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test run  &lt;br&gt;System returns test run model
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createEmptyTest() throws Exception {
        TestRunV2PostShortModel body = null;
        TestRunV2GetModel response = api.createEmpty(body);

        // TODO: test validations
    }
    /**
     * Get TestRun by Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System finds test run  &lt;br&gt;System returns test run
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTestRunByIdTest() throws Exception {
        UUID testRunId = null;
        TestRunV2GetModel response = api.getTestRunById(testRunId);

        // TODO: test validations
    }
    /**
     * Set AutoTest Results For TestRun
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run identifier  &lt;br&gt;User sets test result model (listed in request parameters)   &lt;br&gt;User runs method execution  &lt;br&gt;System sets test results of autotest listed in request in test run  &lt;br&gt;System returns array of test results identifiers
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setAutoTestResultsForTestRunTest() throws Exception {
        UUID testRunId = null;
        List<AutoTestResultsForTestRunModel> body = null;
        List<UUID> response = api.setAutoTestResultsForTestRun(testRunId, body);

        // TODO: test validations
    }
    /**
     * Start TestRun
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System starts test run  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void startTestRunTest() throws Exception {
        UUID testRunId = null;
        api.startTestRun(testRunId);

        // TODO: test validations
    }
    /**
     * Stop TestRun
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System stops test run  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void stopTestRunTest() throws Exception {
        UUID testRunId = null;
        api.stopTestRun(testRunId);

        // TODO: test validations
    }
    /**
     * Update empty TestRun
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test run properties (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System updates test run  &lt;br&gt;System returns returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateEmptyTest() throws Exception {
        TestRunV2PutModel body = null;
        api.updateEmpty(body);

        // TODO: test validations
    }
}
