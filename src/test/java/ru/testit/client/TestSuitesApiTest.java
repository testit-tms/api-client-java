/*
 * API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package ru.testit.client;

import ru.testit.model.ConfigurationModel;
import ru.testit.model.TestPointByTestSuiteModel;
import ru.testit.model.TestResultV2ShortModel;
import ru.testit.model.TestSuiteV2GetModel;
import ru.testit.model.TestSuiteV2PostModel;
import ru.testit.model.TestSuiteV2PutModel;
import java.util.UUID;
import ru.testit.model.WorkItemSelectModel;
import ru.testit.model.WorkItemShortModel;
import org.junit.Test;
import org.junit.Ignore;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;


/**
 * API tests for TestSuitesApi
 */
@Ignore
public class TestSuitesApiTest {

    private final TestSuitesApi api = new TestSuitesApi();

    /**
     * Add test-points to test suite
     *
     * 
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void addTestPointsToTestSuiteTest() throws Exception {
        UUID testSuiteId = null;
        WorkItemSelectModel body = null;
        api.addTestPointsToTestSuite(testSuiteId, body);

        // TODO: test validations
    }
    /**
     * Create TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite model (listed in request parameters)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test suite  &lt;br&gt;System returns test suite
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void createTestSuiteTest() throws Exception {
        TestSuiteV2PostModel body = null;
        TestSuiteV2GetModel response = api.createTestSuite(body);

        // TODO: test validations
    }
    /**
     * Delete TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System deletes test suite  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void deleteTestSuiteTest() throws Exception {
        UUID testSuiteId = null;
        String response = api.deleteTestSuite(testSuiteId);

        // TODO: test validations
    }
    /**
     * Get Configurations By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search configurations related to the test points  &lt;br&gt;System returns configurations array
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getConfigurationsByTestSuiteIdTest() throws Exception {
        UUID testSuiteId = null;
        List<ConfigurationModel> response = api.getConfigurationsByTestSuiteId(testSuiteId);

        // TODO: test validations
    }
    /**
     * Get TestPoints By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System returns test points array
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTestPointsByIdTest() throws Exception {
        UUID testSuiteId = null;
        List<TestPointByTestSuiteModel> response = api.getTestPointsById(testSuiteId);

        // TODO: test validations
    }
    /**
     * Get TestResults By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search test results related to the test points  &lt;br&gt;System returns test results array
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTestResultsByIdTest() throws Exception {
        UUID testSuiteId = null;
        List<TestResultV2ShortModel> response = api.getTestResultsById(testSuiteId);

        // TODO: test validations
    }
    /**
     * Get TestSuite by Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System returns test suite
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getTestSuiteByIdTest() throws Exception {
        UUID testSuiteId = null;
        TestSuiteV2GetModel response = api.getTestSuiteById(testSuiteId);

        // TODO: test validations
    }
    /**
     * Get WorkItems By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;[Optional] User sets isDeleted property as true  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search workitems related to the test points  &lt;br&gt;                      [Optional] User sets isDeleted property is set as true, System includes deleted workitems                      Otherwise, system applies filter which excludes deleted workitems from all found workitems                    &lt;br&gt;System returns workitems array
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void getWorkItemsByIdTest() throws Exception {
        UUID testSuiteId = null;
        Boolean isDeleted = null;
        List<String> tagNames = null;
          = null;
          = null;
          = null;
          = null;
          = null;
        List<WorkItemShortModel> response = api.getWorkItemsById(testSuiteId, isDeleted, tagNames, , , , , );

        // TODO: test validations
    }
    /**
     * Set Configurations By TestSuite Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User sets collection of configuration identifiers  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search configuration  &lt;br&gt;System restores(if exist) or creates test points with listed configuration  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setConfigurationsByTestSuiteIdTest() throws Exception {
        UUID testSuiteId = null;
        List<UUID> body = null;
        List<ConfigurationModel> response = api.setConfigurationsByTestSuiteId(testSuiteId, body);

        // TODO: test validations
    }
    /**
     * Set WorkItems By TestSuite Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User sets collection of workitems identifiers  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search workitems  &lt;br&gt;System restores(if exist) or creates test points with listed workitems  &lt;br&gt;System returns no content response
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void setWorkItemsByTestSuiteIdTest() throws Exception {
        UUID testSuiteId = null;
        List<UUID> body = null;
        List<WorkItemShortModel> response = api.setWorkItemsByTestSuiteId(testSuiteId, body);

        // TODO: test validations
    }
    /**
     * Update TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite model (listed in request parameters)  &lt;br&gt;User runs method execution  &lt;br&gt;System updates test suite  &lt;br&gt;System returns test suite
     *
     * @throws Exception
     *          if the Api call fails
     */
    @Test
    public void updateTestSuiteTest() throws Exception {
        TestSuiteV2PutModel body = null;
        TestSuiteV2GetModel response = api.updateTestSuite(body);

        // TODO: test validations
    }
}
