/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ApiV2BackgroundJobsSearchPostRequest;
import ru.testit.client.model.BackgroundJobGetModel;
import ru.testit.client.model.BackgroundJobState;
import ru.testit.client.model.ProblemDetails;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BackgroundJobsApi
 */
@Disabled
public class BackgroundJobsApiTest {

    private final BackgroundJobsApi api = new BackgroundJobsApi();

    /**
     * Delete all completed background jobs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2BackgroundJobsCompletedDeleteTest() throws ApiException {
        api.apiV2BackgroundJobsCompletedDelete();
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2BackgroundJobsGetTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        List<BackgroundJobGetModel> response = api.apiV2BackgroundJobsGet(skip, take, orderBy, searchField, searchValue);
        // TODO: test validations
    }

    /**
     * Cancel current user background job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2BackgroundJobsIdCancelPostTest() throws ApiException {
        UUID id = null;
        api.apiV2BackgroundJobsIdCancelPost(id);
        // TODO: test validations
    }

    /**
     * Get background job by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2BackgroundJobsIdGetTest() throws ApiException {
        UUID id = null;
        BackgroundJobGetModel response = api.apiV2BackgroundJobsIdGet(id);
        // TODO: test validations
    }

    /**
     * Get background job status by job ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2BackgroundJobsIdStatusGetTest() throws ApiException {
        UUID id = null;
        BackgroundJobState response = api.apiV2BackgroundJobsIdStatusGet(id);
        // TODO: test validations
    }

    /**
     * Search for user background jobs
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2BackgroundJobsSearchPostTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        ApiV2BackgroundJobsSearchPostRequest apiV2BackgroundJobsSearchPostRequest = null;
        List<BackgroundJobGetModel> response = api.apiV2BackgroundJobsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2BackgroundJobsSearchPostRequest);
        // TODO: test validations
    }

}
