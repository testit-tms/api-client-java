/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.*;
import ru.testit.client.invoker.auth.*;
import ru.testit.client.model.ConfigurationByParametersModel;
import ru.testit.client.model.ConfigurationModel;
import ru.testit.client.model.ConfigurationPostModel;
import ru.testit.client.model.ConfigurationPutModel;
import ru.testit.client.model.ConfigurationSelectModel;
import ru.testit.client.model.ProblemDetails;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConfigurationsApi
 */
public class ConfigurationsApiTest {

    private final ConfigurationsApi api = new ConfigurationsApi();

    /**
     * Create Configurations by parameters
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets request model (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates configurations  &lt;br&gt;System returns created configuration ids (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ConfigurationsCreateByParametersPostTest() throws ApiException {
        //ConfigurationByParametersModel configurationByParametersModel = null;
        //List<UUID> response = api.apiV2ConfigurationsCreateByParametersPost(configurationByParametersModel);
        // TODO: test validations
    }

    /**
     * Search for configurations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ConfigurationsSearchPostTest() throws ApiException {
        //Integer skip = null;
        //Integer take = null;
        //String orderBy = null;
        //String searchField = null;
        //String searchValue = null;
        //ConfigurationSelectModel configurationSelectModel = null;
        //List<ConfigurationModel> response = api.apiV2ConfigurationsSearchPost(skip, take, orderBy, searchField, searchValue, configurationSelectModel);
        // TODO: test validations
    }

    /**
     * Create Configuration
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets configuration model (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates configuration  &lt;br&gt;System returns created configuration (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createConfigurationTest() throws ApiException {
        //ConfigurationPostModel configurationPostModel = null;
        //ConfigurationModel response = api.createConfiguration(configurationPostModel);
        // TODO: test validations
    }

    /**
     * Get configuration by internal or global ID
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets configuration internal (guid format) or global (integer format) identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search configuration using the identifier  &lt;br&gt;System returns configuration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationByIdTest() throws ApiException {
        //String id = null;
        //ConfigurationModel response = api.getConfigurationById(id);
        // TODO: test validations
    }

    /**
     * Update Configuration
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets configuration updated properties(listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System updated configuration using updated properties  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateConfigurationTest() throws ApiException {
        //ConfigurationPutModel configurationPutModel = null;
        //api.updateConfiguration(configurationPutModel);
        // TODO: test validations
    }

}
