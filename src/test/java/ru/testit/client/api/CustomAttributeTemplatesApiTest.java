/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ApiV2CustomAttributesTemplatesPostRequest;
import ru.testit.client.model.ApiV2CustomAttributesTemplatesPutRequest;
import ru.testit.client.model.ApiV2CustomAttributesTemplatesSearchPostRequest;
import ru.testit.client.model.CustomAttributeTemplateModel;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.SearchCustomAttributeTemplateGetModel;
import java.util.Set;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomAttributeTemplatesApi
 */
@Disabled
public class CustomAttributeTemplatesApiTest {

    private final CustomAttributeTemplatesApi api = new CustomAttributeTemplatesApi();

    /**
     * Exclude CustomAttributes from CustomAttributeTemplate
     *
     *  Use case   User sets attribute template internal identifier   User sets attribute internal identifiers    User runs method execution   System delete attributes from attributes tempalte
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesIdCustomAttributesExcludePostTest() throws ApiException {
        UUID id = null;
        Set<UUID> UUID = null;
        api.apiV2CustomAttributesTemplatesIdCustomAttributesExcludePost(id, UUID);
        // TODO: test validations
    }

    /**
     * Include CustomAttributes to CustomAttributeTemplate
     *
     *  Use case   User sets attribute template internal identifier   User sets attribute internal identifiers    User runs method execution   System add attributes to attributes tempalte
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesIdCustomAttributesIncludePostTest() throws ApiException {
        UUID id = null;
        Set<UUID> UUID = null;
        api.apiV2CustomAttributesTemplatesIdCustomAttributesIncludePost(id, UUID);
        // TODO: test validations
    }

    /**
     * Delete CustomAttributeTemplate
     *
     *  Use case   User sets attribute template internal identifier   User runs method execution   System search and delete attribute template   System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesIdDeleteTest() throws ApiException {
        UUID id = null;
        api.apiV2CustomAttributesTemplatesIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get CustomAttributeTemplate by ID
     *
     *  Use case   User sets attribute template internal identifier    User runs method execution   System return attribute template (listed in response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesIdGetTest() throws ApiException {
        UUID id = null;
        CustomAttributeTemplateModel response = api.apiV2CustomAttributesTemplatesIdGet(id);
        // TODO: test validations
    }

    /**
     * Get CustomAttributeTemplate by name
     *
     *  Use case   User sets attribute template name   User runs method execution   System search and return list of attribute templates (listed in response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesNameGetTest() throws ApiException {
        String name = null;
        CustomAttributeTemplateModel response = api.apiV2CustomAttributesTemplatesNameGet(name);
        // TODO: test validations
    }

    /**
     * Create CustomAttributeTemplate
     *
     *  Use case   User sets attribute template parameters (listed in request example)   User runs method execution   System creates attribute template   System returns attribute template model (example listed in response parameters)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesPostTest() throws ApiException {
        ApiV2CustomAttributesTemplatesPostRequest apiV2CustomAttributesTemplatesPostRequest = null;
        CustomAttributeTemplateModel response = api.apiV2CustomAttributesTemplatesPost(apiV2CustomAttributesTemplatesPostRequest);
        // TODO: test validations
    }

    /**
     * Update custom attributes template
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesPutTest() throws ApiException {
        ApiV2CustomAttributesTemplatesPutRequest apiV2CustomAttributesTemplatesPutRequest = null;
        api.apiV2CustomAttributesTemplatesPut(apiV2CustomAttributesTemplatesPutRequest);
        // TODO: test validations
    }

    /**
     * Search CustomAttributeTemplates
     *
     *  Use case   User sets search params model (listed in request example)   User runs method execution   System return attribute templates (listed in response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2CustomAttributesTemplatesSearchPostTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        ApiV2CustomAttributesTemplatesSearchPostRequest apiV2CustomAttributesTemplatesSearchPostRequest = null;
        List<SearchCustomAttributeTemplateGetModel> response = api.apiV2CustomAttributesTemplatesSearchPost(skip, take, orderBy, searchField, searchValue, apiV2CustomAttributesTemplatesSearchPostRequest);
        // TODO: test validations
    }

}
