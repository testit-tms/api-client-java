/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.CreateProjectsAttributeRequest;
import ru.testit.client.model.CustomAttributeGetModel;
import ru.testit.client.model.CustomAttributeModel;
import ru.testit.client.model.DeletionState;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.SearchAttributesInProjectRequest;
import java.util.UUID;
import ru.testit.client.model.UpdateProjectsAttributeRequest;
import ru.testit.client.model.ValidationProblemDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectAttributesApi
 */
@Disabled
public class ProjectAttributesApiTest {

    private final ProjectAttributesApi api = new ProjectAttributesApi();

    /**
     * Create project attribute
     *
     *  Use case   User sets attribute parameters (listed in request example) and runs method execution   System search project   System creates attribute and relates it to the project   System returns project attribute properties (example listed in response parameters)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectsAttributeTest() throws ApiException {
        String projectId = null;
        CreateProjectsAttributeRequest createProjectsAttributeRequest = null;
        CustomAttributeModel response = api.createProjectsAttribute(projectId, createProjectsAttributeRequest);
        // TODO: test validations
    }

    /**
     * Delete project attribute
     *
     *  Use case   User sets project identifier and runs method execution   User sets attribute identifier   User runs method execution   System search project   System search and delete attribute   System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectsAttributeTest() throws ApiException {
        String projectId = null;
        UUID attributeId = null;
        api.deleteProjectsAttribute(projectId, attributeId);
        // TODO: test validations
    }

    /**
     * Get project attribute
     *
     *  Use case   User sets project internal or global identifier   User sets project attribute identifier   User runs method execution   System search project   System search project attribute    System returns project attribute (listed in response model)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributeByProjectIdTest() throws ApiException {
        String projectId = null;
        UUID attributeId = null;
        CustomAttributeModel response = api.getAttributeByProjectId(projectId, attributeId);
        // TODO: test validations
    }

    /**
     * Get project attributes
     *
     *  Use case   User sets project internal or global identifier   [Optional] User sets isDeleted field value   User runs method execution   System search project   [Optional] If User sets isDeleted field value as true, System search all deleted attributes related to project   [Optional] If User sets isDeleted field value as false, System search all attributes related to project which are not deleted   [Optional] If User did not set isDeleted field value, System search all attributes related to project   System returns array of found attributes (listed in response model)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttributesByProjectIdTest() throws ApiException {
        String projectId = null;
        DeletionState isDeleted = null;
        List<CustomAttributeModel> response = api.getAttributesByProjectId(projectId, isDeleted);
        // TODO: test validations
    }

    /**
     * Search for attributes used in the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchAttributesInProjectTest() throws ApiException {
        String projectId = null;
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        SearchAttributesInProjectRequest searchAttributesInProjectRequest = null;
        List<CustomAttributeGetModel> response = api.searchAttributesInProject(projectId, skip, take, orderBy, searchField, searchValue, searchAttributesInProjectRequest);
        // TODO: test validations
    }

    /**
     * Edit attribute of the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectsAttributeTest() throws ApiException {
        String projectId = null;
        UpdateProjectsAttributeRequest updateProjectsAttributeRequest = null;
        api.updateProjectsAttribute(projectId, updateProjectsAttributeRequest);
        // TODO: test validations
    }

}
