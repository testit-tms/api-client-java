/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ExportProjectJsonRequest;
import ru.testit.client.model.ExportProjectWithTestPlansJsonRequest;
import java.io.File;
import ru.testit.client.model.ProblemDetails;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectExportApi
 */
@Disabled
public class ProjectExportApiTest {

    private final ProjectExportApi api = new ProjectExportApi();

    /**
     * Export project as JSON file
     *
     * &lt;br&gt;This method exports the selected project or its part (sections, work items) to a &#x60;.json&#x60; file.  &lt;br&gt;In the request body, you can specify sections and test cases to be exported.  &lt;br&gt;Example of a request to export two sections and two test cases:  &lt;br&gt;    &#x60;&#x60;&#x60;              curl -X POST \&quot;http://{domain}.com/api/v2/projects/27a32ce6-d972-4ef8-bef5-51be4bf9e468/export\&quot; \\              -H \&quot;accept: application/json\&quot; -H \&quot;Authorization: PrivateToken {token}\&quot; -H \&quot;Content-Type: application/json-patch+json\&quot; \\              -d \&quot;{\\\&quot;sectionIds\\\&quot;:[\\\&quot;3fa85f64-5717-4562-b3fc-2c963f66afa6\\\&quot;,\\\&quot;9fa85f64-5717-4562-b3fc-2c963f66a000\\\&quot;],\\\&quot;workItemIds\\\&quot;:[\\\&quot;3fa85f64-5717-4562-b3fc-2c963f66afa6\\\&quot;,\\\&quot;90085f64-5717-4562-b3fc-2c963f66a000\\\&quot;]}\&quot;              &#x60;&#x60;&#x60;    &lt;br&gt;In the response, you get:  &lt;br&gt;              - A &#x60;.zip&#x60; file with attachments and a.json file if you enable attachments export.&lt;br /&gt;              - A &#x60;.json&#x60; file with the project if you do not enable attachments export.              
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportTest() throws ApiException {
        String projectId = null;
        Boolean includeAttachments = null;
        ExportProjectJsonRequest exportProjectJsonRequest = null;
        File response = api.export(projectId, includeAttachments, exportProjectJsonRequest);
        // TODO: test validations
    }

    /**
     * Export project as JSON file in background job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportProjectJsonTest() throws ApiException {
        String projectId = null;
        Long timeZoneOffsetInMinutes = null;
        ExportProjectJsonRequest exportProjectJsonRequest = null;
        UUID response = api.exportProjectJson(projectId, timeZoneOffsetInMinutes, exportProjectJsonRequest);
        // TODO: test validations
    }

    /**
     * Export project as JSON file with test plans in background job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportProjectWithTestPlansJsonTest() throws ApiException {
        String projectId = null;
        Long timeZoneOffsetInMinutes = null;
        ExportProjectWithTestPlansJsonRequest exportProjectWithTestPlansJsonRequest = null;
        UUID response = api.exportProjectWithTestPlansJson(projectId, timeZoneOffsetInMinutes, exportProjectWithTestPlansJsonRequest);
        // TODO: test validations
    }

    /**
     * Export project as Zip file with test plans in background job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportProjectWithTestPlansZipTest() throws ApiException {
        String projectId = null;
        Long timeZoneOffsetInMinutes = null;
        ExportProjectWithTestPlansJsonRequest exportProjectWithTestPlansJsonRequest = null;
        UUID response = api.exportProjectWithTestPlansZip(projectId, timeZoneOffsetInMinutes, exportProjectWithTestPlansJsonRequest);
        // TODO: test validations
    }

    /**
     * Export project as Zip file in background job
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void exportProjectZipTest() throws ApiException {
        String projectId = null;
        Long timeZoneOffsetInMinutes = null;
        ExportProjectJsonRequest exportProjectJsonRequest = null;
        UUID response = api.exportProjectZip(projectId, timeZoneOffsetInMinutes, exportProjectJsonRequest);
        // TODO: test validations
    }

}
