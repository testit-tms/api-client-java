/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.*;
import ru.testit.client.invoker.auth.*;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.SectionMoveModel;
import ru.testit.client.model.SectionPostModel;
import ru.testit.client.model.SectionPutModel;
import ru.testit.client.model.SectionRenameModel;
import ru.testit.client.model.SectionWithStepsModel;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import ru.testit.client.model.WorkItemShortModel;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SectionsApi
 */
public class SectionsApiTest {

    private final SectionsApi api = new SectionsApi();

    /**
     * Create section
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets section properties (listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates section property values  &lt;br&gt;System returns section (listed in response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSectionTest() throws ApiException {
        //SectionPostModel sectionPostModel = null;
        //SectionWithStepsModel response = api.createSection(sectionPostModel);
        // TODO: test validations
    }

    /**
     * Delete section
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets section identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search section by the identifier  &lt;br&gt;System search and delete nested sections of the found section  &lt;br&gt;System search and delete workitems related to the found nested sections  &lt;br&gt;System deletes initial section and related workitem  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSectionTest() throws ApiException {
        //UUID id = null;
        //api.deleteSection(id);
        // TODO: test validations
    }

    /**
     * Get section
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets section internal (guid format) identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search section by the section identifier  &lt;br&gt;              [Optional] If isDeleted flag equals false, deleted work items are not being searched.              If true, deleted work items are also being searched, null for all work items.                &lt;br&gt;System returns section
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSectionByIdTest() throws ApiException {
        //UUID id = null;
        //Boolean isDeleted = null;
        //SectionWithStepsModel response = api.getSectionById(id, isDeleted);
        // TODO: test validations
    }

    /**
     * Get section work items
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets section identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search section by the identifier  &lt;br&gt;System search work items related to the section  &lt;br&gt;              [Optional] If isDeleted flag equals false, deleted work items are not being searched.              If true, deleted work items are also being searched, null for all work items.                &lt;br&gt;System returns work item collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkItemsBySectionIdTest() throws ApiException {
        //UUID id = null;
        //Boolean isDeleted = null;
        //List<String> tagNames = null;
        //Boolean includeIterations = null;
        //Integer skip = null;
        //Integer take = null;
        //String orderBy = null;
        //String searchField = null;
        //String searchValue = null;
        //List<WorkItemShortModel> response = api.getWorkItemsBySectionId(id, isDeleted, tagNames, includeIterations, skip, take, orderBy, searchField, searchValue);
        // TODO: test validations
    }

    /**
     * Move section
     *
     * &lt;br&gt;Can be moved inside another section. It is possible to indicate a project  &lt;br&gt;Use case  &lt;br&gt;User sets section identifier, old parent identifier, parent identifier and  next section identifier (listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System search section by the identifier  &lt;br&gt;System unlink section from the old parent and links to the new one  &lt;br&gt;System updates section rank using the next section identifier  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void moveTest() throws ApiException {
        //SectionMoveModel sectionMoveModel = null;
        //api.move(sectionMoveModel);
        // TODO: test validations
    }

    /**
     * Rename section
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets section identifier and new name (listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System search section by the identifier  &lt;br&gt;System updates section name using the new name  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renameTest() throws ApiException {
        //SectionRenameModel sectionRenameModel = null;
        //api.rename(sectionRenameModel);
        // TODO: test validations
    }

    /**
     * Update section
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets section properties (listed in request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System search section by the identifier  &lt;br&gt;System updates section using the property values  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSectionTest() throws ApiException {
        //SectionPutModel sectionPutModel = null;
        //api.updateSection(sectionPutModel);
        // TODO: test validations
    }

}
