/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.CreateSectionRequest;
import ru.testit.client.model.DeletionState;
import ru.testit.client.model.MoveRequest;
import ru.testit.client.model.Operation;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.RenameRequest;
import ru.testit.client.model.SectionWithStepsModel;
import java.util.UUID;
import ru.testit.client.model.UpdateSectionRequest;
import ru.testit.client.model.ValidationProblemDetails;
import ru.testit.client.model.WorkItemShortModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SectionsApi
 */
@Disabled
public class SectionsApiTest {

    private final SectionsApi api = new SectionsApi();

    /**
     * Patch section
     *
     * See &lt;a href&#x3D;\&quot;https://www.rfc-editor.org/rfc/rfc6902\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 6902: JavaScript Object Notation (JSON) Patch&lt;/a&gt; for details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2SectionsIdPatchTest() throws ApiException {
        UUID id = null;
        List<Operation> operation = null;
        api.apiV2SectionsIdPatch(id, operation);
        // TODO: test validations
    }

    /**
     * Create section
     *
     *  Use case   User sets section properties (listed in request example)   User runs method execution   System creates section property values   System returns section (listed in response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSectionTest() throws ApiException {
        CreateSectionRequest createSectionRequest = null;
        SectionWithStepsModel response = api.createSection(createSectionRequest);
        // TODO: test validations
    }

    /**
     * Delete section
     *
     *  Use case   User sets section identifier   User runs method execution   System search section by the identifier   System search and delete nested sections of the found section   System search and delete workitems related to the found nested sections   System deletes initial section and related workitem   System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSectionTest() throws ApiException {
        UUID id = null;
        api.deleteSection(id);
        // TODO: test validations
    }

    /**
     * Get section
     *
     *  Use case   User sets section internal (guid format) identifier   User runs method execution   System search section by the section identifier                 [Optional] If isDeleted flag equals false, deleted work items are not being searched.              If true, deleted work items are also being searched, null for all work items.                 System returns section
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSectionByIdTest() throws ApiException {
        UUID id = null;
        DeletionState isDeleted = null;
        SectionWithStepsModel response = api.getSectionById(id, isDeleted);
        // TODO: test validations
    }

    /**
     * Get section work items
     *
     *  Use case   User sets section identifier   User runs method execution   System search section by the identifier   System search work items related to the section                 [Optional] If isDeleted flag equals false, deleted work items are not being searched.              If true, deleted work items are also being searched, null for all work items.                 System returns work item collection
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkItemsBySectionIdTest() throws ApiException {
        UUID id = null;
        Boolean isDeleted = null;
        List<String> tagNames = null;
        Boolean includeIterations = null;
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        List<WorkItemShortModel> response = api.getWorkItemsBySectionId(id, isDeleted, tagNames, includeIterations, skip, take, orderBy, searchField, searchValue);
        // TODO: test validations
    }

    /**
     * Move section with all work items into another section
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void moveTest() throws ApiException {
        MoveRequest moveRequest = null;
        api.move(moveRequest);
        // TODO: test validations
    }

    /**
     * Rename section
     *
     *  Use case   User sets section identifier and new name (listed in request example)   User runs method execution   System search section by the identifier   System updates section name using the new name   System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void renameTest() throws ApiException {
        RenameRequest renameRequest = null;
        api.rename(renameRequest);
        // TODO: test validations
    }

    /**
     * Update section
     *
     *  Use case   User sets section properties (listed in request example)   User runs method execution   System search section by the identifier   System updates section using the property values   System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSectionTest() throws ApiException {
        UpdateSectionRequest updateSectionRequest = null;
        api.updateSection(updateSectionRequest);
        // TODO: test validations
    }

}
