/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ApiV2TagsDeleteRequest;
import ru.testit.client.model.ApiV2TagsPostRequest;
import ru.testit.client.model.ApiV2TagsPutRequest;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.TagModel;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagsApi
 */
@Disabled
public class TagsApiTest {

    private final TagsApi api = new TagsApi();

    /**
     * Delete tags
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets collection of tags internal (guid format) identifiers  &lt;br&gt;System searches and deletes a collection of tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsDeleteTest() throws ApiException {
        ApiV2TagsDeleteRequest apiV2TagsDeleteRequest = null;
        api.apiV2TagsDelete(apiV2TagsDeleteRequest);
        // TODO: test validations
    }

    /**
     * Get all Tags
     *
     * &lt;br&gt;Use case  &lt;br&gt;User runs method execution  &lt;br&gt;System returns tags (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsGetTest() throws ApiException {
        List<TagModel> response = api.apiV2TagsGet();
        // TODO: test validations
    }

    /**
     * Delete tag
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets tag internal (guid format) identifier  &lt;br&gt;System search and delete tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsIdDeleteTest() throws ApiException {
        UUID id = null;
        api.apiV2TagsIdDelete(id);
        // TODO: test validations
    }

    /**
     * Create tag
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets tag model (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates tag  &lt;br&gt;System returns tag model (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsPostTest() throws ApiException {
        ApiV2TagsPostRequest apiV2TagsPostRequest = null;
        TagModel response = api.apiV2TagsPost(apiV2TagsPostRequest);
        // TODO: test validations
    }

    /**
     * Update tag
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets tag ID and model (listed in the request example)  &lt;br&gt;User runs method execution  &lt;br&gt;System updates tag  &lt;br&gt;System returns tag model (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsPutTest() throws ApiException {
        UUID id = null;
        ApiV2TagsPutRequest apiV2TagsPutRequest = null;
        TagModel response = api.apiV2TagsPut(id, apiV2TagsPutRequest);
        // TODO: test validations
    }

    /**
     * Search tags
     *
     * &lt;br&gt;Use case  &lt;br&gt;User runs method execution  &lt;br&gt;System returns collection of tags (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsSearchGetTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        List<TagModel> response = api.apiV2TagsSearchGet(skip, take, orderBy, searchField, searchValue);
        // TODO: test validations
    }

    /**
     * Get all Tags that are used in TestPlans
     *
     * &lt;br&gt;Use case  &lt;br&gt;User runs method execution  &lt;br&gt;System returns tags (listed in the response example)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TagsTestPlansTagsGetTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        List<TagModel> response = api.apiV2TagsTestPlansTagsGet(skip, take, orderBy, searchField, searchValue);
        // TODO: test validations
    }

}
