/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ApiV2TestResultsIdPutRequest;
import ru.testit.client.model.ApiV2TestResultsSearchPostRequest;
import ru.testit.client.model.AttachmentModel;
import java.io.File;
import ru.testit.client.model.ImageResizeType;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.TestResultModel;
import ru.testit.client.model.TestResultShortGetModel;
import ru.testit.client.model.TestResultsStatisticsGetModel;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TestResultsApi
 */
@Disabled
public class TestResultsApiTest {

    private final TestResultsApi api = new TestResultsApi();

    /**
     * Get test result by ID aggregated with previous results
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsIdAggregatedGetTest() throws ApiException {
        UUID id = null;
        TestResultModel response = api.apiV2TestResultsIdAggregatedGet(id);
        // TODO: test validations
    }

    /**
     * Attach file to the test result
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsIdAttachmentsAttachmentIdPutTest() throws ApiException {
        UUID id = null;
        UUID attachmentId = null;
        api.apiV2TestResultsIdAttachmentsAttachmentIdPut(id, attachmentId);
        // TODO: test validations
    }

    /**
     * Get test result attachments meta-information
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsIdAttachmentsInfoGetTest() throws ApiException {
        UUID id = null;
        List<AttachmentModel> response = api.apiV2TestResultsIdAttachmentsInfoGet(id);
        // TODO: test validations
    }

    /**
     * Get test result by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsIdGetTest() throws ApiException {
        UUID id = null;
        TestResultModel response = api.apiV2TestResultsIdGet(id);
        // TODO: test validations
    }

    /**
     * Edit test result by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsIdPutTest() throws ApiException {
        UUID id = null;
        ApiV2TestResultsIdPutRequest apiV2TestResultsIdPutRequest = null;
        api.apiV2TestResultsIdPut(id, apiV2TestResultsIdPutRequest);
        // TODO: test validations
    }

    /**
     * Search for test results
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsSearchPostTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        ApiV2TestResultsSearchPostRequest apiV2TestResultsSearchPostRequest = null;
        List<TestResultShortGetModel> response = api.apiV2TestResultsSearchPost(skip, take, orderBy, searchField, searchValue, apiV2TestResultsSearchPostRequest);
        // TODO: test validations
    }

    /**
     * Search for test results and extract statistics
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestResultsStatisticsFilterPostTest() throws ApiException {
        ApiV2TestResultsSearchPostRequest apiV2TestResultsSearchPostRequest = null;
        TestResultsStatisticsGetModel response = api.apiV2TestResultsStatisticsFilterPost(apiV2TestResultsSearchPostRequest);
        // TODO: test validations
    }

    /**
     * Upload and link attachment to TestResult
     *
     *  Use case   User sets testResultId   User attaches a file   System creates attachment and links it to the test result   System returns attachment identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAttachmentTest() throws ApiException {
        UUID id = null;
        File _file = null;
        api.createAttachment(id, _file);
        // TODO: test validations
    }

    /**
     * Remove attachment and unlink from TestResult
     *
     *  Use case   User sets testResultId and attachmentId   User attaches a file   User runs method execution   System deletes attachment and unlinks it from the test result   System returns attachment identifier
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAttachmentTest() throws ApiException {
        UUID id = null;
        UUID attachmentId = null;
        api.deleteAttachment(id, attachmentId);
        // TODO: test validations
    }

    /**
     * Get attachment of TestResult
     *
     *  Use case   User sets attachmentId and testResultId   [Optional] User sets resize configuration   User runs method execution   System search attachments by the attachmentId and the testResultId                         [Optional] If resize configuration is set, System resizes the attachment according to the resize                      configuration                     [Optional] Otherwise, System does not resize the attachment   System returns attachment as a file
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadAttachmentTest() throws ApiException {
        UUID attachmentId = null;
        UUID id = null;
        Integer width = null;
        Integer height = null;
        ImageResizeType resizeType = null;
        String backgroundColor = null;
        Boolean preview = null;
        api.downloadAttachment(attachmentId, id, width, height, resizeType, backgroundColor, preview);
        // TODO: test validations
    }

    /**
     * Get Metadata of TestResult&#39;s attachment
     *
     *  Use case   User sets attachmentId and testResultId   User runs method execution   System search attachment by the attachmentId and the testResultId   System returns attachment data
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttachmentTest() throws ApiException {
        UUID id = null;
        UUID attachmentId = null;
        AttachmentModel response = api.getAttachment(id, attachmentId);
        // TODO: test validations
    }

    /**
     * Get all attachments of TestResult
     *
     *  Use case   User sets testResultId   User runs method execution   System search all attachments of the test result   System returns attachments enumeration
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttachmentsTest() throws ApiException {
        UUID id = null;
        List<AttachmentModel> response = api.getAttachments(id);
        // TODO: test validations
    }

}
