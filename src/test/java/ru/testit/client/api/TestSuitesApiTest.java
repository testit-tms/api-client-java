/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ApiV2ProjectsProjectIdWorkItemsSearchPostRequest;
import ru.testit.client.model.ApiV2TestSuitesPostRequest;
import ru.testit.client.model.ApiV2TestSuitesPutRequest;
import ru.testit.client.model.ConfigurationModel;
import ru.testit.client.model.Operation;
import ru.testit.client.model.ProblemDetails;
import ru.testit.client.model.SearchWorkItemsRequest;
import java.util.Set;
import ru.testit.client.model.TestPointByTestSuiteModel;
import ru.testit.client.model.TestResultV2ShortModel;
import ru.testit.client.model.TestSuiteV2GetModel;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import ru.testit.client.model.WorkItemShortModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TestSuitesApi
 */
@Disabled
public class TestSuitesApiTest {

    private final TestSuitesApi api = new TestSuitesApi();

    /**
     * Add test-points to test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTestPointsToTestSuiteTest() throws ApiException {
        UUID id = null;
        ApiV2ProjectsProjectIdWorkItemsSearchPostRequest apiV2ProjectsProjectIdWorkItemsSearchPostRequest = null;
        api.addTestPointsToTestSuite(id, apiV2ProjectsProjectIdWorkItemsSearchPostRequest);
        // TODO: test validations
    }

    /**
     * Patch test suite
     *
     * See &lt;a href&#x3D;\&quot;https://www.rfc-editor.org/rfc/rfc6902\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RFC 6902: JavaScript Object Notation (JSON) Patch&lt;/a&gt; for details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestSuitesIdPatchTest() throws ApiException {
        UUID id = null;
        List<Operation> operation = null;
        api.apiV2TestSuitesIdPatch(id, operation);
        // TODO: test validations
    }

    /**
     * Refresh test suite. Only dynamic test suites are supported by this method
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestSuitesIdRefreshPostTest() throws ApiException {
        UUID id = null;
        api.apiV2TestSuitesIdRefreshPost(id);
        // TODO: test validations
    }

    /**
     * Set work items for test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestSuitesIdWorkItemsPostTest() throws ApiException {
        UUID id = null;
        Set<UUID> UUID = null;
        api.apiV2TestSuitesIdWorkItemsPost(id, UUID);
        // TODO: test validations
    }

    /**
     * Create test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestSuitesPostTest() throws ApiException {
        ApiV2TestSuitesPostRequest apiV2TestSuitesPostRequest = null;
        TestSuiteV2GetModel response = api.apiV2TestSuitesPost(apiV2TestSuitesPostRequest);
        // TODO: test validations
    }

    /**
     * Edit test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2TestSuitesPutTest() throws ApiException {
        ApiV2TestSuitesPutRequest apiV2TestSuitesPutRequest = null;
        api.apiV2TestSuitesPut(apiV2TestSuitesPutRequest);
        // TODO: test validations
    }

    /**
     * Delete TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System deletes test suite  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTestSuiteTest() throws ApiException {
        UUID id = null;
        api.deleteTestSuite(id);
        // TODO: test validations
    }

    /**
     * Get Configurations By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search configurations related to the test points  &lt;br&gt;System returns configurations array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationsByTestSuiteIdTest() throws ApiException {
        UUID id = null;
        List<ConfigurationModel> response = api.getConfigurationsByTestSuiteId(id);
        // TODO: test validations
    }

    /**
     * Get TestPoints By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System returns test points array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestPointsByIdTest() throws ApiException {
        UUID id = null;
        List<TestPointByTestSuiteModel> response = api.getTestPointsById(id);
        // TODO: test validations
    }

    /**
     * Get TestResults By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search test results related to the test points  &lt;br&gt;System returns test results array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestResultsByIdTest() throws ApiException {
        UUID id = null;
        List<TestResultV2ShortModel> response = api.getTestResultsById(id);
        // TODO: test validations
    }

    /**
     * Get TestSuite by Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System returns test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestSuiteByIdTest() throws ApiException {
        UUID id = null;
        TestSuiteV2GetModel response = api.getTestSuiteById(id);
        // TODO: test validations
    }

    /**
     * Search WorkItems
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;[Optional] User sets filter  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search work items related to the test points  &lt;br&gt;                      [Optional] User sets filter, system applies filter                    &lt;br&gt;System returns work items array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchWorkItemsTest() throws ApiException {
        UUID id = null;
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        SearchWorkItemsRequest searchWorkItemsRequest = null;
        List<WorkItemShortModel> response = api.searchWorkItems(id, skip, take, orderBy, searchField, searchValue, searchWorkItemsRequest);
        // TODO: test validations
    }

    /**
     * Set Configurations By TestSuite Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User sets collection of configuration identifiers  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search configuration  &lt;br&gt;System restores(if exist) or creates test points with listed configuration  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setConfigurationsByTestSuiteIdTest() throws ApiException {
        UUID id = null;
        Set<UUID> UUID = null;
        api.setConfigurationsByTestSuiteId(id, UUID);
        // TODO: test validations
    }

}
