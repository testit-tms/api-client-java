/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.*;
import ru.testit.client.invoker.auth.*;
import ru.testit.client.model.ConfigurationModel;
import java.util.Set;
import ru.testit.client.model.TestPointByTestSuiteModel;
import ru.testit.client.model.TestResultV2ShortModel;
import ru.testit.client.model.TestSuiteV2GetModel;
import ru.testit.client.model.TestSuiteV2PostModel;
import ru.testit.client.model.TestSuiteV2PutModel;
import java.util.UUID;
import ru.testit.client.model.WorkItemSelectModel;
import ru.testit.client.model.WorkItemShortModel;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TestSuitesApi
 */
public class TestSuitesApiTest {

    private final TestSuitesApi api = new TestSuitesApi();

    /**
     * Add test-points to test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTestPointsToTestSuiteTest() throws ApiException {
        //UUID id = null;
        //WorkItemSelectModel workItemSelectModel = null;
        //api.addTestPointsToTestSuite(id, workItemSelectModel);
        // TODO: test validations
    }

    /**
     * Create TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite model (listed in request parameters)  &lt;br&gt;User runs method execution  &lt;br&gt;System creates test suite  &lt;br&gt;System returns test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTestSuiteTest() throws ApiException {
        //TestSuiteV2PostModel testSuiteV2PostModel = null;
        //TestSuiteV2GetModel response = api.createTestSuite(testSuiteV2PostModel);
        // TODO: test validations
    }

    /**
     * Delete TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System deletes test suite  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteTestSuiteTest() throws ApiException {
        //UUID id = null;
        //String response = api.deleteTestSuite(id);
        // TODO: test validations
    }

    /**
     * Get Configurations By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search configurations related to the test points  &lt;br&gt;System returns configurations array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationsByTestSuiteIdTest() throws ApiException {
        //UUID id = null;
        //List<ConfigurationModel> response = api.getConfigurationsByTestSuiteId(id);
        // TODO: test validations
    }

    /**
     * Get TestPoints By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System returns test points array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestPointsByIdTest() throws ApiException {
        //UUID id = null;
        //List<TestPointByTestSuiteModel> response = api.getTestPointsById(id);
        // TODO: test validations
    }

    /**
     * Get TestResults By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search test results related to the test points  &lt;br&gt;System returns test results array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestResultsByIdTest() throws ApiException {
        //UUID id = null;
        //List<TestResultV2ShortModel> response = api.getTestResultsById(id);
        // TODO: test validations
    }

    /**
     * Get TestSuite by Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System returns test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTestSuiteByIdTest() throws ApiException {
        //UUID id = null;
        //TestSuiteV2GetModel response = api.getTestSuiteById(id);
        // TODO: test validations
    }

    /**
     * Get WorkItems By Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;[Optional] User sets isDeleted property as true  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search workitems related to the test points  &lt;br&gt;                      [Optional] User sets isDeleted property is set as true, System includes deleted workitems                      Otherwise, system applies filter which excludes deleted workitems from all found workitems                    &lt;br&gt;System returns workitems array
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkItemsByIdTest() throws ApiException {
        //UUID id = null;
        //Boolean isDeleted = null;
        //List<String> tagNames = null;
        //Integer skip = null;
        //Integer take = null;
        //String orderBy = null;
        //String searchField = null;
        //String searchValue = null;
        //List<WorkItemShortModel> response = api.getWorkItemsById(id, isDeleted, tagNames, skip, take, orderBy, searchField, searchValue);
        // TODO: test validations
    }

    /**
     * Set Configurations By TestSuite Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User sets collection of configuration identifiers  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search configuration  &lt;br&gt;System restores(if exist) or creates test points with listed configuration  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setConfigurationsByTestSuiteIdTest() throws ApiException {
        //UUID id = null;
        //Set<UUID> UUID = null;
        //List<ConfigurationModel> response = api.setConfigurationsByTestSuiteId(id, UUID);
        // TODO: test validations
    }

    /**
     * Set WorkItems By TestSuite Id
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite identifier  &lt;br&gt;User sets collection of workitems identifiers  &lt;br&gt;User runs method execution  &lt;br&gt;System search test suite by identifier  &lt;br&gt;System search test points related to the test suite  &lt;br&gt;System search workitems  &lt;br&gt;System restores(if exist) or creates test points with listed workitems  &lt;br&gt;System returns no content response
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setWorkItemsByTestSuiteIdTest() throws ApiException {
        //UUID id = null;
        //Set<UUID> UUID = null;
        //List<WorkItemShortModel> response = api.setWorkItemsByTestSuiteId(id, UUID);
        // TODO: test validations
    }

    /**
     * Update TestSuite
     *
     * &lt;br&gt;Use case  &lt;br&gt;User sets test suite model (listed in request parameters)  &lt;br&gt;User runs method execution  &lt;br&gt;System updates test suite  &lt;br&gt;System returns test suite
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTestSuiteTest() throws ApiException {
        //TestSuiteV2PutModel testSuiteV2PutModel = null;
        //TestSuiteV2GetModel response = api.updateTestSuite(testSuiteV2PutModel);
        // TODO: test validations
    }

}
