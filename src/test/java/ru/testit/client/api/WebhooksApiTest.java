/*
 * API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package ru.testit.client.api;

import ru.testit.client.invoker.ApiException;
import ru.testit.client.model.ApiV2WebhooksPostRequest;
import ru.testit.client.model.ApiV2WebhooksSearchPostRequest;
import ru.testit.client.model.ApiV2WebhooksTestPostRequest;
import ru.testit.client.model.ProblemDetails;
import java.util.UUID;
import ru.testit.client.model.ValidationProblemDetails;
import ru.testit.client.model.WebHookEventType;
import ru.testit.client.model.WebHookModel;
import ru.testit.client.model.WebhookResponse;
import ru.testit.client.model.WebhookVariablesType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhooksApi
 */
@Disabled
public class WebhooksApiTest {

    private final WebhooksApi api = new WebhooksApi();

    /**
     * Get all webhooks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksGetTest() throws ApiException {
        UUID projectId = null;
        List<WebHookModel> response = api.apiV2WebhooksGet(projectId);
        // TODO: test validations
    }

    /**
     * Delete webhook by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksIdDeleteTest() throws ApiException {
        UUID id = null;
        api.apiV2WebhooksIdDelete(id);
        // TODO: test validations
    }

    /**
     * Get webhook by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksIdGetTest() throws ApiException {
        UUID id = null;
        WebHookModel response = api.apiV2WebhooksIdGet(id);
        // TODO: test validations
    }

    /**
     * Edit webhook by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksIdPutTest() throws ApiException {
        UUID id = null;
        ApiV2WebhooksPostRequest apiV2WebhooksPostRequest = null;
        WebHookModel response = api.apiV2WebhooksIdPut(id, apiV2WebhooksPostRequest);
        // TODO: test validations
    }

    /**
     * Create webhook
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksPostTest() throws ApiException {
        ApiV2WebhooksPostRequest apiV2WebhooksPostRequest = null;
        WebHookModel response = api.apiV2WebhooksPost(apiV2WebhooksPostRequest);
        // TODO: test validations
    }

    /**
     * Search for webhooks
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksSearchPostTest() throws ApiException {
        Integer skip = null;
        Integer take = null;
        String orderBy = null;
        String searchField = null;
        String searchValue = null;
        ApiV2WebhooksSearchPostRequest apiV2WebhooksSearchPostRequest = null;
        List<WebHookModel> response = api.apiV2WebhooksSearchPost(skip, take, orderBy, searchField, searchValue, apiV2WebhooksSearchPostRequest);
        // TODO: test validations
    }

    /**
     * Get special variables for webhook event type
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksSpecialVariablesGetTest() throws ApiException {
        WebHookEventType eventType = null;
        WebhookVariablesType variablesType = null;
        List<String> response = api.apiV2WebhooksSpecialVariablesGet(eventType, variablesType);
        // TODO: test validations
    }

    /**
     * Test webhook&#39;s url
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2WebhooksTestPostTest() throws ApiException {
        ApiV2WebhooksTestPostRequest apiV2WebhooksTestPostRequest = null;
        WebhookResponse response = api.apiV2WebhooksTestPost(apiV2WebhooksTestPostRequest);
        // TODO: test validations
    }

}
